<?xml version="1.0"?>
<doc>
    <assembly>
        <name>C1.Win.C1Chart3D.4.5.2</name>
    </assembly>
    <members>
        <member name="M:GrapeCity.Common.GcNetFxLicenseProvider`1.VerifyDesignTimeEnvironment">
            <summary>
              Verify the environment to get whether the component is in design-time. 
            </summary>
            <returns>
              <c>true</c> if it is in design-time; otherwise <c>false</c>.
            </returns>
            <remarks>
              In DesignTime, because of IDE bugs, some component are not created with DesigntimeLicenseContext. 
              For example, when drag a control from Win Forms DataSource tool window, or use a web control in a ASP.NET Template.
              This may cause the control do run-time license validation and found that there is no license.
              To resolve this problem, we will check the environment and decide whether to do design-time license validation again.
            </remarks>
        </member>
        <member name="F:GrapeCity.Common.LicenseDialog`1.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GrapeCity.Common.LicenseDialog`1.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GrapeCity.Common.LicenseDialog`1.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:GrapeCity.Common.Resources.LicenseResource">
            <summary>
              Contains the resource for PowerToolsLicenseProvider
            </summary>
        </member>
        <member name="P:GrapeCity.Common.Resources.LicenseResource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:GrapeCity.Common.Resources.LicenseResource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:GrapeCity.Common.Resources.LicenseResource.ErrorIcon">
            <summary>
              Gets the Error icon for license dialog.
            </summary>
        </member>
        <member name="P:GrapeCity.Common.Resources.LicenseResource.InfoIcon">
            <summary>
              Gets the Info icon for license dialog.
            </summary>
        </member>
        <member name="P:GrapeCity.Common.Resources.LicenseResource.WarningIcon">
            <summary>
              Gets the Warning icon for license dialog.
            </summary>
        </member>
        <member name="P:GrapeCity.Common.Resources.LicenseResource.GrapeCityIcon">
            <summary>
              Gets the GrapeCity icon for license dialog.
            </summary>
        </member>
        <member name="M:GrapeCity.Common.Resources.LicenseResource.GetString(System.String)">
            <summary>
              Gets the localized string.
            </summary>
            <param name="name">
              The name of the string. It could be a const value in <see cref="T:GrapeCity.Common.Resources.LicenseResource"/>.
            </param>
            <returns>
              The localized string.
            </returns>
        </member>
        <member name="M:GrapeCity.Common.Resources.LicenseResource.GetString(System.String,System.Object[])">
            <summary>
              Gets the localized string.
            </summary>
            <param name="name">
              The name of the string. It could be a const value in <see cref="T:GrapeCity.Common.Resources.LicenseResource"/>.
            </param>
            <param name="args">
              The data used in the string.
            </param>
            <returns>
              The localized string.
            </returns>
        </member>
        <member name="M:GrapeCity.Common.Resources.LicenseResource.GetAssemblyFileVersion(System.Reflection.Assembly)">
            <summary>
              Get the file version description of the specified assembly.
            </summary>
            <param name="assembly">
              The <see cref="T:System.Reflection.Assembly"/> whose file version description should be get.
            </param>
            <returns>
              A <see cref="T:System.String"/> indicates the file version description of the specified assembly.
            </returns>
        </member>
        <member name="M:GrapeCity.Common.Resources.LicenseResource.GetAssemblyName(System.Reflection.Assembly)">
            <summary>
              Get the name of the specified assembly.
            </summary>
            <param name="assembly">
              The <see cref="T:System.Reflection.Assembly"/> whose name should be get.
            </param>
            <returns>
              A <see cref="T:System.String"/> indicates the name of the specified assembly.
            </returns>
            <remarks>
              Please use this method to get assembly name. It is because that the Assembly.GetName method need FileIO permission.
            </remarks>
        </member>
        <member name="M:GrapeCity.Common.Resources.LicenseResource.FormatSerialKey(System.String)">
            <summary>
              Format the product key as "xxxx-xxxx-xxxx-xxxx-xxxx-xxxx".
            </summary>
            <param name="productKey">
              A <see cref="T:System.String"/> indicates the original product key which is a sequence of 24 digits.
            </param>
            <returns>
              A readable text indicates the product key.
            </returns>
        </member>
        <member name="T:GrapeCity.Common.Resources.LicenseDialogKind">
            <summary>
              Represents the kind of license dialog.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogKind.Info">
            <summary>
              Info dialog. It is shown for a trial license.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogKind.Warning">
            <summary>
              Warning dialog. It is shown for a trial license which is expired.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogKind.Error">
            <summary>
              Error dialog. It is shown for an invalid license or other errors.
            </summary>
        </member>
        <member name="T:GrapeCity.Common.Resources.LicenseDialogWebLinkTarget">
            <summary>
              Represents the target web site for the link in license dialog.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogWebLinkTarget.None">
            <summary>
              None target.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogWebLinkTarget.GotoWebFAQ">
            <summary>
              Goto web site http://www.grapecity.com/support/portal/.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogWebLinkTarget.GotoWebActivation">
            <summary>
              Goto web site http://www.grapecity.com/componentone/.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogWebLinkTarget.GotoWebShop">
            <summary>
              Goto web site http://www.grapecity.com/pricing/componentone/.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogWebLinkTarget.GotoHowToActivate">
            <summary>
              Goto web site http://www.grapecity.com/componentone/docs/license/online-license/overview.html.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogWebLinkTarget.GotoLicenseRenewal">
            <summary>
              Goto web site https://www.grapecity.com/sales/componentone-faq/.
            </summary>
        </member>
        <member name="T:GrapeCity.Common.WinFormLicenseProvider`1">
            <summary>
              Represents a license provider of a Windows Forms PowerTools component.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.Dock_SizeMode">
            <summary>
            Used in:
            C1DockingTab\Style
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Dock_SizeMode.Normal">
            <summary>
            Borders are shown only for headers of columns.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Dock_SizeMode.Fit">
            <summary>
            No borders.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Dock_SizeMode.FillToEnd">
            <summary>
            Only left and right borders of columns are shown.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.TreeViewBorderStyleEnum">
            <summary>
            Used in:
            C1TreeView\Style
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.TreeViewBorderStyleEnum.ColumnsHeaderOnly">
            <summary>
            Borders are shown only for headers of columns.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.TreeViewBorderStyleEnum.None">
            <summary>
            No borders.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.TreeViewBorderStyleEnum.ColumnsLineOnly">
            <summary>
            Only left and right borders of columns are shown.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.TreeViewBorderStyleEnum.Full">
            <summary>
            Borders are shown for all cells.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.CheckBoxStyleEnum">
            <summary>
            Used in:
            C1TreeView\Style
            C1MultiSelect\C1CheckList\Style
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.CheckBoxStyleEnum.System">
            <summary>
            Standard system view.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.CheckBoxStyleEnum.Office2007Black">
            <summary>
            Like a MS Office 2007 Black.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.CheckBoxStyleEnum.Office2007Blue">
            <summary>
            Like a MS Office 2007 Blue.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.CheckBoxStyleEnum.Office2007Silver">
            <summary>
            Like a MS Office 2007 Silver.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.CheckBoxStyleEnum.Office2010Black">
            <summary>
            Like a MS Office 2010 Black.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.CheckBoxStyleEnum.Office2010Blue">
            <summary>
            Like a MS Office 2010 Blue.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.CheckBoxStyleEnum.Office2010Silver">
            <summary>
            Like a MS Office 2010 Silver.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.CheckBoxStyleEnum.Office2013">
            <summary>
            Like a MS Office 2013.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.CheckBoxStyleEnum.Windows10">
            <summary>
            Like a Windows 10.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.BackgroundPictureDrawModeEnum">
            <summary>
            Used in:
            C1TrueDBGrid\Style
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundPictureDrawModeEnum.Center">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundPictureDrawModeEnum.Stretch">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundPictureDrawModeEnum.Tile">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundPictureDrawModeEnum.Fill">
            <summary>
            The image is stretched and aspect ratio is saved.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.BorderType">
            <summary>
            Used in:
            C1TrueDBGrid\GridBorder
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BorderType.None">
            <summary>
            No borders.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BorderType.Flat">
            <summary>
            Borders have a Flat appearance.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BorderType.Raised">
            <summary>
            Borders have a 3D raised appearance.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BorderType.Inset">
            <summary>
            Borders have a 3D inset appearance.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BorderType.Groove">
            <summary>
            A line around the inside of the border.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BorderType.Fillet">
            <summary>
            A fillet type border.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BorderType.RaisedBevel">
            <summary>
            Borders have a 3D raised with a bevel.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BorderType.InsetBevel">
            <summary>
            Borders have a 3D inset with a bevel.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ForegroundPicturePosition">
            <summary>
            Used in:
            C1TrueDBGrid\Style
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ForegroundPicturePosition.Near">
            <summary>
            Image is rendered in the near side of the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ForegroundPicturePosition.Far">
            <summary>
            Image is rendered in the far side of the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ForegroundPicturePosition.LeftOfText">
            <summary>
            Image is rendered to the left of any text in the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ForegroundPicturePosition.RightOfText">
            <summary>
            Image is rendered to the right of any text in the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ForegroundPicturePosition.TopOfText">
            <summary>
            Image is rendered on top of any text in the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ForegroundPicturePosition.BottomOfText">
            <summary>
            Image is rendered below any text in the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ForegroundPicturePosition.PictureOnly">
            <summary>
            Text is not displayed.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ForegroundPicturePosition.TextOnly">
            <summary>
            Image is not displayed.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.AlignHorzEnum">
            <summary>
            Used in:
            C1TrueDBGrid\Style
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.AlignHorzEnum.General">
            <summary>
            Text is aligned Near and numeric values Far
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.AlignHorzEnum.Near">
            <summary>
            Text is aligned to the left.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.AlignHorzEnum.Center">
            <summary>
            Text is aligned centered.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.AlignHorzEnum.Far">
            <summary>
            Text is aligned to the right.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.AlignHorzEnum.Justify">
            <summary>
            Text is aligned with respect to the cells boundries.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.AlignVertEnum">
            <summary>
            Used in:
            C1TrueDBGrid\Style
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.AlignVertEnum.Top">
            <summary>
            Text is rendered at the top of the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.AlignVertEnum.Center">
            <summary>
            Text is rendered at the center of the cell.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.AlignVertEnum.Bottom">
            <summary>
            Text is rendered at the bottom of the cell.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.LineStyle">
            <summary>
            Used in:
            C1TrueDBGrid\GridLines
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.LineStyle.None">
            <summary>
            No line.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.LineStyle.Single">
            <summary>
            Single line.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.LineStyle.Double">
            <summary>
            Double line.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.LineStyle.Raised">
            <summary>
            Line with 3D raised appearance.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.LineStyle.Inset">
            <summary>
            Line with 3D inset appearance.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.PaletteType">
            <summary>
            Used in:
            C1Schedule\PaletteType
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.PaletteType.Office2007">
            <summary>
            Office 2007 palette includes back and border colors 
            of free and working hours and days, day headers, grid borders 
            and calendar tabs. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.PaletteType.Office2010">
            <summary>
            Office 2010 palette includes back and border colors 
            of free and working hours and days, day headers, grid borders 
            and calendar tabs. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.PaletteType.Office2016">
            <summary>
            Office 2016 palette includes accent color to use in calendar headers and additional darker color for current day.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.PaletteType.Office2016Dark">
            <summary>
            Office 2016 dark palette includes accent color to use in calendar headers and additional darker color for current day.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.GroupTabStyle">
            <summary>
            Used in:
            C1Schedule\GroupTabStyle
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.GroupTabStyle.FullWidth">
            <summary>
            Group headers of rectangular shape take the full width of the corresponding group.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.GroupTabStyle.Office2007">
            <summary>
            Group headers of Office2007 appearance.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.GroupTabStyle.Office2016">
            <summary>
            Group headers of Office2016 appearance.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.WeekTabStyle">
            <summary>
            Used in:
            C1Schedule\WeekTabStyle
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.WeekTabStyle.Office2007">
            <summary>
            Week tabs of Office2007 appearance.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.WeekTabStyle.Office2016">
            <summary>
            Week tabs of Office2016 appearance.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundGradient.None">
            <summary>
            Use no background gradient.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundGradient.Automatic">
            <summary>
            Use a gradient that matches the current system Visual Style.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundGradient.Silver">
            <summary>
            Use a silver background gradient.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundGradient.Blue">
            <summary>
            Use a blue background gradient.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundGradient.Gold">
            <summary>
            Use a gold background gradient.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundGradient.Olive">
            <summary>
            Use an olive background gradient.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.BackgroundGradient.Vista">
            <summary>
            Use the Vista-style background gradient.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.GradientMode.None">
            <summary>
            No gradient.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.GradientMode.Horizontal">
            <summary>
            Horizontal gradient (left to right).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.GradientMode.Vertical">
            <summary>
            Vertical gradient (top to bottom).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.GradientMode.DiagonalDown">
            <summary>
            Diagonal gradient (left-top to right-bottom).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.GradientMode.DiagonalUp">
            <summary>
            Diagonal gradient (left-bottom to right-top).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.GradientMode.Radial">
            <summary>
            Radial gradient.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageAlignment.LeftTop">
            <summary>
            Image is vertically aligned at the top, 
            and horizontally aligned on the left. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageAlignment.CenterTop">
            <summary>
            Image is vertically aligned at the top, 
            and horizontally aligned at the center.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageAlignment.RightTop">
            <summary>
            Image is vertically aligned at the top, 
            and horizontally aligned on the right. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageAlignment.LeftCenter">
            <summary>
            Image is vertically aligned in the middle, 
            and horizontally aligned on the left. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageAlignment.CenterCenter">
            <summary>
            Image is vertically aligned in the middle, 
            and horizontally aligned at the center. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageAlignment.RightCenter">
            <summary>
            Image is vertically aligned in the middle, 
            and horizontally aligned on the right. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageAlignment.LeftBottom">
            <summary>
            Image is vertically aligned at the bottom, 
            and horizontally aligned on the left. 		
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageAlignment.CenterBottom">
            <summary>
            Image is vertically aligned at the bottom, 
            and horizontally aligned at the center.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageAlignment.RightBottom">
            <summary>
            Image is vertically aligned at the bottom, 
            and horizontally aligned on the right. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageScaling.Clip">
            <summary>
            Use the image's original size, clipping it to the display area if necessary.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageScaling.Stretch">
            <summary>
            Stretch the image to fill the display area. 
            This mode will usually change the image's aspect ratio.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageScaling.Scale">
            <summary>
            Scale the image to fit the display area. 
            This mode may increase or reduce the size of the image 
            while maintaining its aspect ratio.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageScaling.Tile">
            <summary>
            Tile the image to fill the display area.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageScaling.TileStretch">
            <summary>
            Tile the image into the 3x3 matrix and stretch it to fill the display area.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageScaling.TileStretchHorizontal">
            <summary>
            Tile the image into the row of 3 images and stretch it to fill the display area.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageScaling.TileStretchVertical">
            <summary>
            Tile the image into the column of 3 images and stretch it to fill the display area.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageScaling.Hide">
            <summary>
            Hide the image.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Alignment.NotSet">
            <summary>
            Default value.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Alignment.Near">
            <summary>
            Near.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Alignment.Far">
            <summary>
            Far.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Alignment.Center">
            <summary>
            Center.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Alignment.Spread">
            <summary>
            Spread.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.TextDirection.Normal">
            <summary>
            Text is drawn in the horizontal direction, left to right.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.TextDirection.Up">
            <summary>
            Text is draw vertically, from the bottom up.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.TextDirection.Down">
            <summary>
            Text is draw vertically, from the top down.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.RadialMenuTooltipPosition.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.RadialMenuTooltipPosition.Left">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.RadialMenuTooltipPosition.Top">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.RadialMenuTooltipPosition.Right">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.RadialMenuTooltipPosition.Bottom">
            <summary>For internal use.</summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ImageSetEnum">
            <summary>
            Describes the image set used for toolbar images of the
            preview actions.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageSetEnum.Classic">
            <summary>
            Classic image set.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageSetEnum.Flat">
            <summary>
            Flat image set.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageSetEnum.XP">
            <summary>
            XP image set.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageSetEnum.XP2">
            <summary>
            XP alternative image set.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageSetEnum.XP3">
            <summary>
            XP second alternative image set.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageSetEnum.Adobe">
            <summary>
            Adobe image set.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageSetEnum.OsX">
            <summary>
            Os X image set.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ImageSetEnum.Original">
            <summary>
            Original (C1Preview "classic") image set.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderDirEnum.Both">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderDirEnum.Horizontal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderDirEnum.Vertical">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderStyleEnum.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderStyleEnum.Flat">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderStyleEnum.Double">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderStyleEnum.Raised">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderStyleEnum.Inset">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderStyleEnum.Groove">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderStyleEnum.Fillet">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_BorderStyleEnum.Dotted">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_DisplayEnum.TextOnly">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_DisplayEnum.ImageOnly">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_DisplayEnum.Overlay">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_DisplayEnum.Stack">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_DisplayEnum.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.LeftTop">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.LeftCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.LeftBottom">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.CenterTop">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.CenterCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.CenterBottom">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.RightTop">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.RightCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.RightBottom">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.Scale">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.Stretch">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.Tile">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.Hide">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_ImageAlignEnum.TileStretch">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.LeftTop">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.LeftCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.LeftBottom">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.CenterTop">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.CenterCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.CenterBottom">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.RightTop">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.RightCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.RightBottom">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.GeneralTop">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.GeneralCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextAlignEnum.GeneralBottom">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextDirectionEnum.Normal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextDirectionEnum.Up">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextDirectionEnum.Down">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextEffectEnum.Flat">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextEffectEnum.Raised">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TextEffectEnum.Inset">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TreeStyleFlags.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TreeStyleFlags.Lines">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TreeStyleFlags.Symbols">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TreeStyleFlags.ButtonBar">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TreeStyleFlags.Leaf">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TreeStyleFlags.Complete">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TreeStyleFlags.Simple">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TreeStyleFlags.CompleteLeaf">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_TreeStyleFlags.SimpleLeaf">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_FocusRectEnum.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_FocusRectEnum.Light">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_FocusRectEnum.Heavy">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_FocusRectEnum.Solid">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_FocusRectEnum.Raised">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Flex_FocusRectEnum.Inset">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_BarShape.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_BarShape.ThickBar">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_BarShape.TopBar">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_BarShape.MiddleBar">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_BarShape.BottomBar">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_BarShape.TopLine">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_BarShape.MiddleLine">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_BarShape.BottomLine">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_BarShape.Frame">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_BarShape.HalfFrame">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.Empty">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.SolidBrush">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.Gradient">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.Percent25">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.Percent50">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.Percent70">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.ForwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.BackwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.DiagonalCross">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.Vertical">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.Horizontal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.NarrowVertical">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.NarrowHorizontal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.Confetti">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_HatchPattern.ZigZag">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.Name">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.Mode">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.Calendar">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.Duration">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.DurationUnits">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.Start">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.Finish">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.PercentComplete">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.Deadline">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.ConstraintType">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.ConstraintDate">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.Predecessors">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.ResourceNames">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_TaskProperty.Notes">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_ProgressLineStyle.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_ProgressLineStyle.Solid">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_ProgressLineStyle.Dash">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_ProgressLineStyle.Dot">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_ProgressLineStyle.DashDot">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Gantt_ProgressLineStyle.DashDotDot">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeColor.Azure">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeColor.Blue">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeColor.Green">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeColor.Orange">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeColor.Orchid">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeColor.Red">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeColor.Teal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeColor.Violet">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeLightness.DarkGray">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeLightness.LightGray">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon_ThemeLightness.White">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon365_ThemeLightness.Colorful">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon365_ThemeLightness.Black">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon365_ThemeLightness.DarkGray">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Ribbon365_ThemeLightness.White">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.CopyCurrentToCustom">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Custom">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Standard">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Office">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.GrayScale">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Apex">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Aspect">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Civic">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Concourse">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Equity">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Flow">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Foundry">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Median">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Metro">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Module">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Opulent">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Oriel">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Origin">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Paper">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Solstice">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Technic">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Trek">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Urban">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_ColorGeneration.Verve">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.Horizontal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.HorizontalCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.Vertical">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.VerticalCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.Diagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.DiagonalCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.DiagonalBack">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.DiagonalBackCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.Radial">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_GradientStyleEnum.FromCenter">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Horizontal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Vertical">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.ForwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.BackwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Cross">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DiagonalCross">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent05">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent10">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent20">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent25">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent30">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent40">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent50">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent60">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent70">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent75">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent80">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Percent90">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.LightDownwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.LightUpwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DarkDownwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DarkUpwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.WideDownwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.WideUpwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.LightVertical">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.LightHorizontal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.NarrowVertical">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.NarrowHorizontal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DarkVertical">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DarkHorizontal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DashedDownwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DashedUpwardDiagonal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DashedHorizontal">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DashedVertical">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.SmallConfetti">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.LargeConfetti">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.ZigZag">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Wave">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DiagonalBrick">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.HorizontalBrick">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Weave">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Plaid">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Divot">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DottedGrid">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.DottedDiamond">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Shingle">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Trellis">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.Sphere">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.SmallGrid">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.SmallCheckerBoard">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.LargeCheckerBoard">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.OutlinedDiamond">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_HatchStyleEnum.SolidDiamond">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_AlignImageEnum.Hide">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_AlignImageEnum.Left">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_AlignImageEnum.Right">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_AlignImageEnum.Top">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_AlignImageEnum.Bottom">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_AlignImageEnum.Center">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_AlignImageEnum.Scale">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_AlignImageEnum.Stretch">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_AlignImageEnum.Tile">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_RotationEnum.Rotate0">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_RotationEnum.Rotate90">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_RotationEnum.Rotate180">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_RotationEnum.Rotate270">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.NotSet">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.None">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.Empty">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.Solid">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.Raised">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.Inset">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.RaisedBevel">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.InsetBevel">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.Groove">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.Fillet">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.Double">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.Dashed">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.Chart_BorderStyleEnum.Opaque">
            <summary>For internal use.</summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Custom">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.System">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Office2007Blue">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Office2007Black">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Office2007Silver">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Office2010Blue">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Office2010Black">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Office2010Silver">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Windows7">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.WinXPBlue">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.WinXPSilver">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.WinXPOlive">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Royale">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Yahoo">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Aero">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Office2003Blue">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Office2003Olive">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Office2003Silver">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.OfficeXP">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.Classic">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVisualStyle.WindowsXP">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1GaugeBorderStyle.None">
            <summary>
            Hides the border.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1GaugeBorderStyle.Solid">
            <summary>
            Specifies a solid line.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1GaugeBorderStyle.Dash">
            <summary>
            Specifies a line consisting of dashes.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1GaugeBorderStyle.Dot">
            <summary>
            Specifies a line consisting of dots.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1GaugeBorderStyle.DashDot">
            <summary>
            Specifies a line consisting of a repeating pattern of dash-dot.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1GaugeBorderStyle.DashDotDot">
            <summary>
            Specifies a line consisting of a repeating pattern of dash-dot-dot.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapDashStyle.Solid">
            <summary>
            Specifies a solid line.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapDashStyle.Dash">
            <summary>
            Specifies a line consisting of dashes.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapDashStyle.Dot">
            <summary>
            Specifies a line consisting of dots.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapDashStyle.DashDot">
            <summary>
            Specifies a line consisting of a repeating pattern of dash-dot.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapDashStyle.DashDotDot">
            <summary>
            Specifies a line consisting of a repeating pattern of dash-dot-dot.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.None">
            <summary>
            No gradient filling.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.Horizontal">
            <summary>
            From left (first color) to right (second color).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.HorizontalCenter">
            <summary>
            From center (first color) to left and right (second color).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.Vertical">
            <summary>
            From top (first color) to bottom (second color).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.VerticalCenter">
            <summary>
            From center (first color) to top and bottom (second color).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.Diagonal">
            <summary>
            From left-bottom (first color) to right-top (second color).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.DiagonalCenter">
            <summary>
            From center (first color) to left-bottom and right-top (second color).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.DiagonalBack">
            <summary>
            From left-top (first color) to right-bottom (second color).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.DiagonalBackCenter">
            <summary>
            From center (first color) to left-top and right-bottom (second color).
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.Radial">
            <summary>
            From center (first color) to corners (second color) in radial direction.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.C1MapGradientStyle.FromCenter">
            <summary>
            From center (first color) to corners (second color).
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ThemeBrushBase">
            <summary>
            Abstract base class for all classes representing a brush in a theme.
            Use the <see cref="M:C1.Win.C1Themes.Shared.ThemeBrushBase.GetBrush(System.Drawing.Rectangle)"/> method to get an actual matching GDI+ brush.
            Classes derived from <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> override Equals() and
            GetHashCode() methods and compare objects by content rather than by references.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeBrushBase.EncodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeBrushBase.DecodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeBrushBase.AssignFrom(C1.Win.C1Themes.Shared.ThemeBrushBase)">
            <summary>
            Assigns (copies) properties from another <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> to the current object.
            </summary>
            <param name="source">The source object to copy properties from.</param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeBrushBase.Clone">
            <summary>
            Creates an exact copy of this <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/>.
            </summary>
            <returns>The <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> this method creates.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeBrushBase.GetBrush(System.Drawing.Rectangle)">
            <summary>
            Returns a GDI+ brush matching the theme brush.
            It is the caller's responsibility to dispose this brush when it is no longer needed.
            </summary>
            <param name="brushRect">The brush rectangle (used for gradient brushes).</param>
            <returns>The GDI+ <see cref="T:System.Drawing.Brush"/> object.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeBrushBase.DependOnRect">
            <summary>
            Returns true if a GDI+ brush created for this theme brush depends on the rectangle
            passed to the <see cref="M:C1.Win.C1Themes.Shared.ThemeBrushBase.GetBrush(System.Drawing.Rectangle)"/> method. E.g. gradient brushes return
            true in this method while solid return false.
            </summary>
            <returns>True if the GDI+ brush depends on the application area, false otherwise.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeBrushBase.EncodeToString">
            <summary>
            Encodes this <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> object to string.
            </summary>
            <returns>String represengin this <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> object.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeBrushBase.IsBrushesEqual(C1.Win.C1Themes.Shared.ThemeBrushBase,C1.Win.C1Themes.Shared.ThemeBrushBase)">
            <summary>
            Checks whether the two <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> objects are equal by value
            (i.e. represent identically described theme brushes).
            </summary>
            <param name="tb1">First <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> object.</param>
            <param name="tb2">Second <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> object.</param>
            <returns>True if the two brushes are identical, or are both null.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeBrushBase.TryDecodeFromString(System.String,C1.Win.C1Themes.Shared.ThemeBrushBase@)">
            <summary>
            Create <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> object from specified string.
            </summary>
            <param name="s">String representing <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> object.</param>
            <param name="value"><see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> object created from string.</param>
            <returns>True if string was successfully parsed, false otherwise.</returns>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ThemeSolidBrush">
            <summary>
            Represents a solid theme brush.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeSolidBrush.#ctor">
            <summary>
            Creates a new instance of <see cref="T:C1.Win.C1Themes.Shared.ThemeSolidBrush"/> class.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeSolidBrush.#ctor(System.Drawing.Color)">
            <summary>
            Creates a new instance of <see cref="T:C1.Win.C1Themes.Shared.ThemeSolidBrush"/> class.
            </summary>
            <param name="color">Theme solid brush color to set.</param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeSolidBrush.EncodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeSolidBrush.DecodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeSolidBrush.AssignFrom(C1.Win.C1Themes.Shared.ThemeBrushBase)">
            <summary>
            Overridden, assigns (copies) properties from another <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> to the current object.
            </summary>
            <param name="source">The source object to copy properties from.</param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeSolidBrush.GetBrush(System.Drawing.Rectangle)">
            <summary>
            Overridden, creates a GDI+ <see cref="T:System.Drawing.SolidBrush"/> matching this <see cref="T:C1.Win.C1Themes.Shared.ThemeSolidBrush"/> object.
            Can return null if color is not specified or transparent.
            </summary>
            <param name="brushRect">Target application area for the brush (ignored).</param>
            <returns>A <see cref="T:System.Drawing.SolidBrush"/> object.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeSolidBrush.DependOnRect">
            <summary>
            For internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeSolidBrush.GetHashCode">
            <summary>
            For internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeSolidBrush.Equals(System.Object)">
            <summary>
            For internal use.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeSolidBrush.Color">
            <summary>
            Gets or sets the color of this solid brush.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ThemeGradientBrush">
            <summary>
            Abstract base class for gradient theme brushes.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeGradientBrush.DependOnRect">
            <summary>
            For internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ThemeLinearBrush">
            <summary>
            Abstract base class for linear gradient theme brushes.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeLinearBrush.EncodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeLinearBrush.DecodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeLinearBrush.AssignFrom(C1.Win.C1Themes.Shared.ThemeBrushBase)">
            <summary>
            Overridden, assigns (copies) properties from another <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> to the current object.
            </summary>
            <param name="source">The source object to copy properties from.</param>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeLinearBrush.GammaCorrection">
            <summary>
            Gets or sets a value indicating whether gamma correction is enabled,
            same as LinearGradientBrush.GammaCorrection.
            </summary>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeLinearBrush.Angle">
            <summary>
            Gets or sets the angle, measured in degrees clockwise from the x-axis,
            of the gradient's orientation line. 
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush">
            <summary>
            Represents a linear gradient brush based on the starting and ending colors,
            and a <see cref="P:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.Blend"/> object.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.EncodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.DecodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.AssignFrom(C1.Win.C1Themes.Shared.ThemeBrushBase)">
            <summary>
            Overridden, assigns (copies) properties from another <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> to the current object.
            </summary>
            <param name="source">The source object to copy properties from.</param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.GetBrush(System.Drawing.Rectangle)">
            <summary>
            Overridden, creates a <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush"/> matching this <see cref="T:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush"/> object.
            </summary>
            <param name="brushRect">The gradient rectangle.</param>
            <returns>A <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush"/> object.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.GetHashCode">
            <summary>
            For internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.Equals(System.Object)">
            <summary>
            For internal use.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.StartColor">
            <summary>
            Gets or sets the starting gradient color.
            </summary>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.EndColor">
            <summary>
            Gets or sets the ending gradient color.
            </summary>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.Blend">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1Themes.Shared.ThemeTwoColorLinearBrush.Blend"/> object. Can be null.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ThemeMultiColorLinearBrush">
            <summary>
            Represents a multicolor linear gradient brush.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorLinearBrush.EncodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorLinearBrush.DecodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorLinearBrush.AssignFrom(C1.Win.C1Themes.Shared.ThemeBrushBase)">
            <summary>
            Overridden, assigns (copies) properties from another <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> to the current object.
            </summary>
            <param name="source">The source object to copy properties from.</param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorLinearBrush.GetBrush(System.Drawing.Rectangle)">
            <summary>
            Overridden, creates a <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush"/> matching this <see cref="T:C1.Win.C1Themes.Shared.ThemeMultiColorLinearBrush"/> object.
            </summary>
            <param name="brushRect">Gradient brush rectangle.</param>
            <returns>A <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush"/> object.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorLinearBrush.GetHashCode">
            <summary>
            For internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorLinearBrush.Equals(System.Object)">
            <summary>
            For internal use.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeMultiColorLinearBrush.InterpolationColors">
            <summary>
            Gets or sets a <see cref="T:System.Drawing.Drawing2D.ColorBlend"/> that defines a multicolor linear gradient.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ThemeRadialBrush">
            <summary>
            Abstract base class for radial gradient theme brushes.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeRadialBrush.CreateBrush(System.Drawing.Rectangle)">
            <summary>
            For internal use.
            </summary>
            <param name="brushRect"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeRadialBrush.EncodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeRadialBrush.DecodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeRadialBrush.AssignFrom(C1.Win.C1Themes.Shared.ThemeBrushBase)">
            <summary>
            Overridden, assigns (copies) properties from another <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> to the current object.
            </summary>
            <param name="source">The source object to copy properties from.</param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeRadialBrush.DependOnRect">
            <summary>
            For internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeRadialBrush.Center">
            <summary>
            Gets or sets a <see cref="T:System.Drawing.Point"/> structure that defines position
            of center point.
            (0,0) is the top-left corner, (100,100) is the bottom-right corner.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush">
            <summary>
            Represents a radial gradient brush based on center point,
            surrounding color and a <see cref="P:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.Blend"/> object.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.EncodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.DecodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.AssignFrom(C1.Win.C1Themes.Shared.ThemeBrushBase)">
            <summary>
            Overridden, assigns (copies) properties from another <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> to the current object.
            </summary>
            <param name="source">The source object to copy properties from.</param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.GetBrush(System.Drawing.Rectangle)">
            <summary>
            Overridden, creates a <see cref="T:System.Drawing.Drawing2D.PathGradientBrush"/> matching this <see cref="T:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush"/> object.
            </summary>
            <param name="brushRect">The gradient rectangle.</param>
            <returns>A <see cref="T:System.Drawing.Drawing2D.PathGradientBrush"/> object.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.Equals(System.Object)">
            <summary>
            For internal use.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.GetHashCode">
            <summary>
            For internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.CenterColor">
            <summary>
            Gets or sets the color at the center of the radial gradient.
            </summary>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.SurroundColor">
            <summary>
            Gets or sets the surrounding color of the radial gradient.
            </summary>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.Blend">
            <summary>
            Gets or sets the <see cref="P:C1.Win.C1Themes.Shared.ThemeTwoColorRadialBrush.Blend"/> object. Can be null.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ThemeMultiColorRadialBrush">
            <summary>
            Represents a multicolor radial gradient brush.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorRadialBrush.EncodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorRadialBrush.DecodeValues(C1.Win.C1Themes.Shared.Utils.ValuesStore)">
            <summary>
            For internal use.
            </summary>
            <param name="store"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorRadialBrush.AssignFrom(C1.Win.C1Themes.Shared.ThemeBrushBase)">
            <summary>
            Overridden, assigns (copies) properties from another <see cref="T:C1.Win.C1Themes.Shared.ThemeBrushBase"/> to the current object.
            </summary>
            <param name="source">The source object to copy properties from.</param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorRadialBrush.GetBrush(System.Drawing.Rectangle)">
            <summary>
            Overridden, creates a <see cref="T:System.Drawing.Drawing2D.PathGradientBrush"/> matching this <see cref="T:C1.Win.C1Themes.Shared.ThemeMultiColorRadialBrush"/> object.
            </summary>
            <param name="brushRect">The gradient rectangle.</param>
            <returns>A <see cref="T:System.Drawing.Drawing2D.PathGradientBrush"/> object.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorRadialBrush.Equals(System.Object)">
            <summary>
            For internal use.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeMultiColorRadialBrush.GetHashCode">
            <summary>
            For internal use.
            </summary>
            <returns></returns>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeMultiColorRadialBrush.InterpolationColors">
            <summary>
            Gets or sets a <see cref="T:System.Drawing.Drawing2D.ColorBlend"/> that defines this multicolor radiant gradient.
            </summary>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.ThemeBrushHelper.ForeignBrush">
            <summary>
            Gets or sets a brush object which is stored but not managed by this ThemeBrushHelper -
            i.e. it will not be disposed when this ThemeBrushHelper is disposed, or a new brush is
            assigned to it.
            Note that while the 'get' accessor is provided for this property, there is no need to use it -
            just use the <see cref="M:C1.Win.C1Themes.Shared.ThemeBrushHelper.GetBrush(System.Drawing.Rectangle)"/> method to get a usable GDI+ brush.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.ThemeBrushHelper.CreateThemeBrushNoTransparentOrEmpty(C1.Win.C1Themes.Shared.C1ThemeProxy,System.String,C1.Win.C1Themes.Shared.ThemeBrushBase)">
            <summary>
            Creates brush based on specified theme path.
            Returns defaultValue if brush can not be created or it is solid and color is transparent or empty.
            </summary>
            <param name="themeProxy"></param>
            <param name="path"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.Utils.Utils.EmptyIfTransparent(System.Drawing.Color)">
            <summary>
            Gets an empty color instead of a transparent color; otherwise, it returns the specified color.
            </summary>
            <param name="color">The specified color.</param>
            <returns>Empty color if transparent color was set.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.Utils.Utils.IsBlendEqual(System.Drawing.Drawing2D.Blend,System.Drawing.Drawing2D.Blend)">
            <summary>
            For internal use.
            </summary>
            <param name="b1"></param>
            <param name="b2"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.Utils.Utils.IsColorBlendEqual(System.Drawing.Drawing2D.ColorBlend,System.Drawing.Drawing2D.ColorBlend)">
            <summary>
            For internal use.
            </summary>
            <param name="cb1"></param>
            <param name="cb2"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.Utils.Utils.GradientModeToAngle(C1.Win.C1Themes.Shared.GradientMode)">
            <summary>
            For internal use.
            </summary>
            <param name="gradientMode"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.Utils.Utils.AngleToGradientMode(System.Single)">
            <summary>
            For internal use.
            </summary>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.Utils.Utils.ColorToString(System.Drawing.Color)">
            <summary>
            Converts color value to string.
            </summary>
            <param name="value">The color to be converted.</param>
            <returns>The string represents the color.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.Utils.Utils.ColorFromString(System.String)">
            <summary>
            Converts string value to color.
            </summary>
            <param name="s">The string to be converted.</param>
            <returns>The color value.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.Utils.Utils.TryColorFromString(System.String,System.Drawing.Color@)">
            <summary>
            Converts string to color.
            </summary>
            <param name="s">The string to be converted.</param>
            <param name="value">The color is the result of the conversion.</param>
            <returns>True if the string to color conversion was successful, otherwise returns false.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.Utils.Utils.BoolToString(System.Boolean)">
            <summary>
            Gets a string based on a boolean value.
            </summary>
            <param name="value">Boolean value.</param>
            <returns>"true" if value is true and "false" if value is false.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.Utils.Utils.TryBoolFromString(System.String,System.Boolean@)">
            <summary>
            Gets a string based on a boolean value.
            </summary>
            <param name="s">String value to convert.</param>
            <param name="value">Boolean result.</param>
            <returns>True if conversion was successful.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.Utils.Utils.BlendToString(System.Drawing.Drawing2D.Blend)">
            <summary>
            Converts blend pattern object to string.
            </summary>
            <param name="blend"><see cref="T:System.Drawing.Drawing2D.Blend"/> pattern object to convert.</param>
            <returns>Converted blend pattern as string if conversion was successful.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.Utils.Utils.TryBlendFromString(System.String,System.Drawing.Drawing2D.Blend@)">
            <summary>
            Converts string to blend pattern object.
            </summary>
            <param name="s">String to convert.</param>
            <param name="value"><see cref="T:System.Drawing.Drawing2D.Blend"/> pattern object.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.Utils.Utils.ColorBlendToString(System.Drawing.Drawing2D.ColorBlend)">
            <summary>
            Converts <see cref="T:System.Drawing.Drawing2D.ColorBlend"/> object to string.
            </summary>
            <param name="blend"><see cref="T:System.Drawing.Drawing2D.ColorBlend"/> object to convert.</param>
            <returns>Converted ColorBlend pattern as string if conversion was successful.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.Utils.Utils.TryColorBlendFromString(System.String,System.Drawing.Drawing2D.ColorBlend@)">
            <summary>
            Converts string to <see cref="T:System.Drawing.Drawing2D.ColorBlend"/> object.
            </summary>
            <param name="s">String to convert.</param>
            <param name="value">Converted ColorBlend pattern as string if conversion was successful.</param>
            <returns>True if conversion was successful, otherwise returns false.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.Utils.Utils.PointToString(System.Drawing.Point)">
            <summary>
            Converts <see cref="T:System.Drawing.Point"/> object to string.
            </summary>
            <param name="value">The <see cref="T:System.Drawing.Point"/> object to convert.</param>
            <returns>The string representing point.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.Utils.Utils.TryPointFromString(System.String,System.Drawing.Point@)">
            <summary>
            Converts string to <see cref="T:System.Drawing.Point"/> object.
            </summary>
            <param name="s">The string to convert.</param>
            <param name="value">The <see cref="T:System.Drawing.Point"/> object.></param>
            <returns>True if conversion was successful, otherwise returns false.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.Utils.ValuesStore.#ctor">
            <summary>
            Creates a new instance of <see cref="T:C1.Win.C1Themes.Shared.Utils.ValuesStore"/> class.
            </summary>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.Utils.ValuesStore.#ctor(System.String)">
            <summary>
            Creates a new instance of <see cref="T:C1.Win.C1Themes.Shared.Utils.ValuesStore"/> class.
            </summary>
            <param name="data">The string of data to assign.</param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.Utils.ValuesStore.GetData">
            <summary>
            Gets the data string.
            </summary>
            <returns>The data string.</returns>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.Utils.ValuesStore.Add(System.String)">
            <summary>
            Appends a string to data.
            </summary>
            <param name="s">The string to add.</param>
        </member>
        <member name="M:C1.Win.C1Themes.Shared.Utils.ValuesStore.Next">
            <summary>
            Finds characters to the end of the string.
            </summary>
            <returns>True if characters were found; otherwise, false.</returns>
        </member>
        <member name="P:C1.Win.C1Themes.Shared.Utils.ValuesStore.Value">
            <summary>
            Gets the characters to the end of the string.
            </summary>
        </member>
        <member name="T:C1.Win.C1Themes.Shared.ThemeVersions">
            <summary>
            Versions of c1theme XML.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVersions.c_PlatformVersionPrefix">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVersions.c_InitialFormatVersion">
            <summary>
            First public versions of C1Themes.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVersions.c_NewBackgroundsFormatVersion">
            <summary>
            Version of theme XML when structure of BackgroundProp was changed.
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVersions.c_NewRibbonFormatVersion">
            <summary>
            Version of theme XML when structure of C1Ribbon theme was changed
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVersions.c_C1PrefixRemovedFormatVersion">
            <summary>
            Version of theme XML when C1 prefix was removed
            </summary>
        </member>
        <member name="F:C1.Win.C1Themes.Shared.ThemeVersions.c_NewInputFormatVersion">
            <summary>
            Version of theme XML when structure of C1Input theme was changed
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3DBase.AnnotationFormatEnum">
            <summary>
            Use the members of this enumeration to set the Axis annotation format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.AnnotationFormatEnum.NumericManual">
            <summary>
            Used in to specify a custom numeric format. 
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.AnnotationFormatEnum.NumericCurrency">
            <summary>
            A currency amount format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.AnnotationFormatEnum.NumericGeneral">
            <summary>
            A general number format. Formatted into the most compact decimal form using fixed or scientific notation.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.AnnotationFormatEnum.NumericExponential">
            <summary>
            A scientific or exponential format in the form "-d.ddd…E+ddd" or "-d.ddd…e+ddd".
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.AnnotationFormatEnum.NumericPercentage">
            <summary>
            A percentage amount format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.AnnotationFormatEnum.NumericRoundtrip">
            <summary>
            A format which guarantees that a numeric value after being converted will be returned as the same numeric value.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.AnnotationFormatEnum.NumericHexadecimal">
            <summary>
            A hexadecimal format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.AnnotationFormatEnum.DateManual">
            <summary>
            Used to specify a custom date/datetime format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.AnnotationFormatEnum.DateShort">
            <summary>
            A short date format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.AnnotationFormatEnum.DateLong">
            <summary>
            A long date format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.AnnotationFormatEnum.DateFullShortTime">
            <summary>
            A long date and short time format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.AnnotationFormatEnum.DateFull">
            <summary>
            A full date format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.AnnotationFormatEnum.DateGeneralShortTime">
            <summary>
            A general date format with short time format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.AnnotationFormatEnum.DateGeneral">
            <summary>
            A general date format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.AnnotationFormatEnum.DateMonth">
            <summary>
            A month format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.AnnotationFormatEnum.DateRFC1123">
            <summary>
            A date format based on the IETF RFC 1123 specification.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.AnnotationFormatEnum.DateSortable">
            <summary>
            A sortable date format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.AnnotationFormatEnum.DateShortTime">
            <summary>
            A short time format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.AnnotationFormatEnum.DateLongTime">
            <summary>
            A long time format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.AnnotationFormatEnum.DateUniversalSortable">
            <summary>
            A universally sortable date format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.AnnotationFormatEnum.DateUniversal">
            <summary>
            A universal date format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.AnnotationFormatEnum.DateYear">
            <summary>
            A year format.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3DBase.baseChartAnnotation">
            <summary>
            Provides chart annotation parameters.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3DBase.baseChartAnnotation.baseAnnoTextRectData">
            <summary>
            Provides chart annotation text parameters.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.baseChartAnnotation.baseAnnoTextRectData.atStart">
            <summary>
            Specifies the location of the coordinates of the AlarmZone extents data.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.baseChartAnnotation.baseAnnoTextRectData.pfRot">
            <summary>
            The coordinate of the upper-left corner of the AlarmZone extents data rectangle.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.baseChartAnnotation.baseAnnoTextRectData.rf">
            <summary>
            The size of AlarmZone extents data rectangle.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.baseChartAnnotation.baseAnnoTextRectData.m">
            <summary>
            The identity matrix of extents data rectangle.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.baseChartAnnotation.baseAnnoTextRectData.half">
            <summary>
            Determines whether to position the extent half the height above and to the left of its width.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartAnnotation.baseAnnoTextRectData.#ctor(System.Boolean,System.Drawing.PointF,System.Drawing.RectangleF)">
            <summary>
            Creates a new instance of <see cref="T:C1.Win.C1Chart3DBase.baseChartAnnotation.baseAnnoTextRectData"/> class.
            </summary>
            <param name="atStart">Specifies the location of the coordinates of the AlarmZone extents data.</param>
            <param name="pfRot">The coordinate of the upper-left corner of the AlarmZone extents data rectangle.</param>
            <param name="rf">The size of AlarmZone extents data rectangle.</param>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartAnnotation.baseAnnoTextRectData.Dispose">
            <summary>
            Releases all resources.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChartAnnotation.AnnotationRotation">
            <summary>
            Gets or sets the clockwise angle of rotation for the axis annotations.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChartAnnotation.AnnoFormat">
            <summary>
            Gets or sets the annotation format for the axis.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChartAnnotation.AnnoFormatString">
            <summary>
            Gets or sets the annotation format string used with manual formats.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChartAnnotation.AnnoVerticalText">
            <summary>
            Gets or sets whether annotation text is displayed vertically.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChartAnnotation.DefaultAnnoFormatString">
            <summary>
            Gets or sets the default annotation format string used with manual formats.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChartAnnotation.CalculatedStringFormat">
            <summary>
            Gets the text layout information.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartAnnotation.getAnnoFormatString(System.Double,System.Double)">
            <summary>
            Gets the annotation format string used with logarithmic formats.
            </summary>
            <param name="av">The number whose logarithm is to be found.</param>
            <param name="logbase">The logarithmic base.</param>
            <returns>The annotation format string.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartAnnotation.getAnnoFormatString(System.Single)">
            <summary>
            Gets the annotation format string used with manual formats.
            </summary>
            <param name="av">An OLE Automation Date value.</param>
            <returns>The annotation format string.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartAnnotation.getAnnoFormattingString">
            <summary>
            Gets the annotation format string used with manual formats.
            </summary>
            <returns>The annotation format string.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartAnnotation.getAnnoFormatString(System.Double)">
            <summary>
            Gets the annotation format string used with manual formats.
            </summary>
            <param name="av">An OLE Automation Date value.</param>
            <returns>The annotation format string.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartAnnotation.getAnnoExtents(C1.Win.C1Chart3DBase.baseChartAnnotation.baseAnnoTextRectData)">
            <summary>
            Calculates the size of AlarmZone extents data rectangle.
            </summary>
            <param name="atd">Provides chart annotation text parameters.</param>
            <returns>The size of extents data rectangle.</returns>
        </member>
        <member name="T:C1.Win.C1Chart3DBase.IRectangleMapProvider">
            <summary>
            Defines data for Axis ScrollBars.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.IRectangleMapProvider.RectCount">
            <summary>
            The number of Axis ScrollBars.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.IRectangleMapProvider.GetRect(System.Int32)">
            <summary>
            Gets the Axis ScrollBar rectangle by its number.
            </summary>
            <param name="i">The zero-based index of the item.</param>
            <returns>The Axis ScrollBar rectangle.</returns>
        </member>
        <member name="T:C1.Win.C1Chart3DBase.CompassEnum">
            <summary>
            Enumeration to set the position of a legend, axis, or chart label.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.CompassEnum.North">
            <summary>
            Object is positioned north or above.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.CompassEnum.South">
            <summary>
            Object is positioned south or below.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.CompassEnum.East">
            <summary>
            Object is positioned east or to the right side.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.CompassEnum.West">
            <summary>
            Object is positioned west or to the left side.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3DBase.IChartSeriesInfo">
            <summary>
            Provides chart series properties.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.IChartSeriesInfo.Count">
            <summary>
            Number of labels.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.IChartSeriesInfo.GetLabels">
            <summary>
            Gets the array of label strings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.IChartSeriesInfo.GetLabelsUnique">
            <summary>
            Gets the array of unique label strings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.IChartSeriesInfo.SetSeriesRect(System.Int32,System.Drawing.Rectangle)">
            <summary>
            Sets the series rectangle.
            </summary>
            <param name="series">The index of c1SeriesList item.</param>
            <param name="rect">The series rectangle area.</param>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseStyleContext.SetBaseAttributes">
            <inheritdoc/>
        </member>
        <member name="T:C1.Win.C1Chart3DBase.baseChart">
            <summary>
            The base chart object properties and methods.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.OnReset">
            <summary>
            Raises the <see cref="E:C1.Win.C1Chart3DBase.baseChart.NotifyReset"/> event.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.SetWebChartBehaviors(System.String)">
            <summary>
            Sets the web chart behaviors.
            </summary>
            <param name="evalMsg">The evaluation version message of C1Chart.</param>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.UseDoubleBuffer">
            <summary>
            Whether to use a double buffer when redrawing the chart.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.BeginUpdate">
            <summary>
            Starts batch update. After changes chart is not updated immediately.
            EndUpdate() method must be called to restore updating.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.EndUpdate">
            <summary>
            Finishes batch update. The method restores normal chart updating.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.CreateParams">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.WndProc(System.Windows.Forms.Message@)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.createTitle(C1.Win.C1Chart3DBase.baseChartStyle,C1.Win.C1Chart3DBase.CompassEnum)">
            <summary>
            Creates base chart title.
            </summary>
            <param name="style">The <see cref="T:C1.Win.C1Chart3DBase.baseChartStyle"/> style.</param>
            <param name="compass">Enumeration to set the position of a legend, axis, or chart label.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.#ctor(System.String)">
            <summary>
            Creates a new instance of <see cref="T:C1.Win.C1Chart3DBase.baseChart"/> class.
            </summary>
            <remarks>
            the following variable, constructor and routines are associated with licensing.
            </remarks>
            <param name="info">Run-time license information.</param>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.EndInit">
            <summary>
            Signals the object that initialization is complete.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.Dispose">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.Reset">
            <summary>
            Reset base chart properties to default values.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.Invalidate">
            <summary>
            Invalidates the entire surface of the control and causes the control to be redrawn.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.Invalidate(System.Drawing.Rectangle)">
            <summary>
            Invalidates the specified region of the control (adds it to the control's update
            region, which is the area that will be repainted at the next paint operation),
            and causes a paint message to be sent to the control.
            </summary>
            <param name="r">A rectangle that represents the region to invalidate.</param>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.Location">
            <summary>
            Gets or sets the location of the chart area in chart control client coordinates.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.Size">
            <summary>
            Gets or sets the size of the chart area in chart control client coordinates.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.Text">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.Visible">
            <summary>
            Determines whether the control is visible or hidden.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.OnSizeChanged(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.SetupGrayscaleAttributes">
            <summary>
            Sets the color-adjustment gray scale matrix.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.DoOnPaint(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle)">
            <summary>
            Paint the chart element.
            </summary>
            <param name="e">Provides data for the <see cref = "E:System.Windows.Forms.Control.Paint"/> event.</param>
            <param name="clientRectangle">Client area rectangle to paint.</param>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.OnBackColorChanged(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.OnForeColorChanged(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.OnFontChanged(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.Style">
            <summary>
            Gets the chart element style.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.BackColor">
            <summary>
            The background color used to display text and graphics in the control.
            </summary>
            <remarks>
            Changing the BackColor also changes the BackColor of the chart’s style object, and visa versa.
            </remarks>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.ForeColor">
            <summary>
            The foreground color used to display text and graphics in the control.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.BackgroundImage">
            <summary>
            The background image used for the control.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.Font">
            <summary>
            The font used to display text in the control.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.Header">
            <summary>
            Gets the control header object.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.Footer">
            <summary>
            Gets the control footer object.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.Legend">
            <summary>
            Gets the control legend object.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.ChartArea">
            <summary>
            Gets the control chart area object.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.PropBag">
            <summary>
            Gets or sets the attribute name used to specify which property get serialized when saving layouts.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.DrawFactor">
            <summary>
            Gets the DrawFactor of the chart element is set in DrawWithPrinter and accounts for 100/dpi inflation.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.C1PrintableGetImage">
            <summary>
            Gets a scalable Image of the chart using the display size.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.PrintChart">
            <summary>
            Prints the control using default scaling within the margins of the printer page.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.PrintDialogUsage">
            <summary>
            Gets or sets whether a print dialog is used when printing.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.PageSetup">
            <summary>
            Raises the PageSetup dialog to manage the page settings.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.PrintSetup">
            <summary>
            Raises the PrintSetup dialog to manage the printer settings.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.drawNagText(System.Drawing.Graphics,System.String,System.Drawing.Size)">
            <summary>
            Draws text within a specified area size.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="text">The text to draw.</param>
            <param name="sz">The maximum layout area for the text.</param>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws rectangle area.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="r">A rectangle to draw.</param>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.SaveChartToString">
            <summary>
            Saves the all of the contents of the control to the specified file, including data.
            </summary>
            <returns>The string which contains chart description.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.LoadChartFromString(System.String)">
            <summary>
            Reads the chart property and data settings (chart description) from the specified string.
            </summary>
            <param name="str">String which contains chart description.</param>
        </member>
        <member name="E:C1.Win.C1Chart3DBase.baseChart.ChartChanged">
            <summary>
            Occurs when the chart has changed.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.UseAntiAlias">
            <summary>
            Gets or sets a value indicating whether to use anti-aliasing when displaying the chart.
            This property is now obsolete.  Instead, use UseAntiAliasedText and
            UseAntiAliasedGraphics to manage text and graphics antialiasing independently.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.UseAntiAliasedText">
            <summary>
            Gets or sets a value indicating whether to use anti-aliasing while rendering chart text (only).
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.UseAntiAliasedGraphics">
            <summary>
            Gets or sets a value indicating whether to use anti-aliasing while rendering chart graphics (only).
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.UseGrayscale">
            <summary>
            Gets or sets a value indicating whether to render the chart with grayscale instead of color.
            <remarks>
            The use of Grayscale is intended as a preview for output to a black and white device.  It
            does not affect style brush or pen colors internally, only the rendering of the chart to the
            output device.  Using grayscale implies the use of double buffered output.
            </remarks>
            </summary>
        </member>
        <member name="E:C1.Win.C1Chart3DBase.baseChart.LayoutLabels">
            <summary>
            Fires before rendering labels and allows repositioning labels
            relative to positions of other chart elements or using data mapping methods.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.OnLayoutLabels(System.EventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.C1Chart3DBase.baseChart.LayoutLabels"/> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs"/> object.</param>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.DefaultSize">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.AutoSize">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.AutoSizeMode">
            <summary>
            Gets or sets how the control will resize itself.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.BackgroundImageLayout">
            <inheritdoc/>
        </member>
        <member name="T:C1.Win.C1Chart3DBase.baseChart.baseChartRectAccessibleObject">
            <summary>
            Provides information that accessibility applications use to adjust an application's user interface (UI) for users with impairments.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.baseChartRectAccessibleObject.#ctor(System.String,C1.Win.C1Chart3DBase.baseChartRect,C1.Win.C1Chart3DBase.baseChart)">
            <summary>
            Creates a new instance of <see cref="T:C1.Win.C1Chart3DBase.baseChart.baseChartRectAccessibleObject"/> class.
            </summary>
            <param name="name">The object name.</param>
            <param name="bcrect">A rectangle that represents the bounds of the accessible object.</param>
            <param name="chart">The base chart object.</param>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.baseChartRectAccessibleObject.#ctor(System.String,C1.Win.C1Chart3DBase.baseChartRect,C1.Win.C1Chart3DBase.baseChart,System.Windows.Forms.AccessibleObject)">
            <summary>
            Creates a new instance of <see cref="T:C1.Win.C1Chart3DBase.baseChart.baseChartRectAccessibleObject"/> class.
            </summary>
            <param name="name">The object name.</param>
            <param name="bcrect">A rectangle that represents the bounds of the accessible object.</param>
            <param name="chart">The base chart object.</param>
            <param name="parent">The parent <see cref="T:System.Windows.Forms.AccessibleObject"/>.</param>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.baseChartRectAccessibleObject.Role">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.baseChartRectAccessibleObject.Parent">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.baseChartRectAccessibleObject.Bounds">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.baseChartRectAccessibleObject.Name">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.baseChartRectAccessibleObject.State">
            <inheritdoc/>
        </member>
        <member name="T:C1.Win.C1Chart3DBase.baseChart.baseChartAccessibleObject">
            <summary>
            Provides information about a control that can be used by an accessibility application.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChart.baseChartAccessibleObject.#ctor(C1.Win.C1Chart3DBase.baseChart)">
            <summary>
            Creates a new instance of <see cref="T:C1.Win.C1Chart3DBase.baseChart.baseChartAccessibleObject"/> class.
            </summary>
            <param name="chart">The <see cref="T:C1.Win.C1Chart3DBase.baseChart"/> that owns this object.</param>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.baseChartAccessibleObject.Role">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChart.baseChartAccessibleObject.Name">
            <inheritdoc/>
        </member>
        <member name="T:C1.Win.C1Chart3DBase.baseChartTitle">
            <summary>
            Base chart title class.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartTitle.#ctor(C1.Win.C1Chart3DBase.baseChartStyle,C1.Win.C1Chart3DBase.iChartRect)">
            <summary>
            Creates a new instance of <see cref="T:C1.Win.C1Chart3DBase.baseChartTitle"/> class.
            </summary>
            <param name="c1Style">The chart area style.</param>
            <param name="ctrl">Chart area properties object.</param>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartTitle.#ctor(C1.Win.C1Chart3DBase.baseChartStyle,C1.Win.C1Chart3DBase.iChartRect,C1.Win.C1Chart3DBase.CompassEnum)">
            <summary>
            reates a new instance of <see cref="T:C1.Win.C1Chart3DBase.baseChartTitle"/> class.
            </summary>
            <param name="c1Style">The chart area style.</param>
            <param name="ctrl">Chart area properties object.</param>
            <param name="compass"> Enumeration to set the position of a chart area.</param>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartTitle.GetContentSize(System.Drawing.Graphics,System.Drawing.Size,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartTitle.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartTitle.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3DBase.baseChartArea">
            <summary>
            Base chart area class.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartArea.AutoPosition(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <inheritdoc/>
        </member>
        <member name="T:C1.Win.C1Chart3DBase.baseChartLegend">
            <summary>
            The chart legend properties and methods.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartLegend.#ctor(C1.Win.C1Chart3DBase.baseChartStyle,C1.Win.C1Chart3DBase.iChartRect)">
            <summary>
            Creates a new instance of <see cref="T:C1.Win.C1Chart3DBase.baseChartLegend"/> class.
            </summary>
            <param name="c1Style">The chart object style.</param>
            <param name="ctrl">The chart object properties.</param>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartLegend.ClearSeriesInfo">
            <summary>
            Reset chart series data to default value.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartLegend.GetSeriesInfo">
            <summary>
            Gets the chart series data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartLegend.GetContentSize(System.Drawing.Graphics,System.Drawing.Size)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartLegend.GetContentWidth(System.Drawing.Graphics,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartLegend.GetContentWidthVert(System.Drawing.Graphics,System.Int32)">
            <summary>
            Calculates content width by height.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="height">The content height.</param>
            <returns>The content width.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartLegend.GetContentWidthHor(System.Drawing.Graphics,System.Int32)">
            <summary>
            Calculates content height.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="height">The content height.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartLegend.GetContentHeight(System.Drawing.Graphics,System.Int32)">
            <summary>
            The content height by width.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="width">The content width.</param>
            <returns>The content height.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartLegend.GetContentHeightVert(System.Drawing.Graphics,System.Int32)">
            <summary>
            he content height by width.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="width">The content width.</param>
            <returns>The content height.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartLegend.GetContentHeightHor(System.Drawing.Graphics,System.Int32)">
            <summary>
            The content height by width.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="width">The content width.</param>
            <returns>The content height.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartLegend.AdjustRowHeight(System.Int32)">
            <summary>
            Adjustthe row height.
            </summary>
            <param name="rh"></param>
            <returns>The row height.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartLegend.GetImageWidth(System.Drawing.Graphics,System.Int32)">
            <summary>
            Gets the image width.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="height">The content height.</param>
            <returns>The image width</returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartLegend.DrawLegendImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Int32)">
            <summary>
            Draws the legend image.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="r">Legend image rectangle area.</param>
            <param name="s">Legend entry name.</param>
            <param name="si"></param>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartLegend.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartLegend.DrawVert(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws a rectangle area based on height.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="r">Rectangle area to draw.</param>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartLegend.DrawHor(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws a rectangle area based on width.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="r">Rectangle area to draw.</param>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChartLegend.IsContinious">
            <summary>
            Gets whether the number of series in a row or column is continuous.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartLegend.DrawEntryLabel(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.String)">
            <summary>
            Draws the entry label.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="r">Rectangle area to draw.</param>
            <param name="s">The label string.</param>
            <param name="su">The unique label string.</param>
        </member>
        <member name="T:C1.Win.C1Chart3DBase.iChartRect">
            <summary>
            Provides chart area properties and methods.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.iChartRect.Location">
            <summary>
            Gets or sets the location of the chart area in chart control client coordinates.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.iChartRect.Size">
            <summary>
            Gets or sets the size of the chart area in chart control client coordinates.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.iChartRect.Text">
            <summary>
            Get or sets the text of the label.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.iChartRect.DrawFactor">
            <summary>
            DrawFactor is set in DrawWithPrinter and accounts for 100/dpi inflation.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.iChartRect.Visible">
            <summary>
            Gets or sets the chart area visibility.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.iChartRect.Invalidate">
            <summary>
            Invalidates the entire surface of the chart area and causes to be redrawn.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.iChartRect.Invalidate(System.Drawing.Rectangle)">
            <summary>
            Invalidates the specified region of the chart area and causes to be redrawn.
            </summary>
            <param name="r">A rectangle that represents the region to invalidate.</param>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.iChartRect.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws rectangle.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="r">A rectangle area to draw.</param>
        </member>
        <member name="T:C1.Win.C1Chart3DBase.baseChartRectEventArgs">
            <summary>
            An event that occurs when the rectangle of the base chart changed.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.baseChartRectEventArgs.rect">
            <summary>
            The base chart rectangle area.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartRectEventArgs.#ctor(C1.Win.C1Chart3DBase.baseChartRect)">
            <summary>
            Creates a new instance of <see cref="T:C1.Win.C1Chart3DBase.baseChartRectEventArgs"/> class.
            </summary>
            <param name="l">The base chart rectangle area.</param>
        </member>
        <member name="T:C1.Win.C1Chart3DBase.baseChartRectEventHandler">
            <summary>
            Represents a method that can handle of base chart rectangle changed event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:C1.Win.C1Chart3DBase.baseChartRectEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartMargin.NotifyChanges">
            <summary>
            Called when a change needs to be notified.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3DBase.baseChartRect">
            <summary>
            Provides base chart area properties and methods.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChartRect.TooltipText">
            <summary>
            The chart component area tooltip text.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartRect.#ctor(C1.Win.C1Chart3DBase.baseChartStyle,C1.Win.C1Chart3DBase.iChartRect)">
            <summary>
            Creates a new instance of <see cref="T:C1.Win.C1Chart3DBase.baseChartRect"/> class.
            </summary>
            <param name="c1Style">The chart component style.</param>
            <param name="owner">The chart component owner object.</param>
        </member>
        <member name="E:C1.Win.C1Chart3DBase.baseChartRect.RectChanged">
            <summary>
            Fires when chart component rectangle value was changed.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartRect.OnRectChanged(C1.Win.C1Chart3DBase.baseChartRectEventArgs)">
            <summary>
            Raises the <see cref="E:C1.Win.C1Chart3DBase.baseChartRect.RectChanged"/> event.
            </summary>
            <param name="e">A <see cref="T:C1.Win.C1Chart3DBase.baseChartRectEventArgs"/> that contains event data.</param>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartRect.NotifyChanges">
            <summary>
            Notifies when the rectangle of the chart component has changed.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChartRect.Compass">
            <summary>
            Gets or sets the general positioning of the base chart element.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChartRect.DrawFactor">
            <summary>
            DrawFactor of the chart element is set in DrawWithPrinter and accounts for 100/dpi inflation.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChartRect.Location">
            <summary>
            Gets or sets the location of the element in chart control client coordinates.
            </summary>
            <remarks>
            The Location property always returns the actual location of the upper,
            left corner of the chart element it describes whether or not the element placement is manual or automatic.
            Modifying this value will change LocationDefault.
            </remarks>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChartRect.Size">
            <summary>
            Gets or sets the size of the element in chart control client coordinates.
            </summary>
            <remarks>
            The Size property always returns the actual size of the chart element it describes whether
            or not the element placement is manual or automatic. Modifying this value will change SizeDefault.
            </remarks>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChartRect.LocationDefault">
            <summary>
            Gets or sets the default location of the element in chart control client coordinates.
            </summary>
            <remarks>
            The LocationDefault property specifies the location of the upper, left corner of the chart element it describes.
            Non-negative values indicate the explicit position in chart client coordinates to place the chart element.
            Negative values will allow auto-positioning.
            </remarks>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChartRect.SizeDefault">
            <summary>
            Gets or sets the default size of the element.
            </summary>
            <remarks>
            The SizeDefault property specifies the size of the chart element it describes.
            Non-negative values indicate the explicit width and height in chart client coordinates to place the
            chart element.Negative values will allow auto-positioning.
            </remarks>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChartRect.Text">
            <summary>
            Gets or sets the element text.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChartRect.Visible">
            <summary>
            Gets or sets the element visibility.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartRect.GetTextCompass">
            <summary>
            Gets the general positioning of the chart element.
            </summary>
            <returns>Enumeration to set the position of a chart element.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartRect.GetContentSize(System.Drawing.Graphics,System.Drawing.Size)">
            <summary>
            Calculates the chart content size.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="sz">The size of content area.</param>
            <returns>The size of chart content.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartRect.GetContentSize(System.Drawing.Graphics,System.Drawing.Size,System.String)">
            <summary>
            Calculates the chart content size.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="rsz">The size of content area.</param>
            <param name="txt">The text inside of area.</param>
            <returns>The size of chart content.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartRect.GetContentWidth(System.Drawing.Graphics,System.Int32)">
            <summary>
            Calculates the chart content width.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="height">The height of chart content.</param>
            <returns>The width of chart content.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartRect.GetContentWidth(System.Drawing.Graphics,System.Int32,System.String)">
            <summary>
            Calculates the chart content width.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="height">The height of chart content.</param>
            <param name="txt">The text inside of area.</param>
            <returns></returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartRect.GetContentHeight(System.Drawing.Graphics,System.Int32)">
            <summary>
            Calculates the chart content height.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="width">The width of chart content.</param>
            <returns>The height of chart content.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartRect.GetContentHeight(System.Drawing.Graphics,System.Int32,System.String)">
            <summary>
            Calculates the chart content height.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="width">The width of chart content.</param>
            <param name="txt">The height of chart content.</param>
            <returns>The height of chart content.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartRect.GetContentPosition(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Calculates the chart content position inside content rectangle area.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="r">The content rectangle area.</param>
            <returns>The chart content position.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartRect.AutoPosition(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Calculates the position of the content inside the area rectangle.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="r">The content rectangle area.</param>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartRect.Invalidate(System.Drawing.Rectangle)">
            <summary>
            Invalidates the specified region of the chart area and causes to be redrawn.
            </summary>
            <param name="r">A rectangle that represents the region to invalidate.</param>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartRect.Invalidate">
            <summary>
            Invalidates the entire surface of the chart area and causes to be redrawn.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartRect.ApplyMargins(System.Drawing.Rectangle@)">
            <summary>
            Calculates the margin rectangle of chart area.
            </summary>
            <param name="r"></param>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartRect.AdjustContainingRect(System.Drawing.Rectangle@,System.Drawing.Point,System.Drawing.Size)">
            <summary>
            Adjust chart area rectangle area position and size.
            </summary>
            <param name="cr">The calculated rectangle area.</param>
            <param name="location">The location of chart area.</param>
            <param name="size">The chart area size.</param>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartRect.AdjustContainingRect(System.Drawing.Rectangle@)">
            <summary>
            Adjust chart area rectangle area position and size.
            </summary>
            <param name="cr">The calculated chart area rectangle size and position.</param>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartRect.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the rectangle.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="r">Rectangle to draw.</param>
        </member>
        <member name="T:C1.Win.C1Chart3DBase.BorderStyleEnum">
            <summary>
            Border is a basic border object, used by StyleContext for rendering and measuring elements.
            It provides a solid border with a single color and arbitrary widths on each side.
            Border is designed to be extended so you can easily implement 3-D effects, compound borders, etc.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.BorderStyleEnum.NotSet">
            <summary>
            Border style is not set.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.BorderStyleEnum.None">
            <summary>
            No border.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.BorderStyleEnum.Empty">
            <summary>
            Empty Border.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.BorderStyleEnum.Solid">
            <summary>
            Solid line border.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.BorderStyleEnum.Raised">
            <summary>
            Raised 3D border.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.BorderStyleEnum.Inset">
            <summary>
            Inset 3D border.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.BorderStyleEnum.RaisedBevel">
            <summary>
            Raised 3D border with bevel.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.BorderStyleEnum.InsetBevel">
            <summary>
            Inset 3D border with bevel.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.BorderStyleEnum.Groove">
            <summary>
            Compound border (inset+raised).
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.BorderStyleEnum.Fillet">
            <summary>
            Compound border (raised+inset).
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.BorderStyleEnum.Double">
            <summary>
            Double solid line border.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.BorderStyleEnum.Dashed">
            <summary>
            Dashed line border.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3DBase.BorderStyleEnum.Opaque">
            <summary>
            Solid line border rendered without antialiasing.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3DBase.baseChartBorder">
            <summary>
            Base chart border class.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChartBorder.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChartBorder.Color">
            <summary>
            Gets or sets the border color.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChartBorder.Thickness">
            <summary>
            Gets or sets the border thickness.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3DBase.baseChartStyle">
            <summary>
            Base chart style class.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartStyle.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Image)">
            <summary>
            Draws the content at the specified location and with the specified size.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="r">The rectangle area to draw.</param>
            <param name="s">The string to draw.</param>
            <param name="img">The image to draw.</param>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartStyle.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Image,System.Double)">
            <summary>
            Draws the content at the specified location and with the specified size.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="r">The rectangle area to draw.</param>
            <param name="s">The string to draw.</param>
            <param name="img">The image to draw.</param>
            <param name="orientationAngle">The orientation angle.</param>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartStyle.Draw(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Image,System.Double,System.Drawing.PointF)">
            <summary>
            Draws the content at the specified location and with the specified size.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="r">The rectangle area to draw.</param>
            <param name="s">The string to draw.</param>
            <param name="img">The image to draw.</param>
            <param name="orientationAngle">The orientation angle.</param>
            <param name="orientationPivot">The orientation pivot.</param>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartStyle.DrawContent(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Image)">
            <summary>
            Draws the content at the specified location and with the specified size.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="r">The rectangle area to draw.</param>
            <param name="s">The string to draw.</param>
            <param name="img">The image to draw.</param>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartStyle.DrawNoBorder(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Image)">
            <summary>
            Draws the content without border at the specified location and with the specified size.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="r">The rectangle area to draw.</param>
            <param name="s">The string to draw.</param>
            <param name="img">The image to draw.</param>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartStyle.DrawBorder(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the border.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="r">The rectangle border to draw.</param>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartStyle.GetWidth(System.Drawing.Graphics,System.Int32,System.String,System.Drawing.Image)">
            <summary>
            Calculates the width of the content based on the specified height and style.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="height">The content height.</param>
            <param name="str">String to measure.</param>
            <param name="img">Image to measure.</param>
            <returns>Calculated width.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartStyle.GetHeight(System.Drawing.Graphics,System.Int32,System.String,System.Drawing.Image)">
            <summary>
            Calculates the height of the content based on the specified width and style.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="width">The content width.</param>
            <param name="str">String to measure.</param>
            <param name="img">Image to measure.</param>
            <returns>Calculated height.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartStyle.GetSize(System.Drawing.Graphics,System.Drawing.SizeF,System.String,System.Drawing.Image)">
            <summary>
            Calculates the new size of the content based on the specified size and style.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="sz">The initial content size.</param>
            <param name="str">String to measure.</param>
            <param name="img">Image to measure.</param>
            <returns>Calculated size.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartStyle.GetSize(System.Drawing.Graphics,System.Drawing.Size,System.String,System.Drawing.Image)">
            <summary>
            Calculates the new size of the content based on the specified width and style.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="sz">The initial content size.</param>
            <param name="str">String to measure.</param>
            <param name="img">Image to measure.</param>
            <returns>Calculated size.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartStyle.GetContentWidth(System.Drawing.Graphics,System.Int32,System.String,System.Drawing.Image)">
            <summary>
            Calculates the width of the content based on the specified height and style.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="height">The content height.</param>
            <param name="str">String to measure.</param>
            <param name="img">Image to measure.</param>
            <returns>Calculated width.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartStyle.GetContentHeight(System.Drawing.Graphics,System.Int32,System.String,System.Drawing.Image)">
            <summary>
            Calculates the height of the content based on the specified width and style.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="width">The content width.</param>
            <param name="str">String to measure.</param>
            <param name="img">Image to measure.</param>
            <returns>Calculated height.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartStyle.GetContentSize(System.Drawing.Graphics,System.Drawing.SizeF,System.String,System.Drawing.Image)">
            <summary>
            Calculates the new size of the content based on the specified width and style.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="sz">The initial content size.</param>
            <param name="str">String to measure.</param>
            <param name="img">Image to measure.</param>
            <returns>Calculated size.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartStyle.GetContentSize(System.Drawing.Graphics,System.Drawing.Size,System.String,System.Drawing.Image)">
            <summary>
            Calculates the new size of the content based on the specified width and style.
            </summary>
            <param name="g">A <see cref = "T:System.Drawing.Graphics"/> object that encapsulates a GDI+ drawing surface.</param>
            <param name="sz">The initial content size.</param>
            <param name="str">String to measure.</param>
            <param name="img">Image to measure.</param>
            <returns>Calculated size.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartStyle.GetInnermostRect(System.Drawing.Rectangle)">
            <summary>
            Calculates the inside area of a rectangle excluding margins, border, and padding.
            </summary>
            <param name="r">The initial rectangle area.</param>
            <returns>The inner rectangle.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartStyle.IsVertical">
            <summary>
            Whether the element of the chart is vertically located.
            </summary>
            <returns>True if the chart element is located vertically.</returns>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChartStyle.Border">
            <summary>
            Gets the border object.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChartStyle.BackColor">
            <summary>
            Gets or sets the background color.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChartStyle.ForeColor">
            <summary>
            Gets or sets the text color.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChartStyle.Font">
            <summary>
            Gets or sets the font.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChartStyle.Opaque">
            <summary>
            Gets or sets the opaqueness of the background.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChartStyle.Autowrap">
            <summary>
            Gets or sets whether text automatically wraps.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChartStyle.VerticalText">
            <summary>
            Gets or sets whether text is displayed vertically.
            For Western character sets, vertical text is similar to a 90 degree clockwise rotation.
            For Asian character sets, characters are placed vertically from top to bottom instead of right to left.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartStyle.setAsDefaultStyle(System.Boolean)">
            <summary>
            Set current style as default style.
            </summary>
            <param name="accumulate">If false then clear the default style before assignment.</param>
        </member>
        <member name="M:C1.Win.C1Chart3DBase.baseChartStyle.setAsDefaultStyle">
            <summary>
            Set current style as default style. Clear the default style before assignment.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChartStyle.BackColor2">
            <summary>
            Gets or sets the gradient or hatch background.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3DBase.baseChartStyle.Image">
            <summary>
            Gets or sets the title image.
            </summary>
        </member>
        <member name="T:C1.Win.C1ChartBase.FlagEditor">
            <summary>
            FlagEditor
            UITypeEditor that can be used to edit enumerations with a Flags attribute
            shows a checked listbox with one entry per flag, users can check any combination.
            (Should be built-in, shouldn't it?)
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Designer.TextForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Designer.TextForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.INotifyChanges">
            <summary>
            Represents an interface that will notify about changes.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.INotifyChanges.NotifyChanges">
            <summary>
            Called when a change needs to be notified.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.C1Chart3D">
            <summary>
            The main chart control class.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.Reset">
            <summary>
            Clears the chart of all data and settings.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Chart3D.C1Chart3D"/> class.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.#ctor(System.String)">
            <summary>
            Creates a new instance of <see cref="T:C1.Win.C1Chart3D.C1Chart3D"/> class.
            </summary>
            <param name="info">Run-time license information.</param>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.Dispose">
            <summary>
            Clean up any resources being used.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.EndInit">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.OnCreateControl">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.SetDefaultChart(System.Boolean)">
            <summary>
            Initializes the chart data to default values for design modes.
            </summary>
            <param name="initdata">Determines whether to initialize the data for the chart.</param>
        </member>
        <member name="P:C1.Win.C1Chart3D.C1Chart3D.UseAntiAlias">
            <summary>
            Gets or sets a value indicating whether to use anti-aliasing when displaying the chart.
            This property is now obsolete.  Instead, use UseAntiAliasedText and
            UseAntiAliasedGraphics to manage text and graphics antialiasing independently.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.C1Chart3D.UseAntiAliasedText">
            <summary>
            Gets or sets a value indicating whether to use anti-aliasing while rendering chart text (only).
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.C1Chart3D.UseAntiAliasedGraphics">
            <summary>
            Gets or sets a value indicating whether to use anti-aliasing while rendering chart graphics (only).
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.C1Chart3D.UseGrayscale">
            <summary>
            Gets or sets a value indicating whether to render the chart with grayscale instead of color.
            <remarks>
            The use of Grayscale is intended as a preview for output to a black and white device.  It
            does not affect style brush or pen colors internally, only the rendering of the chart to the
            output devices and images.  Using grayscale implies the use of double buffered output.
            </remarks>
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draw the chart on the specified drawing surface.
            </summary>
            <param name="g">Graphics.</param>
            <param name="r">Rectangle.</param>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.C1Chart3D.Repaint">
            <summary>
            Gets or sets a value indicating whether the chart is automatically repainted when its properties are modified.
            </summary>
            <remarks>
            <para>
            When the Repaint property is false, chart repaints are minimized as chart properties are changed.
            This is useful when multiple chart properties will be changed in an event, and it is desired to reduce
            the flicker associated with repeated repaints.
            </para>
            <para>
            Note that it is very important to set Repaint to true when property changes have been completed.
            Failure to do so can result in a chart that never repaints.
            </para>
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.C1Chart3D.ChartArea">
            <summary>
            Gets the control chart area object.
            </summary>
            <remarks>
            The ChartArea is that region of the chart that contains plot cube, axes and charted data.
            Its Style inherits directly from the parent C1Chart3D.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.C1Chart3D.Legend">
            <summary>
            Gets the control legend object.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.C1Chart3D.ChartLabels">
            <summary>
            Gets the control chart labels object.
            </summary>
            <remarks>
            The ChartLabels contain all <see cref="T:C1.Win.C1Chart3D.Chart3DLabel"/> objects.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.C1Chart3D.ChartGroups">
            <summary>
            Gets the control chart groups object.
            </summary>
            <remarks>
            ChartGroup contains information related to data values and related appearance.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.C1Chart3D.Style">
            <summary>
            Gets the chart style.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.C1Chart3D.LegendStyle">
            <summary>
            Gets the Legend style.
            </summary>
            <remarks>
            This property provides a convenient shortcut to the Legend.Style.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.C1Chart3D.FooterStyle">
            <summary>
            Gets the Footer style.
            </summary>
            <remarks>
            This property provides a convenient shortcut to the Footer.Style.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.C1Chart3D.HeaderStyle">
            <summary>
            Gets the Header style.
            </summary>
            <remarks>
            The property provides a convenient shortcut to the Header.Style.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.C1Chart3D.DefaultLabelStyle">
            <summary>
            Gets the ChartLabels default style.
            </summary>
            <remarks>
            The property provides a convenient shortcut to the ChartLabels.DefaultLabelStyle.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.C1Chart3D.AreaStyle">
            <summary>
            Gets the ChartArea style.
            </summary>
            <remarks>
            The property provides a convenient shortcut to the ChartArea.Style.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.C1Chart3D.Header">
            <summary>
            Gets the control header object.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.C1Chart3D.Footer">
            <summary>
            Gets the control footer object.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.SaveChartToFile(System.String)">
            <summary>
            Save chart description to the file.
            </summary>
            <param name="filename">File name.</param>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.SaveChartToString">
            <summary>
            Save chart description to a string.
            </summary>
            <returns>
            String that contains the chart description.
            </returns>
            <remarks>
            When a chart is saved to xml, the chart loads all the set properties into an xml file.
            With the SaveChartToString method the chart can also write these properties to a string value.
            The chart can also be loaded from this string.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.SaveChartToString(System.Boolean)">
            <summary>
            Save chart description to the string.
            </summary>
            <param name="formatting">Whether the output string is formatted.</param>
            <returns>
            String that contains chart description.
            </returns>
            <remarks>
            When a chart is saved to xml, the chart loads all the set properties into an xml file.
            With the SaveChartToString method the chart can also write these properties to a string value.
            The chart can also be loaded from this string.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.LoadChartFromFile(System.String)">
            <summary>
            Load chart description from the file.
            </summary>
            <param name="filename">File name.</param>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.LoadChartFromString(System.String)">
            <summary>
            Loads chart description from a string.
            </summary>
            <param name="s">String that contains chart description.</param>
            <remarks>
            When a chart is saved to xml, the chart loads all the set properties into an xml file.
            With the SaveChartToString method the chart can also write these properties to a string value.
            This method then loads the chart from this string value. 
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.SaveChartTemplateToFile(System.String)">
            <summary>
            Save chart template to the file.
            </summary>
            <param name="filename">File name.</param>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.SaveChartTemplateToString">
            <summary>
            Save chart template to a string.
            </summary>
            <returns>
            String that contains the chart template.
            </returns>
            <remarks>
            When a chart is saved to xml, the chart loads all the set properties into an xml file.
            With the SaveChartTemplateToString method the chart can also write these properties to a string value.
            The chart can also be loaded from this string.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.SaveChartTemplateToString(System.Boolean)">
            <summary>
            Save chart description to the string.
            </summary>
            <param name="formatting">Whether the output string is formatted.</param>
            <returns>
            String that contains chart description.
            </returns>
            <remarks>
            When a chart is saved to xml, the chart loads all the set properties into an xml file.
            With the SaveChartTemplateToString method the chart can also write these properties to a string value.
            The chart can also be loaded from this string.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.LoadChartTemplateFromFile(System.String)">
            <summary>
            Load chart template from the file.
            </summary>
            <param name="filename">File name.</param>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.LoadChartTemplateFromString(System.String)">
            <summary>
            Loads chart template from a string.
            </summary>
            <param name="s">String that contains the chart template.</param>
            <remarks>
            When a chart is saved to xml, the chart loads all the set properties into an xml file.
            With the SaveChartTemplateToString method the chart can also write these properties to a string value.
            This method then loads the chart from this string value. 
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.GetImage">
            <summary>
            Obtains an image of the current chart using the display size.
            </summary>
            <returns>
            Chart image created by an enhanced metafile of the chart.
            </returns>
            <remarks>
            This method creates an image of the current chart display an returns an Image object.
            If an error occurs during the file creation, chart drawing and writing, an appropriate
            exception is thrown indicating the cause of error.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.GetImage(System.Drawing.Size)">
            <summary>
            Obtains an image of the current chart using the specified size.
            </summary>
            <param name="sz">Image size in pixels.</param>
            <returns>
            Chart image created by an enhanced metafile of the chart.
            </returns>
            <remarks>
            This method creates an image of the current chart display an returns an Image object.
            If an error occurs during the file creation, chart drawing and writing, an appropriate
            exception is thrown indicating the cause of error.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.GetImage(System.Drawing.Imaging.ImageFormat,System.Drawing.Size)">
            <summary>
            Obtains an image of the current chart using the specified format and size.
            </summary>
            <param name="imgFmt">Image format.</param>
            <param name="sz">Image size in pixels.</param>
            <returns>Chart image.</returns>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.GetImage(System.Drawing.Imaging.ImageFormat)">
            <summary>
            Obtains an image of the current chart using the specified format and the display size.
            </summary>
            <param name="imgFmt">Image format.</param>
            <returns>Chart image.</returns>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.GetMetafile(System.Drawing.Size,System.Drawing.Imaging.EmfType)">
            <summary>
            Obtains an metafile of the current chart display using the specified size and type.
            </summary>
            <param name="sz">
            Metafile image size.
            </param>
            <param name="emfType">
            Metafile type.
            </param>
            <returns>
            Metafile of the current chart display.
            </returns>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.GetMetafile(System.Drawing.Size)">
            <summary>
            Obtains an metafile of the current chart display using the specified size.
            </summary>
            <param name="sz">
            Metafile image size.
            </param>
            <returns>
            Metafile of the current chart display.
            </returns>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.GetMetafile">
            <summary>
            Obtains an metafile of the current chart display using the specified size.
            </summary>
            <returns>
            Metafile of the current chart display.
            </returns>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.SaveImage(System.IO.Stream,System.Drawing.Imaging.ImageFormat,System.Drawing.Size)">
            <summary>
            Saves an chart image of the specified format and size to the specified stream.
            </summary>
            <param name="stream">Stream.</param>
            <param name="imgFmt">Image format.</param>
            <param name="sz">Image size in pixels.</param>
            <remarks>
            This method creates an image of the specified format of the current chart display and saves the results
            to the specified stream. If an error occurs, an appropriate exception is thrown indicating the cause of error.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.SaveImage(System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Saves an chart image of the specified format to the specified stream.
            </summary>
            <param name="stream">Stream.</param>
            <param name="imgFmt">Image format</param>
            <remarks>
            This method creates an image of the specified format of the current chart display and saves the results
            to the specified stream. The size of the current display, in pixels, is used. 
            If an error occurs, an appropriate exception is thrown indicating the cause of error.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.SaveImage(System.Byte[]@,System.Drawing.Imaging.ImageFormat,System.Drawing.Size)">
            <summary>
            Saves an chart image of the specified format and size to the specified byte array.
            </summary>
            <param name="byteArray">Byte array.</param>
            <param name="imgFmt">Image format.</param>
            <param name="sz">Image size in pixels.</param>
            <remarks>
            This method creates an image of the specified format and size of the current chart display and saves the results
            to the specified byte array. If an error occurs, an appropriate exception is thrown indicating the cause of error.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.SaveImage(System.Byte[]@,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Saves an chart image of the specified format to the specified byte array.
            </summary>
            <param name="byteArray">Byte array.</param>
            <param name="imgFmt">Image format.</param>
            <remarks>
            This method creates an image of the specified format and the current display size and saves the results
            to the specified byte array. If an error occurs, an appropriate exception is thrown indicating the cause of error.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.SaveImage(System.Drawing.Imaging.ImageFormat,System.Drawing.Size)">
            <summary>
            Saves an chart image of the specified format and size to the clipboard.
            </summary>
            <param name="imgFmt">Image format.</param>
            <param name="sz">Image size in pixels.</param>
            <remarks>
            This method creates an image of the specified format and size and saves the results
            to the clipboard. If an error occurs, an appropriate exception is thrown indicating the cause of error.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.SaveImage(System.Drawing.Imaging.ImageFormat)">
            <summary>
            Saves an chart image of the specified format and display size to the clipboard.
            </summary>
            <param name="imgFmt">Image format.</param>
            <remarks>
            This method creates an image of the specified format and display size and saves the results
            to the clipboard. If an error occurs, an appropriate exception is thrown indicating the cause of error.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.SaveImage(System.String,System.Drawing.Imaging.ImageFormat,System.Drawing.Size)">
            <summary>
            Saves an chart image of the specified format and size to the specified file.
            </summary>
            <param name="filename">File name.</param>
            <param name="imgFmt">Image format.</param>
            <param name="sz">Image size in pixels.</param>
            <remarks>
            This method creates an image of the specified format and size and saves the results
            to the specified file. If an error occurs, an appropriate exception is thrown indicating the cause of error.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.SaveImage(System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Saves an chart image of the specified format and display size to the specified file.
            </summary>
            <param name="filename">File name.</param>
            <param name="imgFmt">Image format</param>
            <remarks>
            This method creates an image of the specified format and display size and saves the results
            to the specified file. If an error occurs, an appropriate exception is thrown indicating the cause of error.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.PrintChart(C1.Win.C1Chart3D.PrintScaleEnum,System.Drawing.Rectangle,System.Drawing.Printing.PageSettings,System.Boolean)">
            <summary>
            Prints the control using the specified scaling and page settings to the specified rectangle.
            </summary>
            <param name="scaling">Chart scaling</param>
            <param name="r">Rectangle</param>
            <param name="ps">Page settings</param>
            <param name="bitmap">Print as a bitmap</param>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.PrintChart(C1.Win.C1Chart3D.PrintScaleEnum,System.Drawing.Rectangle,System.Drawing.Printing.PageSettings)">
            <summary>
            Prints the control using the specified scaling and page settings to the specified rectangle.
            </summary>
            <param name="scaling">Chart scaling</param>
            <param name="r">Rectangle</param>
            <param name="ps">Page settings</param>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.PrintChart(C1.Win.C1Chart3D.PrintScaleEnum,System.Drawing.Rectangle)">
            <summary>
            Prints the control using the specified scaling within the specified rectangle of the printer page.
            </summary>
            <param name="scaling">Scaling.</param>
            <param name="r">Rectangle.</param>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.PrintChart(C1.Win.C1Chart3D.PrintScaleEnum)">
            <summary>
            Prints the control using the specified scaling within the margins of the printer page.
            </summary>
            <param name="scaling">Scaling.</param>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.PrintChart">
            <summary>
            Prints the control using default scaling within the margins of the printer page.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.PageSetup">
            <summary>
            Raises the PageSetup dialog to manage the page settings.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.PrintSetup">
            <summary>
            Raises the PrintSetup dialog to manage the printer settings.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.ShowWizard">
            <summary>
            Raises the wizard dialog at runtime.
            </summary>
            <returns>DialogResult</returns>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.ShowWizard(System.ComponentModel.Design.IDesigner)">
            <summary>
            Raises the chart wizard dialog at runtime.
            </summary>
            <param name="designer">The basic framework object for building a custom designer.</param>
            <returns>The return value of a dialog box.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.ShowProperties">
            <summary>
            Raises the properties dialog at runtime.
            </summary>
            <returns>DialogResult</returns>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.ShowProperties(System.Drawing.Rectangle@)">
            <summary>
            Raises the properties dialog at runtime.
            </summary>
            <param name="rect">
            <para>Specifies a Rectangle reference that provides and returns the properties dialog location in screen coordinates.</para>
            Specifying an empty rectangle will center the properties dialog relative to the chart parent window.
            </param>
            <remarks>The properties dialog will always be displayed with a minimum size.</remarks>
            <returns>DialogResult</returns>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.ShowProperties(System.ComponentModel.Design.IDesigner)">
            <summary>
            Raises the chart properties dialog at runtime.
            </summary>
            <param name="designer">The basic framework object for building a custom designer.</param>
            <returns>The return value of a dialog box.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.SaveLocalizations(System.String)">
            <summary>
            Writes all current localizations to the specified file.
            </summary>
            <param name="LocalizationFile">Specifies the file to which localizations are written.</param>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.SaveLocalizations(System.IO.Stream)">
            <summary>
            Writes all current localizations to the specified stream.
            </summary>
            <param name="stream">Specifies the Stream to which localizations are written.</param>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.SaveLocalizations(System.Byte[]@)">
            <summary>
            Writes all current localizations to the specified byte array.
            </summary>
            <param name="byteArray">Specifies the byte arrary to which localizations are written.</param>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.LoadLocalizations(System.String)">
            <summary>
            Reads all localizations from the specified file and uses them locally at runtime.
            </summary>
            <param name="LocalizationFile">Specifies the file to which localizations are written.</param>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.LoadLocalizations(System.IO.Stream)">
            <summary>
            Reads all localizations from the specified stream and uses them locally at runtime.
            </summary>
            <param name="stream">Specifies the Stream to which localizations are written.</param>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.LoadLocalizations(System.Byte[])">
            <summary>
            Reads all localizations from the specified byte array and uses them locally at runtime.
            </summary>
            <param name="byteArray">Specifies the byte array to which localizations are written.</param>
        </member>
        <member name="P:C1.Win.C1Chart3D.C1Chart3D.AssemblyFileVersionString">
            <summary>
            Gets the control�s AssemblyFileVersion as a string.
            The AssemblyFileVersion is also viewable from the properties dialog of the control assembly dll.
            </summary>
            <remarks>
            <para>
            The AssemblyFileVersion is different from the AssemblyVersion. 
            The AssemblyFileVersion is viewable from the properties dialog of the control assembly dll.
            The AssemblyVersion is also listed in the properties dialog, but only in the �other version information� section.
             When viewing the Global Assembly Cache (GAC) in Windows Explorer, the AssemblyVersion is shown as a standard column.
            </para>
            <para>
            The AssemblyFileVersion will always change with each separate release of the Chart control, including internal changes.
            The AssemblyVersion will only change when the object model has been changed.
            </para>
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.C1Chart3D.AssemblyVersionString">
            <summary>
            Gets the control�s AssemblyVersion as a string.
            The AssemblyVersion is also viewable from the properties dialog of the control assembly dll,
            but only in the �other version information� section.
            </summary>
            <remarks>
            <para>
            The AssemblyFileVersion is different from the AssemblyVersion.  The AssemblyFileVersion is viewable from
            the properties dialog of the control assembly dll.  The AssemblyVersion is also listed in the properties dialog,
            but only in the �other version information� section.  When viewing the Global Assembly Cache (GAC) in Windows Explorer,
            the AssemblyVersion is shown as a standard column.
            </para>
            <para>
            The AssemblyFileVersion will always change with each separate release of the Chart control, including internal changes.
            The AssemblyVersion will only change when the object model has been changed.
            </para>
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.C1Chart3D"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.OnResize(System.EventArgs)">
            <inheritdoc/>
        </member>
        <member name="T:C1.Win.C1Chart3D.C1Chart3D.C1Chart3DAccessibleObject">
            <summary>
            Provides information that accessibility applications use to adjust an application's user interface (UI) for users with impairments.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.C1Chart3DAccessibleObject.#ctor(C1.Win.C1Chart3D.C1Chart3D)">
            <summary>
            Creates a new instance of <see cref="T:C1.Win.C1Chart3D.C1Chart3D.C1Chart3DAccessibleObject"/> class.
            </summary>
            <param name="chart">The <see cref="T:C1.Win.C1Chart3D.C1Chart3D"/> object.</param>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.C1Chart3DAccessibleObject.GetChildCount">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.C1Chart3DAccessibleObject.GetChild(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.CreateAccessibilityInstance">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3D.C1Chart3D.Interaction">
            <summary>
            Gets the control interaction object.
            </summary>
            <remarks>
            The Interaction object controls the automated interactive
            features of the chart, including mouse driven rotation,
            scaling, translating and zooming.
            </remarks>
        </member>
        <member name="P:C1.Win.C1Chart3D.C1Chart3D.InteractionData">
            <summary>
            Gets or sets interactive action data.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.C1Chart3D.ThemeChanged(System.Object)">
            <summary>
            Called after the theme has changed.
            </summary>
            <param name="theme">The new theme object.</param>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DTypeEnum">
            <summary>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Win.C1Chart3D.Chart3DGroup.ChartType"/>
            property in the <see cref="T:C1.Win.C1Chart3D.Chart3DGroup"/> class.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.Chart3DTypeEnum.Scatter">
            <summary>
            Scatter chart
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.Chart3DTypeEnum.Bar">
            <summary>
            Bar chart
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.Chart3DTypeEnum.Surface">
            <summary>
            Surface chart
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.PreviewMethodEnum">
            <summary>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Win.C1Chart3D.Chart3DView.PreviewMethod"/>
            property in the <see cref="T:C1.Win.C1Chart3D.Chart3DView"/> class.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.PreviewMethodEnum.PreviewAxes">
            <summary>
            During rotating, scaling, or zooming action only the axes of the chart will be redrawn.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.PreviewMethodEnum.PreviewFull">
            <summary>
            During rotating, scaling, or zooming action the entire chart will be redrawn.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DArea">
            <summary>
            The Chart3DArea class describes the ChartArea of the chart.
            This area includes plotcube, all axes and the charted data.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DArea.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DArea.View">
            <summary>
            Gets the 3d-view object.
            </summary>
            <remarks>
            View object controls appearance of plot cube in 3d-space.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DArea"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DArea.AxisX">
            <summary>
            Gets the X-axis object.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DArea"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DArea.AxisY">
            <summary>
            Gets the Y-axis object.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DArea"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DArea.AxisZ">
            <summary>
            Gets the Z-axis object.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DArea"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DArea.Axes">
            <summary>
            Gets the axes collection object.
            </summary>
            <remarks>
            The Axes collection is a collection of three <see cref="T:C1.Win.C1Chart3D.Chart3DAxis"/> objects (AxisX, AxisY and AxisZ).
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DArea"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DArea.Style">
            <summary>
            Gets the chart area style.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DArea"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DArea.Location">
            <summary>
            Gets or sets the location of the ChartArea in chart control client coordinates.
            </summary>
            <remarks>
            The Location property always returns the actual location of the upper, left corner of the chart element
            it describes whether or not the element placement is manual or automatic.
            Modifying this value will change LocationDefault.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DArea"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DArea.LocationDefault">
            <summary>
            Gets or sets the default location of the ChartArea.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DArea"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DArea.Size">
            <summary>
            Gets or sets the size of the ChartArea in chart control client coordinates.
            </summary>
            <remarks>
            The Size property always returns the actual size of the chart element it describes whether or not
            the element placement is manual or automatic. Modifying this value will change SizeDefault.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DArea"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DArea.SizeDefault">
            <summary>
            Gets or sets the default size of the ChartArea.
            </summary>
            <remarks>
            The SizeDefault property specifies the size of the chart element it describes.
            Non-negative values indicate the explicit width and height in chart client coordinates
            to place the chart element.Negative values will allow auto-positioning.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DArea"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DArea.Text">
            <summary>
            Gets or sets the <see cref = "T:C1.Win.C1Chart3D.Chart3DArea"/> element text.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DArea.NotifyChanges">
            <inheritdoc/>
        </member>
        <member name="T:C1.Win.C1Chart3D.FormatEnum">
            <summary>
            <para>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Win.C1Chart3D.Chart3DAxis.AnnoFormat"/>
            property in the <see cref="T:C1.Win.C1Chart3D.Chart3DAxis"/> class.  
            </para>
            <para>
            See .Net date and time format strings and standard numeric format strings for more information.
            </para>
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.FormatEnum.NumericManual">
            <summary>
            Used in conjunction with the Axis AnnoFormatString property to specify a .Net custom numeric format.
            (See custom numeric format strings in the .Net documentation).
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.FormatEnum.NumericCurrency">
            <summary>
            A currency amount format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.FormatEnum.NumericGeneral">
            <summary>
            A general number format.  Formatted into the most compact decimal form using fixed or scientific notation.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.FormatEnum.NumericExponential">
            <summary>
            A scientific or exponential format in the form "-d.ddd…E+ddd" or "-d.ddd…e+ddd".
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.FormatEnum.NumericPercentage">
            <summary>
            A percentage amount format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.FormatEnum.NumericRoundtrip">
            <summary>
            A format that guarantees that a numeric value after being converted will be returned as the same numeric value.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.FormatEnum.NumericHexadecimal">
            <summary>
            A hexadecimal format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.FormatEnum.DateManual">
            <summary>
            Used in conjunction with the Axis AnnoFormatString property to specify a .Net custom date/datetime format.
            (See custom date and time format strings in the .Net documentation).
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.FormatEnum.DateShort">
            <summary>
            A short date format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.FormatEnum.DateLong">
            <summary>
            A long date format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.FormatEnum.DateFullShortTime">
            <summary>
            A full format for both short date and time.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.FormatEnum.DateFull">
            <summary>
            A full date format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.FormatEnum.DateGeneralShortTime">
            <summary>
            A general date format with short time format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.FormatEnum.DateGeneral">
            <summary>
            A general date format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.FormatEnum.DateMonth">
            <summary>
            A month format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.FormatEnum.DateRFC1123">
            <summary>
            A date format based on the IETF RFC 1123 specification.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.FormatEnum.DateSortable">
            <summary>
            A sortable date format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.FormatEnum.DateShortTime">
            <summary>
            A short time format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.FormatEnum.DateLongTime">
            <summary>
            A long time format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.FormatEnum.DateUniversalSortable">
            <summary>
            A universally sortable date format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.FormatEnum.DateUniversal">
            <summary>
            A universal date format.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.FormatEnum.DateYear">
            <summary>
            A year format.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.AnnotationMethodEnum">
            <summary>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Win.C1Chart3D.Chart3DAxis.AnnoMethod"/>
            property in the <see cref="T:C1.Win.C1Chart3D.Chart3DAxis"/> class.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AnnotationMethodEnum.DataLabels">
            <summary>
            Annotate using data labels.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AnnotationMethodEnum.ValueLabels">
            <summary>
            Annotate using ValueLabels property.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AnnotationMethodEnum.Values">
            <summary>
            Annotate using chart's values.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.AnnoPositionEnum">
            <summary>
            Use the members of this enumeration to determine which axes edges of the plot cube will have annotations.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AnnoPositionEnum.Both">
            <summary>
            The axis on both sides of the plot cube will be annotated.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AnnoPositionEnum.Near">
            <summary>
            The axis on the near side of the plot cube will be annotated.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AnnoPositionEnum.Far">
            <summary>
            The axis on the far side of the plot cube will be annotated.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AnnoPositionEnum.None">
            <summary>
            The axis is not annotated.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.Notifier">
            <summary>
            Represents the class that will notify about changes.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.Notifier.m_owner">
            <summary>
            The owner object.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Notifier.SetOwner(C1.Win.C1Chart3D.INotifyChanges)">
            <summary>
            Sets the owner object.
            </summary>
            <param name="owner">The owner object.</param>
        </member>
        <member name="M:C1.Win.C1Chart3D.Notifier.NotifyChanges">
            <summary>
            Called when a change needs to be notified.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.NotifiersCollection">
            <summary>
            Represents the class that will notify about collection changes.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.NotifiersCollection.NotifyChanges">
            <summary>
            Called when a change needs to be notified.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.NotifiersCollection.OnInsert(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.NotifiersCollection.OnInsertComplete(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.NotifiersCollection.OnSet(System.Int32,System.Object,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DAxisLabel">
            <summary>
            Represents axis label.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DAxisLabel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Chart3D.Chart3DAxisLabel"/> class.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxisLabel"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxisLabel.Text">
            <summary>
            Gets or sets label text.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxisLabel"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxisLabel.AxisValue">
            <summary>
            Value on axis for this label.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxisLabel.Value">
            <summary>
            Gets or sets label value.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxisLabel"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DAxisLabel.ToString">
            <inheritdoc/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DAxisLabelsCollection">
            <summary>
            Collection of axis labels.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DAxisLabelsCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Chart3D.Chart3DAxisLabelsCollection"/> class.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxisLabelsCollection"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxisLabelsCollection.Item(System.Int32)">
            <summary>
            Gets or sets the specified label from the collection by numeric index.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxisLabelsCollection"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxisLabelsCollection.Item(System.String)">
            <summary>
            Gets gets a label by its text value.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxisLabelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DAxisLabelsCollection.AddNewLabel">
            <summary>
            Creates a new label and appends it to the collection.
            </summary>
            <returns>The reference to the new label.</returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxisLabelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DAxisLabelsCollection.Add(C1.Win.C1Chart3D.Chart3DAxisLabel)">
            <summary>
            Add the specified label to the collection.
            </summary>
            <param name="label">Label to add.</param>
            <returns>The label index.</returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxisLabelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DAxisLabelsCollection.Add(System.Double,System.String)">
            <summary>
            Creates a new label with specified value and text and appends it to the collection. 
            </summary>
            <param name="value">Value.</param>
            <param name="text">Text.</param>
            <returns>The new label index.</returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxisLabelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DAxisLabelsCollection.Contains(C1.Win.C1Chart3D.Chart3DAxisLabel)">
            <summary>
            Determines whether the specified label exists in the collection.
            </summary>
            <param name="lbl">Label to locate.</param>
            <returns>Whether the label exists.</returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxisLabelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DAxisLabelsCollection.CopyTo(C1.Win.C1Chart3D.Chart3DAxisLabel[],System.Int32)">
            <summary>
            Copies the collection of labels objects beginning with the specified index to an array of labels.
            </summary>
            <param name="array">Array.</param>
            <param name="index">Starting zero-based index.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxisLabelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DAxisLabelsCollection.IndexOf(C1.Win.C1Chart3D.Chart3DAxisLabel)">
            <summary>
            Determines the index of the specified label of the collection.
            </summary>
            <param name="lbl">Label to locate.</param>
            <returns>The label index.</returns>
            <remarks>
            Returns -1 if the label is not in the collection.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxisLabelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DAxisLabelsCollection.Insert(System.Int32,C1.Win.C1Chart3D.Chart3DAxisLabel)">
            <summary>
            Inserts the specified label at the specified index of the collection.
            </summary>
            <param name="index">The label index.</param>
            <param name="lbl">Label to insert.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxisLabelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DAxisLabelsCollection.Remove(C1.Win.C1Chart3D.Chart3DAxisLabel)">
            <summary>
            Removes the specified label from the collection.
            </summary>
            <param name="lbl">Label to remove.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxisLabelsCollection"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DGridLines">
            <summary>
            The Chart3DGridLines class and its properties are used for control appearance of grid.
            </summary>
            <remarks>
            It is returned by the MajorGrid property of a Chart3DAxis.
            </remarks>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DGridLines.Style">
            <summary>
            Gets or sets line style for drawing grid.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DGridLines"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DGridLines.IsOnXYPlane">
            <summary>
            Gets or sets whether grid lines are to appear on the XY-plane.
            </summary>
            <remarks>
            In 2D projections, grid lines are drawn perpendicular to the axis.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DGridLines"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DGridLines.IsOnXZPlane">
            <summary>
            Gets or sets whether grid lines are to appear on the XZ-plane.
            </summary>
            <remarks>
            In 2D projections, grid lines are drawn perpendicular to the axis.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DGridLines"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DGridLines.IsOnYZPlane">
            <summary>
            Gets or sets whether grid lines are to appear on the YZ-plane.
            </summary>
            <remarks>
            In 2D projections, grid lines are drawn perpendicular to the axis.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DGridLines"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DAxis">
            <summary>
            Represents one axis of the chart.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DAxis.ToString">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxis.Max">
            <summary>
            Gets or sets the maximum value of the axis.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxis"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DAxis.ShouldSerializeMax">
            <summary>
            Returns false if the Axis Max property is in the default state.
            </summary>
            <returns></returns>
            <remarks>
            The default state is to automatically calculate the Max property value
            by setting the AutoMax property to true.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxis"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxis.Min">
            <summary>
            Gets or sets the minimum value of the axis.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxis"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DAxis.ShouldSerializeMin">
            <summary>
            Returns false if the Axis Min property is in the default state.
            </summary>
            <returns></returns>
            <remarks>
            The default state is to automatically calculate the Min property value
            by setting the AutoMin property to true.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxis"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxis.AutoMajor">
            <summary>
            Gets or sets whether major tick mark values are calculated automatically.
            </summary>
            <remarks>
            Setting the UnitMajor property automatically sets AutoMajor to false.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxis"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxis.AutoMinor">
            <summary>
            Gets or sets whether minor tick mark values are calculated automatically.
            </summary>
            <remarks>
            Setting the UnitMinor property automatically sets AutoMinor to false.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxis"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxis.UnitMajor">
            <summary>
            Gets or sets the units between major tickmarks.
            </summary>
            <remarks>
            Setting this value turns off AutoMajor.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxis"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DAxis.ShouldSerializeUnitMajor">
            <summary>
            Returns false if the Axis UnitMajor property is in the default state.
            </summary>
            <returns></returns>
            <remarks>
            The default state is to automatically calculate the UnitMajor property value by setting
            the AutoMajor property to true.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxis"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxis.UnitMinor">
            <summary>
            Gets or sets the units between minor tickmarks.
            </summary>
            <remarks>
            Setting this value turns off AutoMinor.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxis"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DAxis.ShouldSerializeUnitMinor">
            <summary>
            Returns false if the Axis UnitMinor property is in the default state.
            </summary>
            <returns></returns>
            <remarks>
            The default state is to automatically calculate the MUnitMinor property value by setting
            the AutoMinor property to true.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxis"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxis.AutoMax">
            <summary>
            Gets or sets whether the axis minimum value is calculated automatically.
            </summary>
            <remarks>
            Setting the Max property automatically sets AutoMax to false.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxis"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxis.AutoMin">
            <summary>
            Gets or sets whether the axis minimum value is calculated automatically.
            </summary>
            <remarks>
            Setting the Min property automatically sets AutoMin to false.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxis"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxis.AnnoFormat">
            <summary>
            Gets or sets the annotation format.
            </summary>
            <remarks>
            <para>
            The AnnoFormat property allow specification of numeric and time formats using enumerated values.
            </para>
            <para>
            For numeric values, each of the enumerations specify formatting similar to that specified by the .Net
            <see cref="T:System.Globalization.NumberFormatInfo"/> class, including Currency, General, Exponential, Percentage,
            Roundtrip and Hexadecimal. NumericManual is used in conjunction with the AnnoFormatString property to specify
            a custom format string.
            </para>
            <para>
            For date/time values, each of the enumerations specify formatting similar to that specified by the .Net
            <see cref="T:System.Globalization.DateTimeFormatInfo"/> class, including combinations of long and short dates
            and times, and universal time representations.  DateManual is used in conjunction with the AnnoFormatString
            property to specify a custom format string.
            </para>
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxis"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxis.AnnoFormatString">
            <summary>
            Gets or set the annotation format string used with manual formats.
            </summary>
            <remarks>
            <para>
            Only used when AnnoFormat property is NumericManual or DateManual. The AnnoFormatString property specifies
            a custom string for formatting the annotations along the axis.
            </para>
            <para>
            When the AnnoFormat property is NumericManual, the AnnoFormatString property can be set to format strings as
            described by the .Net double.ToString(AnnoFormatString) method call.  Custom numeric format strings are described
            in detail by the .Net documentation under “Custom Numeric Format Strings”.  If the AnnoFormatString property
            is empty, then “g” or General is used.
            </para>
            <para>
            When the AnnoFormat property is DateManual, the AnnoFormatString property can be set to format string as described
            by the .Net DateTime.ToString(AnnoFormatSTring) method call.  Custom DateTime format strings are described in detail
            by the .Net documentation under “Date and Time Format Strings”.  If the AnnoFormatString property is empty,
            then C1Chart selects a format string appropriate for the time span defined by the axis maximum and minimum values.
            </para>
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxis"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxis.Visible">
            <summary>
            Gets or sets the axis visibility.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxis"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxis.AnnoRotated">
            <summary>
            Gets or sets whether annotation rotated.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxis"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxis.Text">
            <summary>
            Axis title.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxis.Title">
            <summary>
            Gets or sets the title of the axis.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxis"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxis.AnnoPosition">
            <summary>
            Gets or sets the position of the axis annotation and text.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxis"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxis.GridX">
            <summary>
            Axis grid across X.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxis.GridY">
            <summary>
            Axis grid across Y.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxis.GridZ">
            <summary>
            Axis grid across Z.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxis.GridStyle">
            <summary>
            Axis grid style.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DAxis.ShouldSerializeGridStyle">
            <summary>
            Indicates whether the <see cref = "P:C1.Win.C1Chart3D.Chart3DAxis.GridStyle"/> has a default value.
            </summary>
            <returns>True if the <see cref = "P:C1.Win.C1Chart3D.Chart3DAxis.GridStyle"/> has no default value; otherwise, it is false.</returns>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxis.Labels">
            <summary>
            The collection of axis labels.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxis.ValueLabels">
            <summary>
            Gets the axis value labels.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxis"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxis.AnnoMethod">
            <summary>
            Gets or sets annotation method of the axis.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxis"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxis.MajorGrid">
            <summary>
            Gets the major grid lines object.
            </summary>
            <remarks>
            Major grids are placed coincident with major tickmarks at UnitMajor intervals.
            The MajorGrid property is used to set the grid line appearance.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxis"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DAxis.NotifyChanges">
            <summary>
            Called when a change needs to be notified.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DAxisCollection">
            <summary>
            The collection of three Chart3DAxis objects named “X”, “Y” and “Z”.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxisCollection.Item(System.Int32)">
            <summary>
            Gets the specified Axis from the collection by numeric index.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxisCollection"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxisCollection.Item(System.String)">
            <summary>
            Gets the specified Axis from the collection by string.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxisCollection"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxisCollection.AxisTitleFont">
            <summary>
            Gets or sets the axis title font.
            </summary>
            <remarks>
            The axis title font size is measured in hundredths of the unit cube size. All axes have the same axis title font.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxisCollection"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAxisCollection.AxisFont">
            <summary>
            Gets or sets the axis annotation font.
            </summary>
            <remarks>
            The axis font size is measured in hundredths of the unit cube size. All axes have the same axis font.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxisCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DAxisCollection.ToString">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DAxisCollection.CopyTo(C1.Win.C1Chart3D.Chart3DAxis[],System.Int32)">
            <summary>
            Copies the collection <see cref="T:C1.Win.C1Chart3D.Chart3DAxis"/> elements beginning with
            the specified index to an array of <see cref="T:C1.Win.C1Chart3D.Chart3DAxis"/> objects.
            </summary>
            <param name="array">Output array.</param>
            <param name="index">Starting index.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAxisCollection"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.AnnoMethodTypeConverter">
            <summary>
            The <see cref="P:C1.Win.C1Chart3D.Chart3DAxis.AnnoMethod"/> property type converter.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.AnnoMethodTypeConverter.#ctor">
            <summary>
            Creates a new instance of <see cref="T:C1.Win.C1Chart3D.AnnoMethodTypeConverter"/> class.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.AnnoMethodTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="T:C1.Win.C1Chart3D.BarFormatEnum">
            <summary>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Win.C1Chart3D.Chart3DBar.ColumnFormat"/>
            and <see cref="P:C1.Win.C1Chart3D.Chart3DBar.RowFormat"/> property in the <see cref="T:C1.Win.C1Chart3D.Chart3DBar"/> class.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.BarFormatEnum.Fixed">
            <summary>
            Fixed format (bars are fixed width and centered about their X or Y values).
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.BarFormatEnum.Histogram">
            <summary>
            Histogram format (each bar fills the space up to its adjoining bar).
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.BarColor">
            <summary>
            The BarColor class and its properties are used for setting individual bar colors.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.BarColor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Chart3D.BarColor"/> class.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.BarColor"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.BarColor.Row">
            <summary>
            Gets or sets bar row.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.BarColor"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.BarColor.Column">
            <summary>
            Gets or sets bar column.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.BarColor"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.BarColor.Color">
            <summary>
            Gets or sets bar color.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.BarColor"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.BarColor.Clone">
            <summary>
            Creates the copy of <see cref="T:C1.Win.C1Chart3D.BarColor"/> object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:C1.Win.C1Chart3D.BarColorCollection">
            <summary>
            Stores BarColor objects.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.BarColorCollection.Item(System.Int32)">
            <summary>
            Gets the specified BarColor from the collection by numeric index.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.BarColorCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.BarColorCollection.Add(C1.Win.C1Chart3D.BarColor)">
            <summary>
            Adds a BarColor object to the collection.
            </summary>
            <param name="bc">The BarColor to add.</param>
            <returns>
            An integer indicating the index of the added BarColor.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.BarColorCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.BarColorCollection.Contains(C1.Win.C1Chart3D.BarColor)">
            <summary>
            Determines whether the specified BarColor exists in the collection.
            </summary>
            <param name="bc">The BarColor to locate.</param>
            <returns>
            A boolean value indicating whether the BarColor is a member of the collection.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.BarColorCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.BarColorCollection.CopyTo(C1.Win.C1Chart3D.BarColor[],System.Int32)">
            <summary>
            Copies the collection <see cref="T:C1.Win.C1Chart3D.BarColor"/> elements beginning with the specified index to
            an array of BarColor objects.
            </summary>
            <param name="array">Output array.</param>
            <param name="index">Starting index.</param>
            <seealso cref="T:C1.Win.C1Chart3D.BarColorCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.BarColorCollection.IndexOf(C1.Win.C1Chart3D.BarColor)">
            <summary>
            Gets the index of the specified <see cref="T:C1.Win.C1Chart3D.BarColor"/> in the collection.
            </summary>
            <param name="bc">The BarColor to locate.</param>
            <returns>
            An integer indicating the index of the specified BarColor.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.BarColorCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.BarColorCollection.Insert(System.Int32,C1.Win.C1Chart3D.BarColor)">
            <summary>
            Adds a BarColor object to the collection at the specified index.
            </summary>
            <param name="index">Index.</param>
            <param name="bc">The BarColor to insert.</param>
            <seealso cref="T:C1.Win.C1Chart3D.BarColorCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.BarColorCollection.Remove(C1.Win.C1Chart3D.BarColor)">
            <summary>
            Removes a BarColor object from the collection.
            </summary>
            <param name="bc">The BarColor to remove.</param>
            <seealso cref="T:C1.Win.C1Chart3D.BarColorCollection"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DBar">
            <summary>
            The Bar class and its properties are only used for bar charts.  It is returned by the Bar property of a ChartGroup.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DBar.ColumnWidth">
            <summary>
            Gets or sets column width.
            </summary>
            <remarks>
            Width is measured as a percentage of the total amount of space available.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DBar"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DBar.RowWidth">
            <summary>
            Gets or sets row width.
            </summary>
            <remarks>
            Width is measured as a percentage of the total amount of space available.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DBar"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DBar.RowFormat">
            <summary>
            Gets or sets row format.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DBar"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DBar.ColumnFormat">
            <summary>
            Gets or sets column format.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DBar"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DBar.Origin">
            <summary>
            Gets or sets origin of Z-axis for the bar chart.
            </summary>
            <remarks>
            Defines the Z-value from which bars are filled.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DBar"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DBar.Colors">
            <summary>
            Gets the collection of BarColor objects.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DBar"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DBar.SetBarColor(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Sets individual bar color.
            </summary>
            <param name="column">Column index.</param>
            <param name="row">Row index.</param>
            <param name="color">Bar color.</param>
            <remarks>
            If the row is equal to –1, then this method applies to the entire row. If the column is equal to -1,
            then this method applies to entire column.
            </remarks>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DBar.GetBarColor(System.Int32,System.Int32)">
            <summary>
            Gets an individual bar color.
            </summary>
            <param name="column">Column index.</param>
            <param name="row">Row index.</param>
            <returns>Bar color.</returns>
            <remarks>
            If the row is equal to –1, then this method applies to the entire row. If the column is equal to -1,
            then this method applies to entire column.
            </remarks>
        </member>
        <member name="T:C1.Win.C1Chart3D.ZoneMethodEnum">
            <summary>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Win.C1Chart3D.Chart3DContour.ZoneMethod"/>
            property in the <see cref="T:C1.Win.C1Chart3D.Chart3DContour"/> class.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.ZoneMethodEnum.Contours">
            <summary>
            Contour zoning, a cell can have different colors, according to corresponding contour level.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.ZoneMethodEnum.Cells">
            <summary>
            Cell zoning, a cell can have only one color.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.ContourMethodEnum">
            <summary>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Win.C1Chart3D.Chart3DContour.ContourMethod"/>
            property in the <see cref="T:C1.Win.C1Chart3D.Chart3DContour"/> class.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.ContourMethodEnum.Default">
            <summary>
            Default method of contour calculation.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.ContourMethodEnum.Classic">
            <summary>
            Previous default method of contour calculation prior before recent improvements.
            This ContourMethod is provided for compatibility with previous results.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.ContourMethodEnum.MarchingSquares">
            <summary>
            Method of marching squares that provides an alternate contour calculation.
            This method requires an increased number of calculations, but tends to
            improve contour symmetry. 
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DContourStyle">
            <summary>
            Represents appearance of one level of contour and zone charts.
            </summary>
        </member>
        <member name="E:C1.Win.C1Chart3D.Chart3DContourStyle.Changed">
            <summary>
            Fires when Chart3D contour style was changed.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DContourStyle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Chart3D.Chart3DContourStyle"/> class.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContourStyle"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DContourStyle.#ctor(System.Drawing.Color,System.Drawing.Color,System.Single,C1.Win.C1Chart3D.LinePatternEnum)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Chart3D.Chart3DContourStyle"/> class with
            specified parameters.
            </summary>
            <param name="fillColor">Fill color.</param>
            <param name="lineColor">Line color.</param>
            <param name="width">Line width.</param>
            <param name="pattern">Line pattern.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContourStyle"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DContourStyle.FillColor">
            <summary>
            Gets or sets zone fill color.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContourStyle"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DContourStyle.LineStyle">
            <summary>
            Gets or sets line style for drawing contours.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContourStyle"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DContourStyle.ToString">
            <summary>
            Returns a string that represents the current Chart3DContourStyle.
            </summary>
            <returns>
            A string that represents the current Chart3DContourStyle.
            </returns>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DContourStyle.Dispose">
            <summary>
            Perform general cleanup.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DContourStyles">
            <summary>
            Describes the set of Chart3DContourStyle objects.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DContourStyles.Colors">
            <summary>
            Gets the collection of colors.
            </summary>
            <remarks>
            This collection is used when <see cref="P:C1.Win.C1Chart3D.Chart3DContourStyles.ColorSet"/> property
            is set to <see cref="F:C1.Win.C1Chart3D.ColorSetEnum.Custom"/>.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContourStyles"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DContourStyles.ShouldSerializeColors">
            <summary>
            Returns false if the Chart3DContourStyles Colors property is in the default state.
            </summary>
            <returns>
            Boolean.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContourStyles"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DContourStyles.Styles">
            <summary>
            Gets the collection of contour styles.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContourStyles"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DContourStyles.ShouldSerializeStyles">
            <summary>
            Returns false if the Chart3DContourStyles Styles property is in the default state.
            </summary>
            <returns></returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContourStyles"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DContourStyles.Item(System.Int32)">
            <summary>
            Gets the specified Chart3DContourStyle by numeric index.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContourStyles"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DContourStyles.ColorSet">
            <summary>
            Gets or sets predefined color collections for contour styles.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContourStyles"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DContourStyles.Reset">
            <summary>
            Resets the Chart3DContourStyles to the default state.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContourStyles"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.ColorSetEnum">
            <summary>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Win.C1Chart3D.Chart3DContourStyles.ColorSet"/>
            property in the <see cref="T:C1.Win.C1Chart3D.Chart3DContourStyles"/> class.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.ColorSetEnum.Custom">
            <summary>
            Custom color set
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.ColorSetEnum.Rainbow">
            <summary>
            Rainbow colors
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.ColorSetEnum.RevRainbow">
            <summary>
            Rainbow colors in the reverse order
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.ColorSetEnum.BlackWhite">
            <summary>
            Grayscale colors
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.ColorSetEnum.WhiteBlack">
            <summary>
            Grayscale colors in the reverse order
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.ColorSetEnum.GreenBlue">
            <summary>
            Colors from green to blue
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.ColorSetEnum.RedWhite">
            <summary>
            Colors from red to white
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.ColorSetEnum.BluePink">
            <summary>
            Colors from blue to pink
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.ColorSetEnum.BlueWhiteRed">
            <summary>
            Colors blue -> white ->red
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.ColorSetEnum.BlackRedYellow">
            <summary>
            Colors black -> red -> yellow
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.ColorSetEnum.GreenPurpleYellow">
            <summary>
            Colors green -> purple -> yellow
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DColorsCollection">
            <summary>
            Stores colors.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DColorsCollection.Item(System.Int32)">
            <summary>
            Gets or sets the specified Color by numeric index.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DColorsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DColorsCollection.Add(System.Drawing.Color)">
            <summary>
            Add new Color to the collection.
            </summary>
            <param name="clr">The Color to add.</param>
            <returns>
            An integer indicating the index of the collection to which the Color was added.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DColorsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DColorsCollection.Contains(System.Drawing.Color)">
            <summary>
            Determines if the specified Color is in the collection.
            </summary>
            <param name="clr">The Color to locate.</param>
            <returns>
            A boolean indicating if the Color is in the collection.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DColorsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DColorsCollection.CopyTo(System.Drawing.Color[],System.Int32)">
            <summary>
            Copies the collection Color elements beginning with the specified index to an array of Color.
            </summary>
            <param name="array">Output array.</param>
            <param name="index">Starting index.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DColorsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DColorsCollection.IndexOf(System.Drawing.Color)">
            <summary>
            Gets the index of the specified Color in the collection.
            </summary>
            <param name="clr">The Color to locate.</param>
            <returns>
            The index of the color is represented by an Integer.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DColorsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DColorsCollection.Remove(System.Drawing.Color)">
            <summary>
            Removes the specified Color from the collection.
            </summary>
            <param name="clr">The Color to remove.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DColorsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DColorsCollection.Insert(System.Int32,System.Drawing.Color)">
            <summary>
            Inserts the specified Color at the specified index of the collection.
            </summary>
            <param name="index">Index.</param>
            <param name="clr">The Color to insert.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DColorsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DColorsCollection.OnInsertComplete(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DColorsCollection.OnRemoveComplete(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DColorsCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DContourStylesCollection">
            <summary>
            Stores Chart3DContourStyle objects.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DContourStylesCollection.Item(System.Int32)">
            <summary>
            Gets the specified Chart3DStyle by numeric index.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContourStylesCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DContourStylesCollection.Add(C1.Win.C1Chart3D.Chart3DContourStyle)">
            <summary>
            Add specified contour style to the collection.
            </summary>
            <param name="style">The Chart3DContourStyle to add.</param>
            <returns>
            An integer indicating the index of the collection to which the contour style was added.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContourStylesCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DContourStylesCollection.OnInsertComplete(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DContourStylesCollection.OnRemoveComplete(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DContourStylesCollection.Contains(C1.Win.C1Chart3D.Chart3DContourStyle)">
            <summary>
            Determines whether the specified <see cref="T:C1.Win.C1Chart3D.Chart3DContourStyle"/>
            exists in the collection.
            </summary>
            <param name="style">The Chart3DContourStyle to locate.</param>
            <returns>
            A boolean value that indicates whether the Chart3DContourStyle is a member of the collection.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContourStylesCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DContourStylesCollection.CopyTo(C1.Win.C1Chart3D.Chart3DContourStyle[],System.Int32)">
            <summary>
            Copies the collection <see cref="T:C1.Win.C1Chart3D.Chart3DContourStyle"/> elements beginning
            with the specified index to an array of Chart3DContourStyle objects.
            </summary>
            <param name="array">Output array.</param>
            <param name="index">Starting index.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContourStylesCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DContourStylesCollection.IndexOf(C1.Win.C1Chart3D.Chart3DContourStyle)">
            <summary>
            Gets the index of the specified <see cref="T:C1.Win.C1Chart3D.Chart3DContourStyle"/> in the collection.
            </summary>
            <param name="style">The Chart3DContourStyle to locate.</param>
            <returns>
            The index of the specified Chart3DContourStyle indicated by an Integer.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContourStylesCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DContourStylesCollection.Insert(System.Int32,C1.Win.C1Chart3D.Chart3DContourStyle)">
            <summary>
            Adds a <see cref="T:C1.Win.C1Chart3D.Chart3DContourStyle"/> object to the collection at the specified index.
            </summary>
            <param name="index">Index.</param>
            <param name="style">The Chart3DContourStyle to insert.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContourStylesCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DContourStylesCollection.Remove(C1.Win.C1Chart3D.Chart3DContourStyle)">
            <summary>
            Removes a Chart3DContourStyle object from the collection.
            </summary>
            <param name="style">The Chart3DContourStyle to remove.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContourStylesCollection"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DContourLevelsCollection">
            <summary>
            Stores Chart3DContourLevel objects.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DContourLevelsCollection.#ctor">
            <summary>
            Creates a new instance of <see cref="T:C1.Win.C1Chart3D.Chart3DContourLevelsCollection"/> class.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DContourLevelsCollection.Item(System.Int32)">
            <summary>
            Gets the specified Chart3DContourLevel by numeric index.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContourLevelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DContourLevelsCollection.Add(C1.Win.C1Chart3D.Chart3DContourLevel)">
            <summary>
            Add specified contour level to the collection.
            </summary>
            <param name="level">The Chart3DContourLevel to add.</param>
            <returns>
            An integer indicating the index of the collection to which the contour level was added.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContourLevelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DContourLevelsCollection.Add(System.Double)">
            <summary>
            Add new contour level with specified value to the collection.
            </summary>
            <param name="value">Value of the new contour level.</param>
            <returns>
            An integer indicating the index of the collection to which the contour level was added.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContourLevelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DContourLevelsCollection.Remove(System.Double)">
            <summary>
            Remove contour level with specified value from the collection.
            </summary>
            <param name="value">Value of the level to remove.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContourLevelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DContourLevelsCollection.OnInsertComplete(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DContourLevelsCollection.Contains(C1.Win.C1Chart3D.Chart3DContourLevel)">
            <summary>
            Determines whether the specified <see cref="T:C1.Win.C1Chart3D.Chart3DContourLevel"/> exists in the collection.
            </summary>
            <param name="lvl">The Chart3DContourLevel to locate.</param>
            <returns></returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContourLevelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DContourLevelsCollection.CopyTo(C1.Win.C1Chart3D.Chart3DContourLevel[],System.Int32)">
            <summary>
            Copies the collection Chart3DContourLevel elements beginning with the specified index to an array
            of Chart3DContourLevel objects.
            </summary>
            <param name="array">Output array,</param>
            <param name="index">Starting index.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContourLevelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DContourLevelsCollection.IndexOf(C1.Win.C1Chart3D.Chart3DContourLevel)">
            <summary>
            Gets the index of the specified <see cref="T:C1.Win.C1Chart3D.Chart3DContourLevel"/> in the collection.
            </summary>
            <param name="lvl">The Chart3DContourLevel to locate.</param>
            <returns>
            The index of the specified Chart3DContourLevel is indicated by an Integer.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContourLevelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DContourLevelsCollection.Remove(C1.Win.C1Chart3D.Chart3DContourLevel)">
            <summary>
            Remove specified Chart3DContourLevel object from the collection.
            </summary>
            <param name="lvl">The Chart3DContourLevel to remove.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContourLevelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DContourLevelsCollection.Insert(System.Int32,C1.Win.C1Chart3D.Chart3DContourLevel)">
            <summary>
            Adds a Chart3DContourLevel object to the collection at the specified index.
            </summary>
            <param name="index">Index.</param>
            <param name="lvl">The Chart3DContourLevel to insert.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContourLevelsCollection"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DContour">
            <summary>
            The Chart3DContour class and its properties are used for contour and zone charts.
            It is returned by the Contour property of a ChartGroup.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DContour.Levels">
            <summary>
            Gets collection of contour levels.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContour"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DContour.Distribution">
            <summary>
            Gets or sets the array of level values for contour calculations.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContour"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DContour.AutoDistribution">
            <summary>
            Whether to use a linear distribution table to determine the spacing of contour levels.
            </summary>
            <remarks>
            When AutoDistribution is true the chart automatically generates linear distribution table using NumLevels property.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContour"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DContour.IsContoured">
            <summary>
            Gets or sets whether the chart is contoured.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContour"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DContour.IsZoned">
            <summary>
            Gets or sets whether the chart is zoned.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContour"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DContour.ZoneMethod">
            <summary>
            Gets or sets zone method.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContour"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DContour.ContourMethod">
            <summary>
            Gets or sets the contour calculation method.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DContour.NumLevels">
            <summary>
            Gets or sets number of contour levels.
            </summary>
            <remarks>
            This has no effect when the chart is using a custom distribution table
            (<see cref="P:C1.Win.C1Chart3D.Chart3DContour.AutoDistribution"/> property is false).
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContour"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DContour.Item(System.Int32)">
            <summary>
            Gets the specified Chart3DContourLevel by numeric index.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContour"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DContour.NotifyChanges">
            <summary>
            Notifies when the contour level has changed.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DContourLevel">
            <summary>
            Represents level of contour or zone chart.
            </summary>
        </member>
        <member name="E:C1.Win.C1Chart3D.Chart3DContourLevel.Changed">
            <summary>
            Fires when level value was changed.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DContourLevel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Chart3D.Chart3DContourLevel"/> class.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContourLevel"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DContourLevel.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns
            an integer that indicates whether the current instance precedes, follows, or
            occurs in the same position in the sort order as the other object.
            </summary>
            <param name="obj">An object to compare with this instance.</param>
            <returns>A value that indicates the relative order of the objects being compared.
            </returns>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DContourLevel.Level">
            <summary>
            Gets or sets level value.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContourLevel"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DContourLevel.Style">
            <summary>
            Gets or sets the contour style corresponding to the level.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DContourLevel"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DContourLevel.ToString">
            <summary>
            Returns a string that represents the current Chart3DContourLevel.
            </summary>
            <returns>
            A string that represents the current Chart3DContourLevel.
            </returns>
        </member>
        <member name="T:C1.Win.C1Chart3D.DataLayoutEnum">
            <summary>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Win.C1Chart3D.Chart3DData.Layout"/>
            property in the <see cref="T:C1.Win.C1Chart3D.Chart3DData"/> class.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.DataLayoutEnum.PointData">
            <summary>
            Point data
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.DataLayoutEnum.GridData">
            <summary>
            Regular grid data
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.DataLayoutEnum.IrGridData">
            <summary>
            Irregular grid data
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.DataFormatEnum">
            <summary>
            Use the members of this enumeration to specify data format when loading or saving data.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.DataFormatEnum.Xml">
            <summary>
            XML format
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.DataFormatEnum.Chart7">
            <summary>
            ComponentOne Chart 7 format
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DSymbolStyle">
            <summary>
            Represents symbol properties used in scatter plots for the points in a series.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DSymbolStyle.Size">
            <summary>
            Gets or sets the size of a data point symbol.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DSymbolStyle"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DSymbolStyle.Color">
            <summary>
            Gets or sets the color of a data point symbol.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DSymbolStyle"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DSymbolStyle.Shape">
            <summary>
            Gets or sets the shape of a data point symbol.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DSymbolStyle"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DSymbolStyle.ToString">
            <summary>
            Returns a string that represents the current Chart3DSymbolStyle.
            </summary>
            <returns>
            A string that represents the current Chart3DSymbolStyle.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DSymbolStyle"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DSymbolStyle.OutlineColor">
            <summary>
            Gets or sets the outline color of the data point symbol.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DSymbolStyle"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DSymbolStyle.OutlineWidth">
            <summary>
            Gets or sets the outline width of the data point symbol.
            </summary>
            <remarks>
            OutlineWidth should not exceed symbol size. If the outline width is greater than the symbol size, 
            the symbol size is used as the outline width when drawing the symbol.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DSymbolStyle"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.LinePatternEnum">
            <summary>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Win.C1Chart3D.Chart3DLineStyle.Pattern"/>
            property in the <see cref="T:C1.Win.C1Chart3D.Chart3DLineStyle"/> class.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.LinePatternEnum.Solid">
            <summary>
            A solid line.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.LinePatternEnum.Dash">
            <summary>
            A dashed line.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.LinePatternEnum.Dot">
            <summary>
            A dotted line.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.LinePatternEnum.DashDot">
            <summary>
            A line with alternating dashes and dots.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.LinePatternEnum.DashDotDot">
            <summary>
            A line with series consisting of a dash followed by two dots.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DLineStyle">
            <summary>
            Represents style of the plotting line.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DLineStyle.Thickness">
            <summary>
            Gets or sets the thickness of a plotted line.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLineStyle"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DLineStyle.Color">
            <summary>
            Gets or sets the color of a plotted line.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLineStyle"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DLineStyle.Pattern">
            <summary>
            Gets or sets the pattern of a plotted line.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLineStyle"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLineStyle.ToString">
            <summary>
            Returns a string that represents the current Chart3DLineStyle.
            </summary>
            <returns>
            A string that represents the current Chart3DLineStyle.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLineStyle"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DDataSet">
            <summary>
            Abstract base class for all types of data sets (regular grid, irregular grid and point).
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSet.SyncPoints">
            <summary>
            Called when array of Z-value data changed and C1Chart3D points and points need to be created.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSet.NotifyChanges">
            <summary>
            Notifies when the data set has changed.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSet.MinX">
            <summary>
            Gets the minimum X value of the chart data.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSet"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSet.MinY">
            <summary>
            Gets the minimum Y value of the chart data.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSet"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSet.MinZ">
            <summary>
            Gets the minimum Z value of the chart data.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSet"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSet.MaxX">
            <summary>
            Gets the maximum X value of the chart data.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSet"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSet.MaxY">
            <summary>
            Gets the maximum Y value of the chart data.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSet"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSet.MaxZ">
            <summary>
            Gets the maximum Z value of the chart data.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSet"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSet.IsHole(System.Double)">
            <summary>
            Determines if the passed value is a data hole.
            </summary>
            <param name="x">Value.</param>
            <returns>
            A boolean value indicating whether the value passed is the equivalent of a data hole.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSet"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSet.Refresh">
            <summary>
            Called when a data set was changed.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSet.SyncProps">
            <summary>
            Called when data values are to be calculated.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSet.GetSStyleByHash(System.Int32)">
            <summary>
            Gets the contour style by hash.
            </summary>
            <param name="hashvalue">The hash value.</param>
            <returns>A <see cref="T:C1.Win.C1Chart3D.Chart3DSymbolStyle"/> used in scatter plots for the points in a series.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSet.GetLStyleByHash(System.Int32)">
            <summary>
            Gets the plotting line style by hash.
            </summary>
            <param name="hashvalue">The hash value.</param>
            <returns>A <see cref="T:C1.Win.C1Chart3D.Chart3DLineStyle"/> of the plotting line.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSet.GetColumnByPointIndex(System.Int32)">
            <summary>
            Gets column by point index.
            </summary>
            <param name="pointIndex">The point index.</param>
            <returns>A <see cref="T:C1.Win.C1Chart3D.C1Chart3DPoint"/> column index in point series collection.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSet.GetRowByPointIndex(System.Int32)">
            <summary>
            Gets row by point index.
            </summary>
            <param name="pointIndex">The point index.</param>
            <returns>A <see cref="T:C1.Win.C1Chart3D.C1Chart3DPoint"/> row index in point series collection.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSet.GetPointInternal(System.Int32,System.Int32)">
            <summary>
            Gets the point by column and row index.
            </summary>
            <param name="i">The index in collection of point series.</param>
            <param name="j">The point index.</param>
            <returns>The <see cref="P:C1.Win.C1Chart3D.Chart3DDataSet.PointData"/> collection element.</returns>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSet.Hole">
            <summary>
            Gets or sets hole value.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSet"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSet.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets the specified Chart3DPoint in the Chart3DDataSet by column and row indices.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSet"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DDataSetGrid">
            <summary>
            Represents regular grid data layout.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetGrid.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single[0:,0:])">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Chart3D.Chart3DDataSetGrid"/> class.
            </summary>
            <param name="colOrigin">Column origin value.</param>
            <param name="rowOrigin">Row origin value.</param>
            <param name="colDelta">Column delta value.</param>
            <param name="rowDelta">Row delta value.</param>
            <param name="z">Array of z-values.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSetGrid"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetGrid.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double[0:,0:])">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Chart3D.Chart3DDataSetGrid"/> class.
            </summary>
            <param name="colOrigin">Column origin value.</param>
            <param name="rowOrigin">Row origin value.</param>
            <param name="colDelta">Column delta value.</param>
            <param name="rowDelta">Row delta value.</param>
            <param name="z">Array of z-values.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSetGrid"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetGrid.#ctor(System.Double,System.Double,System.Double,System.Double,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Chart3D.Chart3DDataSetGrid"/> class.
            </summary>
            <param name="colOrigin">Column origin value.</param>
            <param name="rowOrigin">Row origin value.</param>
            <param name="colDelta">Column delta value.</param>
            <param name="rowDelta">Row delta value.</param>
            <param name="z">Array of z-values.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSetGrid"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetGrid.RowCount">
            <summary>
            Gets or sets the number of rows in grid dataset.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSetGrid"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetGrid.ColumnCount">
            <summary>
            Gets or sets the number of columns in grid dataset.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSetGrid"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetGrid.CountX">
            <summary>
            The X-columns count.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetGrid.CountY">
            <summary>
            The Y-rows count.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetGrid.RowDelta">
            <summary>
            Indicates the amount of space between a data value and its neighboring column in grid dataset.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSetGrid"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetGrid.ColumnDelta">
            <summary>
            Indicates the amount of space between a data value and its neighboring column in grid dataset.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSetGrid"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetGrid.RowOrigin">
            <summary>
            The Y-coordinate of the grid origin.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSetGrid"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetGrid.ColumnOrigin">
            <summary>
            The X-coordinate of the grid origin.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSetGrid"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetGrid.GridData">
            <summary>
            Gets or sets two-dimensional array of Z-values.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSetGrid"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetGrid.GetJaggedGridData">
            <summary>
            Returns an object containing Z-values in a jagged double array.
            </summary>
            <returns>
            An object containing Z-values in a jagged double array.
            </returns>
            <remarks>
            Jagged arrays are useful in certain instances for manipulating data.
            In Delphi, multiply dimensioned arrays are jagged. Delphi users should use GetJaggedGridData() instead
            of the GridData property.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSetGrid"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetGrid.SetJaggedGridData(System.Object)">
            <summary>
            Sets the Z-values with a two-dimensional integer array, or a jagged integer, jagged float or jagged double array.
            </summary>
            <param name="z">Array of z-values.</param>
            <remarks>
            Jagged arrays are useful in certain instances for manipulating data.
            In Delphi, multiply dimensioned arrays are jagged.  This method will also conveniently accept
            a two-dimensional integer array. Delphi users should use SetJaggedGridData() instead of the GridData property.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSetGrid"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetGrid.SyncProps">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetGrid.SyncPoints">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetGrid.Refresh">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetGrid.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets z-value of data by specified row and column.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSetGrid"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetGrid.GetPointInternal(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetGrid.Data">
            <summary>
            Gets or sets Chart3D data as string.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetGrid.MinZ">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetGrid.MaxZ">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetGrid.MinX">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetGrid.MaxX">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetGrid.MinY">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetGrid.MaxY">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetGrid.SetValue(System.Int32,System.Int32,System.Double)">
            <summary>
            Sets the elevation value of the grid point specified by the column and row indices.
            </summary>
            <param name="column">Column index.</param>
            <param name="row">Row index.</param>
            <param name="value">Z value.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSetGrid"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetGrid.GetValue(System.Int32,System.Int32)">
            <summary>
            Returns the elevation value of the grid point specified by the column and row indices.
            </summary>
            <param name="column">Column index.</param>
            <param name="row">Row index.</param>
            <returns>The z value at the specified column and row.</returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSetGrid"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetGrid.GetRectById(System.Int32)">
            <summary>
            Gets rectangle area of space between a data value and its neighboring column in grid data set.
            </summary>
            <param name="id"></param>
            <returns>Rectangle area of space between a data value and its neighboring column in grid data set.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetGrid.GetRowByPointIndex(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetGrid.GetColumnByPointIndex(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetGrid.GetColumnValueInternal(System.Int32)">
            <summary>
            Get column value from the X-coordinate of the grid origin.
            </summary>
            <param name="i">The column index.</param>
            <returns>The column value from the X-coordinate of the grid origin.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetGrid.GetRowValueInternal(System.Int32)">
            <summary>
            Get row value from the X-coordinate of the grid origin.
            </summary>
            <param name="j">The row index.</param>
            <returns>The row value from the Y-coordinate of the grid origin.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetGrid.GetColumnValues">
            <summary>
            Gets the columns in grid data set.
            </summary>
            <returns>The array of column values.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetGrid.GetRowValues">
            <summary>
            Gets the rows in grid data set.
            </summary>
            <returns>The array of row values.</returns>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DDataSetIrGrid">
            <summary>
            Represents irregular grid data layout.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetIrGrid.#ctor(System.Double[],System.Double[],System.Double[0:,0:])">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Chart3D.Chart3DDataSetIrGrid"/> class.
            </summary>
            <param name="xvalues">Array of x-values.</param>
            <param name="yvalues">Array of y-values</param>
            <param name="zvalues">Two-dimensional array of z-values.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSetIrGrid"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetIrGrid.#ctor(System.Single[],System.Single[],System.Single[0:,0:])">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Chart3D.Chart3DDataSetIrGrid"/> class.
            </summary>
            <param name="xvalues">Array of x-values.</param>
            <param name="yvalues">Array of y-values.</param>
            <param name="zvalues">Two-dimesional array of z-values.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSetIrGrid"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetIrGrid.#ctor(System.Double[],System.Double[],System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Chart3D.Chart3DDataSetIrGrid"/> class.
            </summary>
            <param name="xvalues">Array of x-values.</param>
            <param name="yvalues">Array of y-values.</param>
            <param name="zvalues">Array of z-values.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSetIrGrid"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetIrGrid.ColumnDeltaData">
            <summary>
            Gets or sets column delta data as string.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetIrGrid.RowDeltaData">
            <summary>
            Gets or sets row delta data as string.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetIrGrid.ColumnDelta">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetIrGrid.RowDelta">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetIrGrid.ColumnDeltaArray">
            <summary>
            Gets or sets the array which indicates the amounts of space between a data value and its neighboring column in grid dataset.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSetIrGrid"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetIrGrid.RowDeltaArray">
            <summary>
            Gets or sets the array indicates the amounts of space between a data value and its neighboring row in grid dataset.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSetIrGrid"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetIrGrid.CountX">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetIrGrid.CountY">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetIrGrid.GetRowValue(System.Int32)">
            <summary>
            Returns the Y value associated with the specified indexed row.
            </summary>
            <param name="row">Row index.</param>
            <returns>The Y value associated with the specified indexed row.</returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSetIrGrid"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetIrGrid.GetColumnValue(System.Int32)">
            <summary>
            Returns the X value associated with the specified indexed column.
            </summary>
            <param name="col">Column index.</param>
            <returns>The x value associated with the specified indexed column.</returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSetIrGrid"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetIrGrid.Refresh">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetIrGrid.SyncPoints">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetIrGrid.GetRectById(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetIrGrid.GetRowValueInternal(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetIrGrid.GetColumnValueInternal(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetIrGrid.SyncProps">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetIrGrid.MinX">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetIrGrid.MinY">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetIrGrid.GetColumnValues">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetIrGrid.GetRowValues">
            <inheritdoc/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DPointSeries">
            <summary>
            Represents one series of data for point data layout (Chart3DDataSetPoint class).
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DPointSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Chart3D.Chart3DPointSeries"/> class.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DPointSeries"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DPointSeries.ToString">
            <summary>
            Returns a string that represents the current Chart3DPointSeries.
            </summary>
            <returns>
            A string that represents the current Chart3DPointSeries.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DPointSeries"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DPointSeries.Count">
            <summary>
            Gets the number of points in series.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DPointSeries"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DPointSeries.Label">
            <summary>
            Gets or sets the text label of series.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DPointSeries"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DPointSeries.Style">
            <summary>
            Gets the style of point drawing.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DPointSeries"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DPointSeries.Visible">
            <summary>
            Gets or sets visibility of series.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DPointSeries"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DPointSeries.Connected">
            <summary>
            Gets or sets whether the series points are connected with lines.
            </summary>
            <remarks>
            The line style is defined by the LineStyle property of Chart3DPointSeries Style object.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DPointSeries"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DPointSeries.Points">
            <summary>
            Gets or sets the array of points in the series.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DPointSeries"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DPointSeries.Item(System.Int32)">
            <summary>
            Gets or sets data point by specified index.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DPointSeries"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DPointSeries.StyleIndex">
            <summary>
             The chart index of style in <see cref="T:C1.Win.C1Chart3D.Chart3DStylesCollection"/> collection. 
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DPointSeriesCollection">
            <summary>
            Represents collection of point series.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DPointSeriesCollection.Item(System.Int32)">
            <summary>
            Gets the specified series from the collection by numeric index.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DPointSeriesCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DPointSeriesCollection.IndexOf(C1.Win.C1Chart3D.Chart3DPointSeries)">
            <summary>
            Gets the index of the specified <see cref="T:C1.Win.C1Chart3D.Chart3DPointSeries"/> in the collection.
            </summary>
            <param name="series"></param>
            <returns>
            An integer indicating the index of the specified Chart3DPointSeries.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DPointSeriesCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DPointSeriesCollection.Add(C1.Win.C1Chart3D.Chart3DPointSeries)">
            <summary>
            Adds a Chart3DpointSeries object to the collection.
            </summary>
            <param name="series">The Chart3DpointSeries to add.</param>
            <returns>
            An integer indicating the index of the added Chart3DPointSeries.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DPointSeriesCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DPointSeriesCollection.Insert(System.Int32,C1.Win.C1Chart3D.Chart3DPointSeries)">
            <summary>
            Adds a Chart3DPointSeries object to the collection at the specified index.
            </summary>
            <param name="index">Index.</param>
            <param name="series">The Chart3DpointSeries to insert.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DPointSeriesCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DPointSeriesCollection.Contains(C1.Win.C1Chart3D.Chart3DPointSeries)">
            <summary>
            Determines whether the specified Chart3DPointSeries exists in the collection.
            </summary>
            <param name="series">The Chart3DpointSeries to locate.</param>
            <returns>
            A boolean return indicating whether the Chart3DPointSeries is a member of the collection.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DPointSeriesCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DPointSeriesCollection.CopyTo(C1.Win.C1Chart3D.Chart3DPointSeries[],System.Int32)">
            <summary>
            Copies the collection <see cref="T:C1.Win.C1Chart3D.Chart3DPointSeries"/> elements beginning with the specified index
            to an array of Chart3DPointSeries objects.
            </summary>
            <param name="array">Output array.</param>
            <param name="index">Starting index.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DPointSeriesCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DPointSeriesCollection.Remove(C1.Win.C1Chart3D.Chart3DPointSeries)">
            <summary>
            Removes a Chart3PointSeries object from the collection.
            </summary>
            <param name="series">The Chart3DpointSeries to remove.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DPointSeriesCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DPointSeriesCollection.AddRange(C1.Win.C1Chart3D.Chart3DPointSeries[])">
            <summary>
            Adds array of series to the end of the collection.
            </summary>
            <param name="series">Array of series</param>
            <remarks>
            This is the preferable way for adding large number of series. 
            </remarks>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DPointSeriesCollection.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes a range of elements from the collection.
            </summary>
            <param name="index">The zero-based starting index of the range of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DPointSeriesCollection.OnInsert(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DPointSeriesCollection.OnInsertComplete(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DPointSeriesCollection.OnRemove(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DPointSeriesCollection.OnRemoveComplete(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DPointSeriesCollection.OnClearComplete">
            <inheritdoc/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DDataSetPoint">
            <summary>
            Represents point data layout.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetPoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Chart3D.Chart3DDataSetPoint"/> class.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSetPoint"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetPoint.SeriesCollection">
            <summary>
            Gets the collection of series.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSetPoint"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetPoint.Refresh">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetPoint.AddSeries(C1.Win.C1Chart3D.Chart3DPoint[])">
            <summary>
            Add new series to the data set.
            </summary>
            <returns>
            The index of new series.
            </returns>
            <param name="points">Array of points.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSetPoint"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetPoint.RemoveSeries(System.Int32)">
            <summary>
            Remove series with given index from the data set.
            </summary>
            <param name="index">Index of series to remove.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSetPoint"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetPoint.GetSStyleByHash(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetPoint.GetLStyleByHash(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetPoint.GetColumnByPointIndex(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetPoint.GetRowByPointIndex(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetPoint.SyncProps">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetPoint.MinX">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetPoint.MinY">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetPoint.MinZ">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetPoint.MaxX">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetPoint.MaxY">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetPoint.MaxZ">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataSetPoint.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets data point coordinates by specified series and index.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataSetPoint"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataSetPoint.GetPointInternal(System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DData">
            <summary>
            Represents chart data.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DData.TypeToString(System.Object)">
            <summary>
            Returns a string representing the type of the object.
            </summary>
            <param name="member">An object for which to get a name.</param>
            <returns>A type name as string.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DData.StringToType(System.String)">
            <summary>
            Determines a type by name.
            </summary>
            <param name="member">A type name.</param>
            <returns>A type.</returns>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DData.Layout">
            <summary>
            Gets or sets the chart data layout type.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DData"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DData.ContourData">
            <summary>
            Gets or sets contour data.
            </summary>
            <remarks>
            Used when drawing 4D charts. Can be used only for bar and surface charts,
            as well as grid and irregular grid data layout. 
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DData"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DData.GetJaggedContourData">
            <summary>
            Returns an object containing contour data in a jagged double array.
            </summary>
            <returns>
            An object containing contour data in a jagged double array.
            </returns>
            <remarks>
            Jagged arrays are useful in certain instances for manipulating data.
            In Delphi, multiply dimensioned arrays are jagged. Delphi users should use 
            the GetJaggedContourData method instead of the ContourData property.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DData"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DData.SetJaggedContourData(System.Object)">
            <summary>
            Sets the contour data with a two-dimensional integer array, or a jagged integer, jagged float or jagged double array.
            </summary>
            <param name="z">Array of z-values.</param>
            <remarks>
            <para>
            Jagged arrays are useful in certain instances for manipulating data.
            In Delphi, multiply dimensioned arrays are jagged.  This method will also conveniently accept
            a two-dimensional integer array. Delphi users should use the SetJaggedContourData method instead of the ContourData property.
            </para>
            <para>
            For non-jagged arrays, set the ContourData property instead.
            </para>
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DData"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DData.ResetContourData">
            <summary>
            Clears all contour data.
            </summary>
            <remarks>
            This method clears all contour data from the chart.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DData"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DData.ContourDataString">
            <summary>
            The contour data string.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DData.Set">
            <summary>
            Gets or sets dataset.
            </summary>
            <remarks>
            See <see cref="T:C1.Win.C1Chart3D.Chart3DDataSet"/> for details.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DData"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DData.SetGrid">
            <summary>
            Gets or sets regular grid dataset.
            </summary>
            <remarks>
            Applied only if DataLayout is GridData. See <see cref="T:C1.Win.C1Chart3D.Chart3DDataSetGrid"/> for details.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DData"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DData.SetIrGrid">
            <summary>
            Gets or sets irregular grid dataset.
            </summary>
            <remarks>
            Applied only if DataLayout is IrGridData. See <see cref="T:C1.Win.C1Chart3D.Chart3DDataSetIrGrid"/> for details.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DData"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DData.SetPoint">
            <summary>
            Gets or sets point dataset.
            </summary>
            <remarks>
            Applied only if DataLayout is PointData. See <see cref="T:C1.Win.C1Chart3D.Chart3DDataSetPoint"/> for details.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DData"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DData.NotifyChanges">
            <summary>
            Called when a change needs to be notified.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DData.GetMin(C1.Win.C1Chart3D.AxisTypeEnum)">
            <summary>
            Gets the minimum data value for the coordinate indicated by the specified index.
            </summary>
            <param name="axisType">Axis type(x, y or z).</param>
            <returns>
            Double value equal to the smallest coordinate value.
            </returns>
            <remarks>
            This method returns the data coordinate with the minimum value along the specified axis.
            For example, specifying <see cref="F:C1.Win.C1Chart3D.AxisTypeEnum.AxisX"/> as a calling parameter,
            will return the X coordinate value with the smallest X value.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DData"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DData.GetMax(C1.Win.C1Chart3D.AxisTypeEnum)">
            <summary>
            Gets the maximum data value for the coordinate indicated by the specified index.
            </summary>
            <param name="axisType">Axis type(x, y or z).</param>
            <returns>
            Double value equal to the largest coordinate value.
            </returns>
            <remarks>
            This method returns the data coordinate with the maximum value along the specified axis.
            For example, specifying <see cref="F:C1.Win.C1Chart3D.AxisTypeEnum.AxisX"/> as a calling parameter,
            will return the X coordinate value with the largest X value.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DData"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DData.DataCoordToCoord(System.Single,System.Single,System.Single,System.Int32@,System.Int32@)">
            <summary>
            Maps a data coordinate to a pixel coordinate.
            </summary>
            <param name="x">X data coordinate.</param>
            <param name="y">Y data coordinate.</param>
            <param name="z">Z data coordinate.</param>
            <param name="sx">Client x coordinate in pixels.</param>
            <param name="sy">Client y coordinate in pixels.</param>
            <returns>
            Boolean result of coordinate conversion.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DData"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DData.DataCoordToCoord(System.Double,System.Double,System.Double,System.Int32@,System.Int32@)">
            <summary>
            Maps a data coordinate to a pixel coordinate.
            </summary>
            <param name="x">X data coordinate.</param>
            <param name="y">Y data coordinate.</param>
            <param name="z">Z data coordinate.</param>
            <param name="sx">Client x coordinate in pixels.</param>
            <param name="sy">Client y coordinate in pixels.</param>
            <returns>
            Boolean result of coordinate conversion.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DData"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DData.CoordToDataCoord(System.Int32,System.Int32,System.Single@,System.Single@,System.Single@)">
            <summary>
            Maps a pixel coordinate to a data coordinate.
            </summary>
            <param name="sx">Client x coordinate in pixels.</param>
            <param name="sy">Client z coordinate in pixels.</param>
            <param name="x">X data coordinate.</param>
            <param name="y">Y data coordinate.</param>
            <param name="z">Z data coordinate.</param>
            <returns>
            Boolean result of coordinate conversion.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DData"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DData.CoordToDataCoord(System.Int32,System.Int32,System.Double@,System.Double@,System.Double@)">
            <summary>
            Maps a pixel coordinate to a data coordinate.
            </summary>
            <param name="sx">Client x coordinate in pixels.</param>
            <param name="sy">Client y coordinate in pixels.</param>
            <param name="x">X data coordinate.</param>
            <param name="y">Y data coordinate.</param>
            <param name="z">Z data coordinate.</param>
            <returns>
            Boolean result of coordinate conversion.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DData"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DData.CoordToDataIndex(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Picks the displayed data closest to the given pixel coordinate.
            </summary>
            <param name="sx">Client x coordinate in pixels.</param>
            <param name="sy">Client y coordinate in pixels.</param>
            <param name="columnIndex">Column index(Series index for point data layout).</param>
            <param name="rowIndex">Row index(Point index for point data layout).</param>
            <returns>
            Boolean result of coordinate conversion.
            </returns>
            <remarks>
            For point data layout the column parameter relates to series index and the row parameter relates to point index.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DData"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DData.DataIndexToCoord(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Determines a pixel coordinate by given a data row and column.
            </summary>
            <param name="columnIndex">Column index(Series index for point data layout).</param>
            <param name="rowIndex">Row index(Point index for point data layout).</param>
            <param name="sx">Client x coordinate in pixels.</param>
            <param name="sy">Client y coordinate in pixels.</param>
            <returns>
            Boolean result of coordinate conversion.
            </returns>
            <remarks>
            For point data layout the column parameter relates to series index and the row parameter relates to point index.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DData"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DData.GetZSortedScreenPoints">
            <summary>
            Gets Z-sorted screen points.
            </summary>
            <returns>The array of points.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DData.LoadDataFromFile(System.String)">
            <summary>
            Load the contents of the current Chart3DData object from the specified file.
            </summary>
            <param name="filename">File name.</param>
            <remarks>
            This method loads the current Chart3DData object with the contents of the specified file.
            The data format is defined by file extension. If file extension is �dat� then ComponentOne Chart 7
            data format is used for loading data. Using any other extension leads to reading data in xml format.
            If an error occurs during the file reading, an appropriate exception is thrown indicating the cause of error.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DData"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DData.LoadDataFromFile(System.String,C1.Win.C1Chart3D.DataFormatEnum)">
            <summary>
            Load the contents of the current Chart3DData object from the specified file using specified format.
            </summary>
            <param name="filename">File name.</param>
            <param name="dataFormat">Data format.</param>
            <remarks>
            This method loads the current Chart3DData object with the contents to the specified file in specified data format.
            If an error occurs during the file reading, an appropriate exception is thrown indicating the cause of error.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DData"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DData.SaveDataToFile(System.String)">
            <summary>
            Saves the contents of the current Chart3DData object to the specified file in XML or ComponentOne Chart 7 format (.dat).
            </summary>
            <param name="filename">File name.</param>
            <remarks>
            This method saves the Chart3DData object contents to the specified file.
            The data format is defined by file extension. If file extension is �dat� then ComponentOne Chart 7 data format is used.
            Using any other extension leads to saving data in xml format. If an error occurs during the file creation or writing, an appropriate exception is thrown indicating the cause of error.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DData"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DData.SaveDataToFile(System.String,C1.Win.C1Chart3D.DataFormatEnum)">
            <summary>
            Saves the contents of the current Chart3DData object to the specified file in XML or ComponentOne Chart 7 format (.dat).
            </summary>
            <param name="filename">File name.</param>
            <param name="dataFormat">Data format.</param>
            <remarks>
            This method saves the Chart3DData object contents to the specified file in specified data format.
            If an error occurs during the file creation or writing, an appropriate exception is thrown indicating the cause of error.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DData"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DElevation">
            <summary>
            The Chart3DElevation class and its properties are used for control over the appearance
            of different chart types.  It is returned by the Elevation property of a ChartGroup.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DElevation.DropLines">
            <summary>
            Determines whether scatter chart points have droplines. Set this property to true if points should have drop lines.
            </summary>
            <remarks>
            Only for scatter chart.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DElevation"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DElevation.DepthCue">
            <summary>
            Determines whether scatter chart point sizes are dependant upon their distance from the eye.
            Set this property to true if the point sizes should be dependant upon distance from the eye.
            </summary>
            <remarks>
            Only for scatter chart.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DElevation"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DElevation.Transparency">
            <summary>
            Transparency of drawing chart data.
            </summary>
            <remarks>
            0 – transparent, 255 – opaque. Applied only for non-contoured and non-zoned chart.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DElevation"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DElevation.MeshTopColor">
            <summary>
            The top color of the mesh.
            </summary>
            <remarks>
            For bar charts, this color is used for bars with a value greater than that specified by the Chart3DBar Origin property.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DElevation"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DElevation.MeshBottomColor">
            <summary>
            The bottom color of the mesh.
            </summary>
            <remarks>
            For bar charts, this color is used for bars with a value less than that specified by the Chart3DBar Origin property.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DElevation"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DElevation.SurfaceTopColor">
            <summary>
            Gets or sets the top color of the shaded surface.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DElevation.ShadedTopColor">
            <summary>
            The top color of the shaded surface.
            </summary>
            <remarks>
            For bar charts, this color is used for bars with a value greater than that specified by the Chart3DBar Origin property.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DElevation"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DElevation.SurfaceBottomColor">
            <summary>
            Gets or sets the bottom color of the shaded surface.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DElevation.ShadedBottomColor">
            <summary>
            The bottom color of the shaded surface.
            </summary>
            <remarks>
            For bar charts, this color is used for bars with a value less than that specified by the Chart3DBar Origin property.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DElevation"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DElevation.IsMeshed">
            <summary>
            Determines whether surface charts are meshed, or whether bars in bar charts are outlined.
            Set this property to true to display a surface as a mesh, or to display bars in outline format.
            </summary>
            <remarks>
            Only for bar and surface charts. The IsColumnMeshShowing and IsRowMeshShowing properties of the Chart3DSurface object
            control allow mesh lines in either the X or the Y direction to be turned off.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DElevation"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DElevation.IsShaded">
            <summary>
            Determines whether surface or bar charts use shading. Set this property to true to display surfaces and
            bars as a flat shade of color.
            </summary>
            <remarks>
            Only for bar and surface charts.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DElevation"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DGroup">
            <summary>
            Chart3DGroup contains chart data and classes that control chart appearance.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DGroup.Surface">
            <summary>
            Controls the appearance of a surface format chart.
            </summary>
            <remarks>
            See <see cref="T:C1.Win.C1Chart3D.Chart3DSurface"/> for details.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DGroup"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DGroup.ShouldSerializeSurface">
            <summary>
            Returns false if the Chart3DGroup Surface property is in the default state.
            </summary>
            <returns>
            Boolean value.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DGroup"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DGroup.Bar">
            <summary>
            Controls the appearance of a bar chart.
            </summary>
            <remarks>
            See <see cref="T:C1.Win.C1Chart3D.Chart3DBar"/> for details.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DGroup"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DGroup.ShouldSerializeBar">
            <summary>
            Returns false if the Chart3DGroup Bar property is in the default state.
            </summary>
            <returns>
            Boolean value.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DGroup"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DGroup.Elevation">
            <summary>
            Controls the three-dimensional appearance of the chart.
            </summary>
            <remarks>
            See <see cref="T:C1.Win.C1Chart3D.Chart3DElevation"/> for details.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DGroup"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DGroup.ShouldSerializeElevation">
            <summary>
            Returns false if the Chart3DGroup Elevation property is in the default state.
            </summary>
            <returns>
            Boolean value.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DGroup"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DGroup.Contour">
            <summary>
            The type of contouring to be used.
            </summary>
            <remarks>
            See <see cref="T:C1.Win.C1Chart3D.Chart3DContour"/> for details.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DGroup"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DGroup.ShouldSerializeContour">
            <summary>
            Returns false if the Chart3DGroup Contour property is in the default state.
            </summary>
            <returns>
            Boolean value.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DGroup"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DGroup.ChartType">
            <summary>
            The type of chart to be displayed.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DGroup"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DGroup.ChartData">
            <summary>
            Data for the chart.
            </summary>
            <remarks>
            See <see cref="T:C1.Win.C1Chart3D.Chart3DData"/> for details.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DGroup"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DGroup.NotifyChanges">
            <summary>
            Called when a change needs to be notified.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DGroup.ToString">
            <summary>
            Returns a string that represents the current Chart3DGroup.
            </summary>
            <returns>
            A string that represents the current Chart3DGroup.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DGroup"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DDataLabel">
            <summary>
            A Chart3DDataLabel object is an independent text annotation that can be attached to the chart data.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataLabel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Chart3D.Chart3DDataLabel"/> class.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataLabel"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataLabel.Text">
            <summary>
            Gets or sets label text.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataLabel"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataLabel.Index">
            <summary>
            Gets or sets index for label.
            </summary>
            <remarks>
            Represents row (RowLabels) or column (ColumnLabels) number.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataLabel"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataLabel.ToString">
            <summary>
            Returns a string that represents the current Chart3DDataLabel.
            </summary>
            <returns>
            A string that represents the current Chart3DDataLabel.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataLabel"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DDataLabelsCollection">
            <summary>
            Collection of Chart3DDataLabel objects.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataLabelsCollection.Item(System.Int32)">
            <summary>
            Gets or sets the specified Chart3DDataLabel by numeric index.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataLabelsCollection"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DDataLabelsCollection.Item(System.String)">
            <summary>
            Gets a Chart3DDataLabel by its text value.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataLabelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataLabelsCollection.AddNewLabel">
            <summary>
            Creates a new Chart3DDataLabel and appends it to the collection.
            </summary>
            <returns>
            A reference to the newly created Chart3DDataLabel.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataLabelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataLabelsCollection.Add(C1.Win.C1Chart3D.Chart3DDataLabel)">
            <summary>
            Adds specified label to the collection.
            </summary>
            <param name="label">The Chart3DDataLabel to add.</param>
            <returns>
            An integer indicating the index of the collection to which the Chart3DDataLabel was added.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataLabelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataLabelsCollection.Add(System.Int32,System.String)">
            <summary>
            Creates a new label with specified index and text and appends it to the collection.
            </summary>
            <param name="index">Label index.</param>
            <param name="text">Label text.</param>
            <returns>
            An integer indicating the index of the collection to which the Chart3DDataLabel was added.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataLabelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataLabelsCollection.ToString">
            <summary>
            Returns a string that represents the current Chart3DDataLabelsCollection.
            </summary>
            <returns>
            A string that represents the current Chart3DDataLabelsCollection.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataLabelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataLabelsCollection.Contains(C1.Win.C1Chart3D.Chart3DDataLabel)">
            <summary>
            Determines whether the specified <see cref="T:C1.Win.C1Chart3D.Chart3DDataLabel"/> exists in the collection.
            </summary>
            <param name="lbl">The Chart3DDataLabel to locate.</param>
            <returns>
            A boolean value indicating whether the <see cref="T:C1.Win.C1Chart3D.Chart3DDataLabel"/> is a member of the collection.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataLabelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataLabelsCollection.CopyTo(C1.Win.C1Chart3D.Chart3DDataLabel[],System.Int32)">
            <summary>
            Copies the collection <see cref="T:C1.Win.C1Chart3D.Chart3DDataLabel"/> elements beginning with
            the specified index to an array of Chart3DDataLabel objects.
            </summary>
            <param name="array">Output array.</param>
            <param name="index">Starting index.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataLabelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataLabelsCollection.IndexOf(C1.Win.C1Chart3D.Chart3DDataLabel)">
            <summary>
            Gets the index of the specified <see cref="T:C1.Win.C1Chart3D.Chart3DDataLabel"/> in the collection.
            </summary>
            <param name="lbl">The Chart3DDataLabel to locate.</param>
            <returns>
            An integer indicating the index of the specified <see cref="T:C1.Win.C1Chart3D.Chart3DDataLabel"/>.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataLabelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataLabelsCollection.Insert(System.Int32,C1.Win.C1Chart3D.Chart3DDataLabel)">
            <summary>
            Adds a <see cref="T:C1.Win.C1Chart3D.Chart3DDataLabel"/> object to the collection at the specified index.
            </summary>
            <param name="index">Index.</param>
            <param name="lbl">The Chart3DDataLabel to insert.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataLabelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DDataLabelsCollection.Remove(C1.Win.C1Chart3D.Chart3DDataLabel)">
            <summary>
            Removes a <see cref="T:C1.Win.C1Chart3D.Chart3DDataLabel"/> object from the collection.
            </summary>
            <param name="lbl">The Chart3DDataLabel to remove.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DDataLabelsCollection"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DStyle">
            <summary>
            Represents style for drawing scatter charts.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DStyle.SetOwner(C1.Win.C1Chart3D.INotifyChanges)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DStyle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Chart3D.Chart3DStyle"/> class.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DStyle"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DStyle.#ctor(C1.Win.C1Chart3D.Chart3DSymbolStyle,C1.Win.C1Chart3D.Chart3DLineStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Chart3D.Chart3DStyle"/> class.
            </summary>
            <param name="sstyle">Symbol style.</param>
            <param name="lstyle">Line style.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DStyle"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DStyle.SymbolStyle">
            <summary>
            Gets or sets the SymbolStyle which specifies the color, size, and shape of points in scatter plots.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DStyle"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DStyle.LineStyle">
            <summary>
            Gets or sets the LineStyle which specifies the color, pattern, and thickness of drop lines in scatter plots.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DStyle"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DStyle.ToString">
            <summary>
            Returns a string that represents the current Chart3DStyle.
            </summary>
            <returns>
            A string that represents the current Chart3DStyle.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DStyle"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DStylesCollection">
            <summary>
            Represents collection of Chart3DStyle objects used for scatter charts.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DStylesCollection.Item(System.Int32)">
            <summary>
            Gets or sets the specified style from the collection by numeric index.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DStylesCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DStylesCollection.Add(C1.Win.C1Chart3D.Chart3DStyle)">
            <summary>
            Adds the specified Chart3DStyle to the collection.
            </summary>
            <param name="style">The Chart3DStyle to add.</param>
            <returns>
            An integer indicating the index of the collection to which the Chart3DStyle was added.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DStylesCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DStylesCollection.AddNewStyle">
            <summary>
            Creates a new <see cref="T:C1.Win.C1Chart3D.Chart3DStyle"/> and appends it to the collection.
            </summary>
            <returns>
            A reference to the newly created Chart3DStyle.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DStylesCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DStylesCollection.OnInsertComplete(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DStylesCollection.ToString">
            <summary>
            Returns a string that represents the current Chart3DStylesCollection.
            </summary>
            <returns>
            A string that represents the current Chart3DStylesCollection.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DStylesCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DStylesCollection.Contains(C1.Win.C1Chart3D.Chart3DStyle)">
            <summary>
            Determines whether the specified <see cref="T:C1.Win.C1Chart3D.Chart3DStyle"/> exists in the collection.
            </summary>
            <param name="style">The Chart3DStyle to locate.</param>
            <returns>
            A boolean value indicating whether the <see cref="T:C1.Win.C1Chart3D.Chart3DStyle"/> is a member of the collection.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DStylesCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DStylesCollection.CopyTo(C1.Win.C1Chart3D.Chart3DStyle[],System.Int32)">
            <summary>
            Copies the collection <see cref="T:C1.Win.C1Chart3D.Chart3DStyle"/> elements beginning with
            the specified index to an array of BarColor objects.
            </summary>
            <param name="array">Output array.</param>
            <param name="index">Starting index.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DStylesCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DStylesCollection.IndexOf(C1.Win.C1Chart3D.Chart3DStyle)">
            <summary>
            Gets the index of the specified <see cref="T:C1.Win.C1Chart3D.Chart3DStyle"/> in the collection.
            </summary>
            <param name="style">The Chart3DStyle to locate.</param>
            <returns>
            An integer indicating the index of the specified <see cref="T:C1.Win.C1Chart3D.Chart3DStyle"/>.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DStylesCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DStylesCollection.Insert(System.Int32,C1.Win.C1Chart3D.Chart3DStyle)">
            <summary>
            Adds a <see cref="T:C1.Win.C1Chart3D.Chart3DStyle"/> object to the collection at the specified index.
            </summary>
            <param name="index">Index.</param>
            <param name="style">The Chart3DStyle to insert.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DStylesCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DStylesCollection.Remove(C1.Win.C1Chart3D.Chart3DStyle)">
            <summary>
            Removes a <see cref="T:C1.Win.C1Chart3D.Chart3DStyle"/> object from the collection.
            </summary>
            <param name="style">The Chart3DStyle to remove.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DStylesCollection"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DGroups">
            <summary>
            Chart3DGroups class contains collection of ChartGroup, data labels, chart and contour styles.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DGroups.NotifyChanges">
            <summary>
            Called when a change needs to be notified.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DGroups.ChartGroupsCollection">
            <summary>
            Gets chart groups collection.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DGroups"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DGroups.Item(System.Int32)">
            <summary>
            Gets the specified ChartGroup by numeric index.
            </summary>
            <remarks>
            Now there is only one chart group.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DGroups"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DGroups.ChartStyles">
            <summary>
            Gets chart styles collection.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DGroups"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DGroups.ContourStyles">
            <summary>
            Gets contour styles collection.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DGroups"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DGroups.RowLabels">
            <summary>
            Gets row labels collection.
            </summary>
            <remarks>
            The labels for the rows (Y-axis) in the chart, used when the Y-axis has its AnnoMethod property set to DataLabels.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DGroups"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DGroups.ColumnLabels">
            <summary>
            Gets column labels collection.
            </summary>
            <remarks>
            The labels for the columns (X-axis) in the chart, used when the X-axis has its AnnoMethod property set to DataLabels.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DGroups"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DGroups.Group0">
            <summary>
            Gets the first chart group.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DGroups"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DGroupsCollection">
            <summary>
            The ChartGroupsCollection contains one ChartGroup object.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DGroupsCollection.Item(System.Int32)">
            <summary>
            Gets the specified Chart3DGroup by numeric index.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DGroupsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DGroupsCollection.Add(C1.Win.C1Chart3D.Chart3DGroup)">
            <summary>
            Adds <see cref="T:C1.Win.C1Chart3D.Chart3DGroup"/> to <see cref="T:C1.Win.C1Chart3D.Chart3DGroupsCollection"/>.
            </summary>
            <param name="group">The <see cref="T:C1.Win.C1Chart3D.Chart3DGroup"/> object to be added to the end of the <see cref="T:C1.Win.C1Chart3D.Chart3DGroupsCollection"/>.</param>
            <returns>The <see cref="T:C1.Win.C1Chart3D.Chart3DGroupsCollection"/> index at which the value has been added.</returns>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DGroupsCollection.Contains(C1.Win.C1Chart3D.Chart3DGroup)">
            <summary>
            Determines whether the specified <see cref="T:C1.Win.C1Chart3D.Chart3DGroup"/> exists in the collection.
            </summary>
            <param name="grp">The Chart3DGroup to locate.</param>
            <returns>
            A boolean value indicating whether the <see cref="T:C1.Win.C1Chart3D.Chart3DGroup"/> is a member of the collection.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DGroupsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DGroupsCollection.CopyTo(C1.Win.C1Chart3D.Chart3DGroup[],System.Int32)">
            <summary>
            Copies the collection <see cref="T:C1.Win.C1Chart3D.Chart3DGroup"/> elements beginning with
            the specified index to an array of Chart3DGroup objects.
            </summary>
            <param name="array">Output array.</param>
            <param name="index">Index.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DGroupsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DGroupsCollection.IndexOf(C1.Win.C1Chart3D.Chart3DGroup)">
            <summary>
            Gets the index of the specified <see cref="T:C1.Win.C1Chart3D.Chart3DGroup"/> in the collection.
            </summary>
            <param name="grp">The Chart3DGroup to locate.</param>
            <returns>
            An integer indicating the index of the specified <see cref="T:C1.Win.C1Chart3D.Chart3DGroup"/>.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DGroupsCollection"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DGroupsCollectionSerializer">
            <summary>
            The class for <see cref="T:C1.Win.C1Chart3D.Chart3DGroupsCollectionSerializer"/> serialization.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.ActionEnum">
            <summary>
            For C1Chart3D internal use only.
            </summary>
            <exclude/>
        </member>
        <member name="F:C1.Win.C1Chart3D.ActionEnum.None">
            <summary>
            No action (initial value).
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.ActionEnum.ModifyStart">
            <summary>
            Chart modification with mouse start.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.ActionEnum.ModifyEnd">
            <summary>
            Chart modification with mouse end.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.ActionEnum.Rotate">
            <summary>
            Chart rotate.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.ActionEnum.SetAxisX">
            <summary>
            Set rotation around X axis.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.ActionEnum.SetAxisY">
            <summary>
            Set rotation around Y axis.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.ActionEnum.SetAxisZ">
            <summary>
            Set rotation around Z axis.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.ActionEnum.SetAxisNone">
            <summary>
            Set free rotation.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.ActionEnum.Reset">
            <summary>
            Resets all transformation parameters to their default values.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.ActionEnum.Translate">
            <summary>
            Chart translate.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.ActionEnum.Scale">
            <summary>
            Chart scale.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.ActionEnum.ZoomUpdate">
            <summary>
            Chart zoom.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DInteraction">
            <summary>
            The Chart3D interaction properties and methods.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.RotateEventHandler">
            <summary>
            Represents a method that handle the chart rotation event.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:C1.Win.C1Chart3D.RotateEventArgs"/> that contains event data.</param>
        </member>
        <member name="T:C1.Win.C1Chart3D.RotateEventArgs">
            <summary>
            Represents chart rotation event data.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.RotateEventArgs.RotationX">
            <summary>
            The angle of rotation of the chart around the X axis, in radians.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.RotateEventArgs.RotationY">
            <summary>
            The angle of rotation of the chart around the Y axis, in radians.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.RotateEventArgs.RotationZ">
            <summary>
            The angle of rotation of the chart around the Z axis, in radians.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.RotateEventArgs.#ctor">
            <summary>
            Creates a new instance of <see cref="T:C1.Win.C1Chart3D.RotateEventArgs"/> class.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.RotateEventArgs.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of <see cref="T:C1.Win.C1Chart3D.RotateEventArgs"/> class.
            </summary>
            <param name="x">The angle of rotation of the chart around the X axis, in radians.</param>
            <param name="y">The angle of rotation of the chart around the Y axis, in radians.</param>
            <param name="z">The angle of rotation of the chart around the Z axis, in radians.</param>
        </member>
        <member name="T:C1.Win.C1Chart3D.EventMap">
            <summary>
            The Chart3D event map class.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.EventMap.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.EventMap.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.ActionConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.ActionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <inheritdoc/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Action">
            <summary>
            Represents interactive action.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Action.Name">
            <summary>
            Gets the action name.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Action"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Action.Enabled">
            <summary>
            Gets or sets whether the action is enabled.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Action"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Action.MouseButton">
            <summary>
            Gets or sets the mouse button that will be used to start the action.
            </summary>
            <remarks>
            Only for the following actions: Zoom, Scale, Rotate, Scale.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Action"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Action.Keychar">
            <summary>
            Gets or sets the keyboard symbol that will be used to perform the action.
            </summary>
            <remarks>
            Only for the following actions: Reset, SetFreeRotation, SetRotationAxisX, SetRotationAxisY, SetRotationAxisZ.
            </remarks>
        </member>
        <member name="P:C1.Win.C1Chart3D.Action.Modifier">
            <summary>
            Gets or sets the key modifier that will be used to start the action.
            </summary>
            <remarks>
            This property allows bitwise combination of SHIFT, CONTROL, and ALT keys.
            Only for the following actions: Zoom, Scale, Rotate, Scale.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Action"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.ActionCollection">
            <summary>
            Represents the collection of action objects.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.ActionCollection.Item(System.String)">
            <summary>
            Gets the specified Action from the collection by name.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.ActionCollection"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.ActionCollection.Item(System.Int32)">
            <summary>
            Gets the specified Action from the collection by numeric index.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.ActionCollection"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Interaction">
            <summary>
            Contains all properties that control the automated interactive features of the chart,
            including mouse driven rotation, scaling, translating and zooming.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Interaction.Enabled">
            <summary>
            Gets or sets whether the chart interaction is enabled.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Interaction"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Interaction.Actions">
            <summary>
            Gets the collection of available interactive actions.
            </summary>
            <remarks>
            <para>
            The following actions are available:
            <list type="bullet">
            <item><term>Rotate - rotate chart,</term></item>
            <item><term>Scale - change scale of chart,</term></item>
            <item><term>Translate - scroll through chart,</term></item>
            <item><term>Zoom - select rectangular area of chart for view.</term></item>
            <item><term>Reset - reset chart to default view.</term></item>
            <item><term>SetFreeRotation - set free rotation mode(default).</term></item>
            <item><term>SetRotationAxisX - set rotation around x-axis.</term></item>
            <item><term>SetRotationAxisY - set rotation around y-axis.</term></item>
            <item><term>SetRotationAxisZ - set rotation around z-axis.</term></item> 
            </list>
            </para>
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Interaction"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.AttachMethodEnum">
            <summary>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Win.C1Chart3D.Chart3DLabel.AttachMethod"/>
            property in the <see cref="T:C1.Win.C1Chart3D.Chart3DLabel"/> class.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AttachMethodEnum.Coordinate">
            <summary>
            Label is attached at specified pixel coordinate.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AttachMethodEnum.DataCoordinate">
            <summary>
            Label is attached to specified data coordinates.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AttachMethodEnum.DataIndex">
            <summary>
            Label is attached to specified data indices.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.LabelCompassEnum">
            <summary>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Win.C1Chart3D.Chart3DLabel.LabelCompass"/>
            property in the <see cref="T:C1.Win.C1Chart3D.Chart3DLabel"/> class.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.LabelCompassEnum.North">
            <summary>
            Places label to the north or above the data point.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.LabelCompassEnum.NorthEast">
            <summary>
            Places label to the NorthEast or above and right of the data point.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.LabelCompassEnum.East">
            <summary>
            Places label to the East or to the right of the data point.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.LabelCompassEnum.SouthEast">
            <summary>
            Places label to the SouthEast or below and right of the data point.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.LabelCompassEnum.South">
            <summary>
            Places label to the South or below the data point.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.LabelCompassEnum.SouthWest">
            <summary>
            Places label to the SouthWest or below and left of the data point.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.LabelCompassEnum.West">
            <summary>
            Places label to the West or left of the data point.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.LabelCompassEnum.NorthWest">
            <summary>
            Places label to the NorthWest or above and left of the data point.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.LabelView3DEnum">
            <summary>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Win.C1Chart3D.Chart3DLabel.View3D"/>
            property in the |<see cref="T:C1.Win.C1Chart3D.Chart3DLabel"/> class.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.LabelView3DEnum.None">
            <summary>
            Label is drawn in 2D plane of screen.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.LabelView3DEnum.XZ">
            <summary>
            Label is drawn in 3D plane parallel to XZ plane.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.LabelView3DEnum.YZ">
            <summary>
            Label is drawn in 3D plane parallel to YZ plane.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DAttachMethodData">
            <summary>
            The Chart3DAttachMethodData Class is used by chart Label objects in conjunction with the
            Label object <see cref="P:C1.Win.C1Chart3D.Chart3DLabel.AttachMethod"/> property to identify
            how the Label is placed or attached to the chart. Each of the Chart3DAttachMethodData object
            properties are meaning only in the context of the AttachMethod value.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAttachMethodData.X">
            <summary>
            Gets or sets the X coordinate (data or client) when the label AttachMethod property specifies
            Coordinate or DataCoordinate attachment.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAttachMethodData"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAttachMethodData.Y">
            <summary>
            Gets or sets the Y coordinate (data or client) when the label AttachMethod property specifies
            Coordinate or DataCoordinate attachment.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAttachMethodData"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAttachMethodData.Z">
            <summary>
            Gets or sets the Z data coordinate when the label AttachMethod property specifies
            DataCoordinate attachment.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAttachMethodData"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAttachMethodData.SeriesIndex">
            <summary>
            Gets or sets the series index of the data point to attach a label when the label AttachMethod property
            specifies DataIndex attachment and data layout specified is point layout.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAttachMethodData"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAttachMethodData.PointIndex">
            <summary>
            Gets or sets the point index of the data point to attach a label when the label AttachMethod property
            specifies DataIndex attachment and data layout specified is point layout.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAttachMethodData"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAttachMethodData.Column">
            <summary>
            Gets or sets the Column of the data point to attach a label when the label AttachMethod property specifies
            DataIndex attachment and data layout is regular or irregular grid.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAttachMethodData"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DAttachMethodData.Row">
            <summary>
            Gets or sets the Row of the data point to attach a label when the label AttachMethod property specifies
            DataIndex attachment and data layout is regular or irregular grid.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DAttachMethodData"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DLabel">
            <summary>
            A Chart3DLabel object is an independent text annotation that can be attached to the chart.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLabel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Chart3D.Chart3DLabel"/> class.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabel"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLabel.Dispose">
            <summary>
            Clean up any resources being used by the Chart3DLabel.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabel"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DLabel.AttachMethodData">
            <summary>
            Gets or sets the attachment data for the label.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabel"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DLabel.AttachMethod">
            <summary>
            Gets or sets the label attachment method.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabel"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DLabel.Name">
            <summary>
            Gets or sets the label name.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabel"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLabel.ShouldSerializeName">
            <summary>
            Indicates whether the <see cref = "P:C1.Win.C1Chart3D.Chart3DLabel.Name"/> has a default value.
            </summary>
            <returns>True if the <see cref = "P:C1.Win.C1Chart3D.Chart3DLabel.Name"/> has no default value; otherwise, it is false.</returns>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DLabel.Connected">
            <summary>
            Gets or sets whether a connecting line is drawn to an associated data point.
            </summary>
            <remarks>
            If drawn, this connecting line is one pixel wide, and is drawn in the foreground color.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabel"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DLabel.Offset">
            <summary>
            Gets or sets the offset distance from an associated data point.
            </summary>
            <remarks>
            Offset is measured in pixels.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabel"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DLabel.LabelCompass">
            <summary>
            Gets or sets the position of the label relative its specified location.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabel"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DLabel.View3D">
            <summary>
            Gets or sets the 3D-view plane of the label.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabel"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DLabel.StyleName">
            <summary>
            The label style name.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLabel.NotifyChanges">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLabel.AutoPosition(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLabel.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DLabel.Style">
            <summary>
            Gets the Style object of the label.
            </summary>
            <remarks>
            Inherits from the ChartLabels.DefaultLabelStyle property.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabel"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLabel.GetPolygon">
            <summary>
            Gets the polygon points array.
            </summary>
            <returns>The polygon points array.</returns>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DLabel.LocationDefault">
            <summary>
            The default location of the element in chart control client coordinates.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DLabel.Location">
            <summary>
            Gets the location of label.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabel"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DLabel.SizeDefault">
            <summary>
            The default size of the element in chart control.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DLabel.Size">
            <summary>
            Gets the size of the label.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabel"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLabel.ToString">
            <summary>
            Returns a string that represents the current Chart3DLabel.
            </summary>
            <returns>
            A string that represents the current Chart3DLabel.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabel"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DLabelsCollection">
            <summary>
            Represents collection of Chart3DLabels.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLabelsCollection.NotifyChanges">
            <summary>
            Called when a change needs to be notified.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DLabelsCollection.Item(System.Int32)">
            <summary>
            Gets or sets the specified label from the collection by numerical index.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabelsCollection"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DLabelsCollection.Item(System.String)">
            <summary>
            Gets the first occurrence of the label with the specified name.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLabelsCollection.Add(C1.Win.C1Chart3D.Chart3DLabel)">
            <summary>
            Adds a <see cref="T:C1.Win.C1Chart3D.Chart3DLabel"/> object to the collection.
            </summary>
            <param name="label">The Chart3DLabel to add.</param>
            <returns>
            An integer indicating the index of the added <see cref="T:C1.Win.C1Chart3D.Chart3DLabel"/>.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLabelsCollection.Insert(System.Int32,C1.Win.C1Chart3D.Chart3DLabel)">
            <summary>
            Adds a <see cref="T:C1.Win.C1Chart3D.Chart3DLabel"/> object to the collection at the specified index.
            </summary>
            <param name="index">Index.</param>
            <param name="label">The Chart3DLabel to insert.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLabelsCollection.Add(System.String)">
            <summary>
            Adds a <see cref="T:C1.Win.C1Chart3D.Chart3DLabel"/> object with
            the specified text to the collection.
            </summary>
            <param name="text">The label text.</param>
            <returns>
            An integer indicating the index of the new <see cref="T:C1.Win.C1Chart3D.Chart3DLabel"/>.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLabelsCollection.AddNewLabel">
            <summary>
            Creates a new label and appends it to the collection.
            </summary>
            <returns>
            A reference to the newly created Chart3DLabel.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLabelsCollection.InsertNewLabel(System.Int32)">
            <summary>
            Creates a new label and inserts it into the collection at the specified index.
            </summary>
            <param name="index">Index.</param>
            <returns>
            A reference to the newly created Chart3DLabel.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLabelsCollection.Remove(C1.Win.C1Chart3D.Chart3DLabel)">
            <summary>
            Removes the specified <see cref="T:C1.Win.C1Chart3D.Chart3DLabel"/> from the collection.
            </summary>
            <param name="label">The Chart3DLabel to remove.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLabelsCollection.OnInsert(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLabelsCollection.OnInsertComplete(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLabelsCollection.OnRemove(System.Int32,System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLabelsCollection.OnClear">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLabelsCollection.OnClearComplete">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLabelsCollection.Contains(C1.Win.C1Chart3D.Chart3DLabel)">
            <summary>
            Determines whether the specified <see cref="T:C1.Win.C1Chart3D.Chart3DLabel"/> exists in the collection.
            </summary>
            <param name="lbl">The Chart3DLabel to locate.</param>
            <returns>
            A boolean value indicating whether the <see cref="T:C1.Win.C1Chart3D.Chart3DLabel"/> is a member of the collection.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLabelsCollection.CopyTo(C1.Win.C1Chart3D.Chart3DLabel[],System.Int32)">
            <summary>
            Copies the collection <see cref="T:C1.Win.C1Chart3D.Chart3DLabel"/> elements beginning
             with the specified index to an array of Chart3DLabel objects.
            </summary>
            <param name="array">Output array.</param>
            <param name="index">Starting index.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabelsCollection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLabelsCollection.IndexOf(C1.Win.C1Chart3D.Chart3DLabel)">
            <summary>
            Gets the index of the specified <see cref="T:C1.Win.C1Chart3D.Chart3DLabel"/> in the collection.
            </summary>
            <param name="lbl">The Chart3DLabel to locate.</param>
            <returns>
            An integer indicating the index of the specified <see cref="T:C1.Win.C1Chart3D.Chart3DLabel"/>.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabelsCollection"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DLabels">
            <summary>
            The Chart3DLabels contains all chart labels.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLabels.AddNewLabel">
            <summary>
            Creates a new label and appends it to the collection.
            </summary>
            <returns>
            This method returns a reference to the newly added label.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabels"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLabels.Remove(C1.Win.C1Chart3D.Chart3DLabel)">
            <summary>
            Removes the specified label from the collection.
            </summary>
            <param name="label">The Chart3DLabel to remove.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabels"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLabels.LabelFromCoord(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets the label index at the specified location.
            </summary>
            <param name="x">X client coordinate in pixels.</param>
            <param name="y">Y client coordinate in pixels.</param>
            <param name="labelIndex">Label index.</param>
            <returns>
            This method returns true when a label exists at the specified coordinate.
            The LabelIndex is set as it is passed by reference.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabels"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLabels.NotifyChanges">
            <summary>
            Called when a change needs to be notified.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DLabels.DefaultStyle">
            <summary>
            Gets the default label style.
            </summary>
            <remarks>
            All labels inherit from this Style.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabels"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DLabels.LabelsCollection">
            <summary>
            Gets the labels collection.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabels"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DLabels.Item(System.Int32)">
            <summary>
            Gets the specified label from the collection by numerical index.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabels"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DLabels.Item(System.String)">
            <summary>
            Gets the specified label from the collection by name.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabels"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLabels.ToString">
            <summary>
            Returns a string that represents the current Chart3DLabels.
            </summary>
            <returns>
            A string that represents the current Chart3DLabels.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLabels"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.LegendTypeEnum">
            <summary>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Win.C1Chart3D.Chart3DLegend.Type"/>
            property in the <see cref="T:C1.Win.C1Chart3D.Chart3DLegend"/> class.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.LegendTypeEnum.Stepped">
            <summary>
            Range printed for each zone.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.LegendTypeEnum.Continuous">
            <summary>
            Level printed at the division between two adjacent zones.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.LegendOrientationEnum">
            <summary>
            Use the members of this enumeration to set the value of the
            <see cref="P:C1.Win.C1Chart3D.Chart3DLegend.Orientation"/> in the <see cref="T:C1.Win.C1Chart3D.Chart3DLegend"/> class.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.LegendOrientationEnum.Auto">
            <summary>
            Horizontal for legends with north and south Compass values, and Vertical
            for legends with east and west Compass values.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.LegendOrientationEnum.Vertical">
            <summary>
            Legend entries are stacked vertically as legend height permits.
            If sufficient height is not available, additional legend columns are created.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.LegendOrientationEnum.Horizontal">
            <summary>
            Legend entries are added side by side as (horizontally) as legend width permits. 
            If sufficient width is not available, additional legend rows are created.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.LegendSeparatorEnum">
            <summary>
            The appearance of the legend separator.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.LegendSeparatorEnum.Ellipsis">
            <summary>
            Specifies an ellipsis (..) between values of a stepped legend range.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.LegendSeparatorEnum.Dash">
            <summary>
            Specifies a dash (-) between values of a stepped legend range.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DLegend">
            <summary>
            Represents the legend of the chart.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLegend.GetSeriesInfo">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLegend.DrawLegendImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLegend.GetContentWidthHor(System.Drawing.Graphics,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLegend.GetContentHeightVert(System.Drawing.Graphics,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLegend.AdjustRowHeight(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLegend.GetImageWidth(System.Drawing.Graphics,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLegend.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <inheritdoc/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DLegend.Type">
            <summary>
            Gets or sets legend type.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLegend"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DLegend.FormatString">
            <summary>
            Gets or sets the legend format string for numerical values.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DLegend.Separator">
            <summary>
            Gets or sets the separator between range values of a stepped legend.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLegend"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DLegend.Visible">
            <summary>
            Gets or sets legend visibility.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLegend"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DLegend.Style">
            <summary>
            Gets the legend style.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLegend"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLegend.NotifyChanges">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLegend.SeriesFromCoord(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets the index of the legend series entry closest to the specified coordinates.
            </summary>
            <param name="x">X client coordinate in pixels.</param>
            <param name="y">Y client coordinate in pixels.</param>
            <param name="seriesIndex">Series index.</param>
            <returns>
            This method returns true when a legend series entry exists at the specified coordinate.
            The seriesIndex is set as it is passed by reference.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLegend"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DLegend.RectFromSeries(System.Int32)">
            <summary>
            Gets the minimal Rectangle that circumscribes the specified series entry in the legend.
            </summary>
            <param name="seriesIndex">Series index.</param>
            <returns>
            Rectangle.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLegend"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DLegend.Orientation">
            <summary>
            Gets or sets the orientation of the legend entries.
            </summary>
            <remarks>
            <para>
            The legend entries can be oriented in a vertical or horizontal fashion.
            </para>
            <para>
            Vertical orientation indicates that legend entries will stack vertically as the legend height permits.
            If the legend height cannot contain all of the entries and the legend is allowed to size itself,
            then additional columns of stacked entries will be added to the legend.
            </para>
            <para>
            Horizontal orientation indicates that legend entries will be created side by side as legend width permits.
            If the legend width cannot contain all of the entries and the legend is allowed to size itself,
            then additional rows of entries will be added to the legend.
            </para>
            <para>
            Auto orientation automatically selects an appropriate orientation based upon the legend Compass property.
            For east and west Compass values, Vertical orientation is used.  For north and south Compass values, Horizontal
            orientation is used.
            </para>
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLegend"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DLegend.Compass">
            <summary>
            Gets or sets the general positioning of the legend.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DLegend"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DLegend.IsContinious">
            <inheritdoc/>
        </member>
        <member name="T:C1.Win.C1Chart3D.AxisTypeEnum">
            <summary>
            Use the members of this enumeration to specify a specific Axis where appropriate.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AxisTypeEnum.None">
            <summary>
            Indicates that no axis is specified.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AxisTypeEnum.AxisX">
            <summary>
            Specifies the X axis.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AxisTypeEnum.AxisY">
            <summary>
            Specifies the Y axis.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AxisTypeEnum.AxisZ">
            <summary>
            Specifies the Z axis.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DPoint">
            <summary>
            Presents the point in 3D space.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DPoint.TypeConverter">
            <summary>
            The type converter of <see cref = "T:C1.Win.C1Chart3D.Chart3DPoint"/>.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DPoint.TypeConverter.ObjFromString(System.Object,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DPoint.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:C1.Win.C1Chart3D.Chart3DPoint"/> structure.
            </summary>
            <param name="x">X coordinate.</param>
            <param name="y">Y coordinate.</param>
            <param name="z">Z coordinate.</param>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DPoint"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DPoint.ToString">
            <summary>
            Returns a string that represents the current Chart3DPoint.
            </summary>
            <returns>
            A string that represents the current Chart3DPoint.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DPoint"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DPoint.X">
            <summary>
            Gets or sets X-coordinate of the point.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DPoint"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DPoint.Y">
            <summary>
            Gets or sets Y-coordinate of the point.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DPoint"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DPoint.Z">
            <summary>
            Gets or sets Z-coordinate of the point.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DPoint"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DSurface">
            <summary>
            The Chart3DSurfce class and its properties are only used for surface charts.
            It is returned by the Surface property of a ChartGroup.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DSurface.ColumnMeshFilter">
            <summary>
            Gets or sets the frequency with which column mesh lines are drawn.
            </summary>
            <remarks>
            When this property has the value n, every nth mesh line is drawn.
            This mesh filter applies to both regular and irregular grids.
            When this property is set to 0, the chart automatically chooses a mesh filter.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DSurface"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DSurface.RowMeshFilter">
            <summary>
            Gets or sets the frequency with which row mesh lines are drawn.
            </summary>
            <remarks>
            When this property has the value n, every nth mesh line is drawn.
            This mesh filter applies to both regular and irregular grids.
            When this property is set to 0, the chart automatically chooses a mesh filter.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DSurface"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DSurface.IsRowMeshShowing">
            <summary>
            Gets or sets whether the row mesh lines are to appear.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DSurface"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DSurface.IsColumnMeshShowing">
            <summary>
            Gets or sets whether the column mesh lines are to appear.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DSurface"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.TextRotationEnum">
            <summary>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Win.C1Chart3D.Chart3DView.TextRotation"/>
            property in the <see cref="T:C1.Win.C1Chart3D.Chart3DView"/> class.	
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.TextRotationEnum.RotNo">
            <summary>
            No rotation.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.TextRotationEnum.Rot2D">
            <summary>
            Rotate in the plane of screen.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.TextRotationEnum.Rot3D">
            <summary>
            Rotate in 3D space.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DProjection">
            <summary>
            Represents projection(floor or ceiling) for contour and zones charts.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DProjection.IsContoured">
            <summary>
            Gets or sets whether projected contours are to be drawn.
            </summary>
            <remarks>
            If True, projected contours are drawn regardless of the value of the IsContoured property of the Contour object.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DProjection"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DProjection.IsZoned">
            <summary>
            Gets or sets whether the chart is zoned.
            </summary>
            <remarks>
            If True, projected contours are drawn regardless of the value of the IsZoned property of the Contour object.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DProjection"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DProjection.NotifyChanges">
            <inheritdoc/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DProjection.Converter.ObjFromString(System.Object,System.String)">
            <inheritdoc/>
        </member>
        <member name="T:C1.Win.C1Chart3D.View3DEnum">
            <summary>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Win.C1Chart3D.Chart3DView.View3D"/>
            property in the <see cref="T:C1.Win.C1Chart3D.Chart3DView"/> class.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.View3DEnum.Default">
            <summary>
            Default view.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.View3DEnum.XY_2D_Pos">
            <summary>
            View XY-plane from positive edge of Z-axis.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.View3DEnum.XY_2D_Neg">
            <summary>
            View XY-plane from negative edge of Z-axis.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.View3DEnum.XZ_2D_Pos">
            <summary>
            View XZ-plane from positive edge of Y-axis.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.View3DEnum.XZ_2D_Neg">
            <summary>
            View XZ-plane from negative edge of Y-axis.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.View3DEnum.YZ_2D_Pos">
            <summary>
            View YZ-plane from positive edge of X-axis.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.View3DEnum.YZ_2D_Neg">
            <summary>
            View YZ-plane from negative edge of X-axis.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.View3DEnum.Custom">
            <summary>
            Custom view.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DViewState">
            <summary>
            Represents the state of Chart3DView object. This object, which has no public properties or methods, 
            is returned by a call to the Save method.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.Chart3DView">
            <summary>
            The Chart3DView defines the three-dimensional features of a chart.
            It is returned by the View property of a Chart3DArea.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DView.ResetTransformation">
            <summary>
            Resets all transformation parameters to their default values.
            </summary>
            <remarks>
            The transformation parameters that are reset include Xscale, Yscale, RotationX, RotationY,
            RotationZ, Perspective, ViewportScale, ViewPortHorizontalShift, and ViewportVerticalShift.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DView"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DView.ViewportHorizontalShift">
            <summary>
            Gets or sets horizontal shift of chart viewport.
            </summary>
            <remarks>
            Specifies the degree of horizontal view translation from a full view (a maximal, non-clipped view).
            Translation is relative to a normalized box with origin in the bottom left corner.
            Translation of more than a full unit (more than 1.0 or -1.0) causes the view to translate
            “out of view” when ViewPortScale=1. This property is updated if the user dynamically translates the view.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DView"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DView.ViewportVerticalShift">
            <summary>
            Gets or sets vertical shift of chart viewport.
            </summary>
            <remarks>
            Specifies the degree of vertical view translation from a full view. Translation is relative to a normalized
            box with origin in the bottom left corner. Translation of more than a full unit (more than 1.0 or -1.0)
            causes the view to translate “out of view” when ViewPortScale=1. This property is updated
            if the user dynamically translates the view.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DView"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DView.ViewportScale">
            <summary>
            Gets or sets scale of chart viewport.
            </summary>
            <remarks>
            Specifies the degree of scaling (zooming) up or down from a full (maximal, non-clipped) view.
            This property is updated if the user dynamically scales or zooms the view.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DView"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DView.Perspective">
            <summary>
            Perspective of 3-D view.
            </summary>
            <remarks>
            Must be a value greater than 1. Higher values reduce the perspective effect and approach a parallel projection.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DView"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DView.RotationX">
            <summary>
            Rotation about X-axis.
            </summary>
            <remarks>
            Specifies the number of degrees of rotation of the plot cube about the X-axis.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DView"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DView.RotationY">
            <summary>
            Rotation about Y-axis.
            </summary>
            <remarks>
            Specifies the number of degrees of rotation of the plot cube about the Y-axis.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DView"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DView.RotationZ">
            <summary>
            Rotation about Z-axis.
            </summary>
            <remarks>
            Specifies the number of degrees of rotation of the plot cube about the Z-axis.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DView"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DView.BackColor">
            <summary>
            Background color of plot cube.
            </summary>
            <remarks>
            Inherits from Chart3Darea.Style.BackColor.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DView"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DView.ShouldSerializeBackColor">
            <summary>
            Returns false if the Chart3DView BackColor property is in the default state.
            </summary>
            <returns>
            Boolean value.
            </returns>
            <remarks>
            The default state is to inherit the BackColor from the Chart3DArea object.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DView"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DView.ForeColor">
            <summary>
            Foreground color of plot cube.
            </summary>
            <remarks>
            Inherits from Chart3Darea.Style.ForeColor.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DView"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DView.ShouldSerializeForeColor">
            <summary>
            Returns false if the Chart3DView ForeColor property is in the default state.
            </summary>
            <returns>
            Boolean value.
            </returns>
            <remarks>
            The default state is to inherit the ForeColor from the Chart3DArea object.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DView"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DView.AxisTitleFont">
            <summary>
            Axis title font.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DView.ShouldSerializeAxisTitleFont">
            <summary>
            Indicates whether the <see cref = "P:C1.Win.C1Chart3D.Chart3DView.AxisTitleFont"/> has a default value.
            </summary>
            <returns>True if the <see cref = "P:C1.Win.C1Chart3D.Chart3DView.AxisTitleFont"/> has no default value; otherwise, it is false.</returns>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DView.AxisFont">
            <summary>
            The axis label text font.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DView.ShouldSerializeAxisFont">
            <summary>
            Indicates whether the <see cref = "P:C1.Win.C1Chart3D.Chart3DView.AxisFont"/> has a default value.
            </summary>
            <returns>True if the <see cref = "P:C1.Win.C1Chart3D.Chart3DView.AxisFont"/> has no default value; otherwise, it is false.</returns>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DView.TextRotation">
            <summary>
            Gets or sets text rotation for axis titles and axis annotations.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DView"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DView.Ceiling">
            <summary>
            Gets the ceiling object.
            </summary>
            <remarks>
            The projection of contours and zones onto the z=zmax plane. This property is used only in surface charts.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DView"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DView.ShouldSerializeCeiling">
            <summary>
            Indicates whether the <see cref = "P:C1.Win.C1Chart3D.Chart3DView.Ceiling"/> has a default value.
            </summary>
            <returns>True if the <see cref = "P:C1.Win.C1Chart3D.Chart3DView.Ceiling"/> has no default value; otherwise, it is false.</returns>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DView.Floor">
            <summary>
            Gets the floor object.
            </summary>
            <remarks>
            The projection of contours and zones onto the z=zmin plane. This property is used only in surface charts.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DView"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DView.ShouldSerializeFloor">
            <summary>
            Indicates whether the <see cref = "P:C1.Win.C1Chart3D.Chart3DView.Floor"/> has a default value.
            </summary>
            <returns>True if the <see cref = "P:C1.Win.C1Chart3D.Chart3DView.Floor"/> has no default value; otherwise, it is false.</returns>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DView.IsInteractive">
            <summary>
            Whether the built-in interaction is enabled.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DView"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DView.Interaction">
            <summary>
            Gets the <see cref = "T:C1.Win.C1Chart3D.Chart3DInteraction"/> object.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DView.XScale">
            <summary>
            Gets or sets scaling of the plot cube along X-axis.
            </summary>
            <remarks>
            The amount of scaling in the X-axis direction, measured as relation to the height (Z-axis) of the cube.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DView"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DView.YScale">
            <summary>
            Gets or sets scaling of the plot cube along Y-axis.
            </summary>
            <remarks>
            The amount of scaling in the Y-axis direction, measured as relation to the height (Z-axis) of the cube.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DView"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DView.PreviewMethod">
            <summary>
            Gets or sets preview method.
            </summary>
            <remarks>
            Specifies how interactive manipulations are to be presented to the user.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DView"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DView.Boxed">
            <summary>
            Gets or sets whether all plotting cube edges are rendered.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DView"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DView.Restore(C1.Win.C1Chart3D.Chart3DViewState)">
            <summary>
            Restore to view state to the represented by a Chart3DViewState object.
            </summary>
            <param name="state">The Chart3DViewState object.</param>
            <remarks>
            State must be previously saved using Save method.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DView"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DView.Save">
            <summary>
            Save current view state to the Chart3DViewState object.
            </summary>
            <returns>
            The Chart3DViewState object.
            </returns>
            <remarks>
            Use Restore method to return view to the saved state.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DView"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DView.View3D">
            <summary>
            Gets or sets predefined view.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DView"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Chart3DView.AutoFit">
            <summary>
            Gets or sets whether the x/y ratio for 2D projection is calculated automatically.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DView.ToString">
            <summary>
            Returns a string that represents the current Chart3DView.
            </summary>
            <returns>
            A string that represents the current Chart3DView.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DView"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Chart3DView.NotifyChanges">
            <summary>
            Called when a change needs to be notified.
            </summary>
        </member>
        <member name="E:C1.Win.C1Chart3D.Chart3DView.BeforeRotate">
            <summary>
            Occurs before chart rotates.
            </summary>
            <remarks>
            The event handler receives an argument of type <see cref="T:C1.Win.C1Chart3D.RotateEventArgs"/>
            containing data related to this event.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DView"/>
        </member>
        <member name="E:C1.Win.C1Chart3D.Chart3DView.AfterRotate">
            <summary>
            Occurs after chart rotates.
            </summary>
            <remarks>
            The event handler receives an argument of type <see cref="T:C1.Win.C1Chart3D.RotateEventArgs"/>
            containing data related to this event.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Chart3DView"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.AlignImageEnum">
            <summary>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Win.C1Chart3D.Style.ImageAlignment"/>
            property in the <see cref="T:C1.Win.C1Chart3D.Style"/> class.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AlignImageEnum.Hide">
            <summary>
            Image is hidden
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AlignImageEnum.Left">
            <summary>
            Image is aligned to the left
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AlignImageEnum.Right">
            <summary>
            Image is aligned to the right
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AlignImageEnum.Top">
            <summary>
            Image is aligned to the top
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AlignImageEnum.Bottom">
            <summary>
            Image is aligned to the bottom
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AlignImageEnum.Center">
            <summary>
            Image is center-aligned
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AlignImageEnum.Scale">
            <summary>
            Image is scaled to fit the image area
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AlignImageEnum.Stretch">
            <summary>
            Image is stretched to fit image area
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AlignImageEnum.Tile">
            <summary>
            Image is tiled throughout the image area
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.AlignHorzEnum">
            <summary>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Win.C1Chart3D.Style.HorizontalAlignment"/>
            property in the <see cref="T:C1.Win.C1Chart3D.Style"/> class.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AlignHorzEnum.General">
            <summary>
            Sets text to be left aligned and numbers to be right aligned.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AlignHorzEnum.Near">
            <summary>
            Aligns text to the near side (left side in left-to-right mode).
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AlignHorzEnum.Center">
            <summary>
            Aligns text to the center.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AlignHorzEnum.Far">
            <summary>
            Aligns cell text to the far side (right side in left-to-right mode).
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AlignHorzEnum.Justify">
            <summary>
            Spreads text throughout.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.AlignVertEnum">
            <summary>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Win.C1Chart3D.Style.VerticalAlignment"/>
            property in the <see cref="T:C1.Win.C1Chart3D.Style"/> class.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AlignVertEnum.Top">
            <summary>
            Aligns text to the top.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AlignVertEnum.Center">
            <summary>
            Aligns text to the center.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.AlignVertEnum.Bottom">
            <summary>
            Aligns text to the bottom.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.PrintScaleEnum">
            <summary>
            Use the members of this enumeration to set the value of the scaling property in the
            <see cref="M:C1.Win.C1Chart3D.C1Chart3D.PrintChart(C1.Win.C1Chart3D.PrintScaleEnum,System.Drawing.Rectangle,System.Drawing.Printing.PageSettings,System.Boolean)"/> method.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.PrintScaleEnum.ScaleNone">
            <summary>
            Same size as actual chart.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.PrintScaleEnum.ScaleToFit">
            <summary>
            Scale to existing window (minimum of height and width), preserving aspect ratio.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.PrintScaleEnum.ScaleToHeight">
            <summary>
            Scale to specified height, preserving aspect ratio.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.PrintScaleEnum.ScaleToMax">
            <summary>
            Enlarge to size of page.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.PrintScaleEnum.ScaleToWidth">
            <summary>
            Scale to specified width, preserving aspect ratio.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.RotationEnum">
            <summary>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Win.C1Chart3D.Style.Rotation"/>
            property in the <see cref="T:C1.Win.C1Chart3D.Style"/> class.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.RotationEnum.Rotate0">
            <summary>
            No rotation.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.RotationEnum.Rotate90">
            <summary>
            Object is rotated 90 degrees.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.RotationEnum.Rotate180">
            <summary>
            Object is rotated 180 degrees, or inverted.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.RotationEnum.Rotate270">
            <summary>
            Object is rotated 270 degrees.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.BorderStyleEnum">
            <summary>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Win.C1Chart3D.Border.BorderStyle"/>
            property in the <see cref="T:C1.Win.C1Chart3D.Border"/> class.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.BorderStyleEnum.NotSet">
            <summary>
            Border style is not set and is inherited from C1Chart class.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.BorderStyleEnum.None">
            <summary>
            No border.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.BorderStyleEnum.Empty">
            <summary>
            Empty border.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.BorderStyleEnum.Solid">
            <summary>
            Solid line border.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.BorderStyleEnum.Raised">
            <summary>
            Raised 3D border, drawn using system colors.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.BorderStyleEnum.Inset">
            <summary>
            Inset 3D border, drawn using system colors.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.BorderStyleEnum.RaisedBevel">
            <summary>
            Raised 3D border with bevel.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.BorderStyleEnum.InsetBevel">
            <summary>
            Inset 3D border  with bevel.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.BorderStyleEnum.Groove">
            <summary>
            Compound border (inset+raised).
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.BorderStyleEnum.Fillet">
            <summary>
            Compound border (raised+inset).
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.BorderStyleEnum.Double">
            <summary>
            Double solid line border.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.BorderStyleEnum.Dashed">
            <summary>
            Dashed line border.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.BorderStyleEnum.Opaque">
            <summary>
            Solid line border rendered without antialiasing.  Opaque borders ignore rounding
            and are most useful for antialiased charts to be rendered as transparent images.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.SymbolShapeEnum">
            <summary>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Win.C1Chart3D.Chart3DSymbolStyle.Shape"/>
            property in the <see cref="T:C1.Win.C1Chart3D.Chart3DSymbolStyle"/> class.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.SymbolShapeEnum.None">
            <summary>
            No symbol represents data point.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.SymbolShapeEnum.Box">
            <summary>
            Data point represented by small solid square
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.SymbolShapeEnum.Dot">
            <summary>
            Data point represented by small solid circle.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.SymbolShapeEnum.Tri">
            <summary>
            Data point represented by solid triangle.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.SymbolShapeEnum.Diamond">
            <summary>
            Data point represented by solid diamond.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.SymbolShapeEnum.InvertedTri">
            <summary>
            Data point represented by solid inverted triangle.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.SymbolShapeEnum.Star">
            <summary>
            Data point represented by solid star.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.SymbolShapeEnum.VerticalLine">
            <summary>
            Data point represented by short vertical line.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.SymbolShapeEnum.HorizontalLine">
            <summary>
            Data point represented by short horizontal line.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.SymbolShapeEnum.Cross">
            <summary>
            Data point represented by crossed horizontal and vertical lines.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.SymbolShapeEnum.DiagCross">
            <summary>
            Data point represented by diagonal crossed lines.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.SymbolShapeEnum.Circle">
            <summary>
            Data point represented by the outline of a circle.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.SymbolShapeEnum.Square">
            <summary>
            Data point represented by the outline of a square.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.SymbolShapeEnum.OpenTri">
            <summary>
            Data point represented by the outline of a triangle.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.SymbolShapeEnum.OpenDiamond">
            <summary>
            Data point represented by the outline of a diamond.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.SymbolShapeEnum.OpenInvertedTri">
            <summary>
            Data point represented by the outline of an inverted triangle.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.GradientStyleEnum">
            <summary>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Win.C1Chart3D.Style.GradientStyle"/>
            property in the <see cref="T:C1.Win.C1Chart3D.Style"/> class.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.GradientStyleEnum.None">
            <summary>
            No gradient filling.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.GradientStyleEnum.Horizontal">
            <summary>
            From left (BackColor) to right (BackColor2).
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.GradientStyleEnum.HorizontalCenter">
            <summary>
            From center (BackColor) to left and right (BackColor2).
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.GradientStyleEnum.Vertical">
            <summary>
            From top (BackColor) to bottom (BackColor2).
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.GradientStyleEnum.VerticalCenter">
            <summary>
            From center (BackColor) to top and bottom (BackColor2).
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.GradientStyleEnum.Diagonal">
            <summary>
            From left-bottom (BackColor) to right-top (BackColor2).
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.GradientStyleEnum.DiagonalCenter">
            <summary>
            From center (BackColor) to  left-bottom and right-top (BackColor2).
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.GradientStyleEnum.DiagonalBack">
            <summary>
            From left-top (BackColor) to right-bottom (BackColor2).
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.GradientStyleEnum.DiagonalBackCenter">
            <summary>
            From center (BackColor) to left-top and right-bottom (BackColor2).
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.GradientStyleEnum.Radial">
            <summary>
            From center (BackColor) to corners (BackColor2) in radial direction.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.GradientStyleEnum.FromCenter">
            <summary>
            From center (BackColor) to corners (BackColor2).
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.HatchStyleEnum">
            <summary>
            Use the members of this enumeration to set the value of the <see cref="P:C1.Win.C1Chart3D.Style.HatchStyle"/>
            property in the <see cref="T:C1.Win.C1Chart3D.Style"/> class.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.None">
            <summary>
            No pattern.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.Horizontal">
            <summary>
            A pattern of horizontal lines.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.Vertical">
            <summary>
            A pattern of vertical lines
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.ForwardDiagonal">
            <summary>
            A pattern of lines on a diagonal from upper left to lower right.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.BackwardDiagonal">
            <summary>
            A pattern of lines on a diagonal from upper right to lower left.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.Cross">
            <summary>
            Specifies horizontal and vertical lines that cross.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.DiagonalCross">
            <summary>
            Specifies forward diagonal and backward diagonal lines that cross. The lines are antialiased.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.Percent05">
            <summary>
            Specifies a 5-percent hatch. The ratio of foreground color to background color is 5:100.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.Percent10">
            <summary>
            Specifies a 10-percent hatch. The ratio of foreground color to background color is 10:100.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.Percent20">
            <summary>
            Specifies a 20-percent hatch. The ratio of foreground color to background color is 20:100.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.Percent25">
            <summary>
            Specifies a 25-percent hatch. The ratio of foreground color to background color is 25:100.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.Percent30">
            <summary>
            Specifies a 30-percent hatch. The ratio of foreground color to background color is 30:100.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.Percent40">
            <summary>
            Specifies a 40-percent hatch. The ratio of foreground color to background color is 40:100.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.Percent50">
            <summary>
            Specifies a 50-percent hatch. The ratio of foreground color to background color is 50:100.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.Percent60">
            <summary>
            Specifies a 60-percent hatch. The ratio of foreground color to background color is 60:100.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.Percent70">
            <summary>
            Specifies a 70-percent hatch. The ratio of foreground color to background color is 70:100.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.Percent75">
            <summary>
            Specifies a 75-percent hatch. The ratio of foreground color to background color is 75:100.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.Percent80">
            <summary>
            Specifies a 80-percent hatch. The ratio of foreground color to background color is 80:100.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.Percent90">
            <summary>
            Specifies a 90-percent hatch. The ratio of foreground color to background color is 90:100.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.LightDownwardDiagonal">
            <summary>
            
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.LightUpwardDiagonal">
            <summary>
            Specifies diagonal lines that slant to the left from top points to bottom points and are
            spaced 50 percent closer together than BackwardDiagonal, but they are not antialiased.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.DarkDownwardDiagonal">
            <summary>
            Specifies diagonal lines that slant to the right from top points to bottom points, are spaced
            50 percent closer together than, and are twice the width of ForwardDiagonal. This hatch pattern is not antialiased.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.DarkUpwardDiagonal">
            <summary>
            Specifies diagonal lines that slant to the left from top points to bottom points, are spaced 50 percent
            closer together than BackwardDiagonal, and are twice its width, but the lines are not antialiased.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.WideDownwardDiagonal">
            <summary>
            Specifies diagonal lines that slant to the right from top points to bottom points, have the same 
            spacing as hatch style ForwardDiagonal, and are triple its width, but are not antialiased.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.WideUpwardDiagonal">
            <summary>
            Specifies diagonal lines that slant to the left from top points to bottom points, have the same spacing
            as hatch style BackwardDiagonal, and are triple its width, but are not antialiased.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.LightVertical">
            <summary>
            Specifies vertical lines that are spaced 50 percent closer together than Vertical.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.LightHorizontal">
            <summary>
            Specifies horizontal lines that are spaced 50 percent closer together than Horizontal.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.NarrowVertical">
            <summary>
            Specifies vertical lines that are spaced 75 percent closer together than hatch style Vertical
            (or 25 percent closer together than LightVertical).
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.NarrowHorizontal">
            <summary>
            Specifies horizontal lines that are spaced 75 percent closer together than hatch style Horizontal
            (or 25 percent closer together than LightHorizontal).
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.DarkVertical">
            <summary>
            Specifies vertical lines that are spaced 50 percent closer together than Vertical and are twice its width.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.DarkHorizontal">
            <summary>
            Specifies horizontal lines that are spaced 50 percent closer together than Horizontal and are twice its width.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.DashedDownwardDiagonal">
            <summary>
            Specifies dashed diagonal lines that slant to the right from top points to bottom points.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.DashedUpwardDiagonal">
            <summary>
            Specifies dashed diagonal lines that slant to the left from top points to bottom points.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.DashedHorizontal">
            <summary>
            Specifies dashed horizontal lines.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.DashedVertical">
            <summary>
            Specifies dashed vertical lines.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.SmallConfetti">
            <summary>
            Specifies a hatch that has the appearance of confetti.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.LargeConfetti">
            <summary>
            Specifies a hatch that has the appearance of confetti, and is composed of larger pieces than SmallConfetti.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.ZigZag">
            <summary>
            Specifies horizontal lines that are composed of zigzags.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.Wave">
            <summary>
            Specifies horizontal lines that are composed of tildes.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.DiagonalBrick">
            <summary>
            Specifies a hatch that has the appearance of layered bricks that slant to the left from top points to bottom points.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.HorizontalBrick">
            <summary>
            Specifies a hatch that has the appearance of horizontally layered bricks.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.Weave">
            <summary>
            Specifies a hatch that has the appearance of a woven material.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.Plaid">
            <summary>
            Specifies a hatch that has the appearance of a plaid material.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.Divot">
            <summary>
            Specifies a hatch that has the appearance of divots.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.DottedGrid">
            <summary>
            Specifies horizontal and vertical lines, each of which is composed of dots that cross.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.DottedDiamond">
            <summary>
            Specifies forward diagonal and backward diagonal lines, each of which is composed of dots, that cross.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.Shingle">
            <summary>
            Specifies a hatch that has the appearance of diagonally-layered shingles that slant to the right
            from top points to bottom points.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.Trellis">
            <summary>
            Specifies a hatch that has the appearance of a trellis.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.Sphere">
            <summary>
            Specifies a hatch that has the appearance of spheres laid adjacent to one another.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.SmallGrid">
            <summary>
            Specifies horizontal and vertical lines that cross and are spaced 50 percent closer together than hatch style Cross.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.SmallCheckerBoard">
            <summary>
            Specifies a hatch that has the appearance of a checkerboard.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.LargeCheckerBoard">
            <summary>
            Specifies a hatch that has the appearance of a checkerboard with squares that are twice the size of SmallCheckerBoard.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.OutlinedDiamond">
            <summary>
            Specifies forward diagonal and backward diagonal lines that cross but are not antialiased.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.HatchStyleEnum.SolidDiamond">
            <summary>
            Specifies a hatch that has the appearance of a checkerboard placed diagonally.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.CompassEnum">
            <summary>
            Use the members of this enumeration to set the value of the Compass property of
            the <see cref="T:C1.Win.C1Chart3D.Title"/> and <see cref="T:C1.Win.C1Chart3D.Chart3DLegend"/> classes.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.CompassEnum.North">
            <summary>
            Object is positioned north or above.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.CompassEnum.South">
            <summary>
            Object is positioned south or below.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.CompassEnum.East">
            <summary>
            Object is positioned east or to the right side.
            </summary>
        </member>
        <member name="F:C1.Win.C1Chart3D.CompassEnum.West">
            <summary>
            Object is positioned west or to the left side.
            </summary>
        </member>
        <member name="T:C1.Win.C1Chart3D.Border">
            <summary>
            The Border class is used to describe the border appearance of various elements of the chart,
            include the chart itself, the ChartArea, the Legend, the Header, the Footer and Labels.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Border.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Border"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Border.Color">
            <summary>
            Gets or sets the border color.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Border"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Border.ShouldSerializeColor">
            <summary>
            Returns false if the Border Color property is in the default state.
            </summary>
            <returns>
            Boolean value.
            </returns>
            <remarks>
            The default state is to use Color.Transparent and use the BackColor of the parent Style
            as the basis for the border color.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Border"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Border.Thickness">
            <summary>
            Gets or sets the border thickness.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Border"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Border.Rounding">
            <summary>
            Gets the Rounding object that controls the rounding of corners.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Border"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Rounding">
            <summary>
            Provides the properties set that describes the rounding of border corners.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Rounding.All">
            <summary>
            Gets or sets the radius of rounding for all corners of the rectangle.
            </summary>
            <remarks>
            Setting this property changes all of the corners by changing the values of the
            <see cref="P:C1.Win.C1Chart3D.Rounding.LeftTop"/>, <see cref="P:C1.Win.C1Chart3D.Rounding.LeftBottom"/>,
            <see cref="P:C1.Win.C1Chart3D.Rounding.RightTop"/>, and <see cref="P:C1.Win.C1Chart3D.Rounding.RightBottom"/> properties.
            If these properties are re-set after setting the All property, then each corner may have a different radius.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Rounding"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Rounding.LeftTop">
            <summary>
            Gets or sets the radius of rounding for the left top corner of the rectangle.
            </summary>
            <remarks>
            Setting this property will override the <see cref="P:C1.Win.C1Chart3D.Rounding.All"/> property value
            for the LeftTop region of the border.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Rounding"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Rounding.LeftBottom">
            <summary>
            Gets or sets the radius of rounding for the left bottom corner of the rectangle.
            </summary>
            <remarks>
            Setting this property will override the <see cref="P:C1.Win.C1Chart3D.Rounding.All"/>
            property value for the LeftBottom region of the border.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Rounding"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Rounding.RightTop">
            <summary>
            Gets or sets the radius of rounding for the right top corner of the rectangle.
            </summary>
            <remarks>
            Setting this property will override the <see cref="P:C1.Win.C1Chart3D.Rounding.All"/>
            property value for the RightTop region of the border.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Rounding"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Rounding.RightBottom">
            <summary>
            Gets or sets the radius of rounding for the right bottom corner of the rectangle.
            </summary>
            <remarks>
            Setting this property will override the <see cref="P:C1.Win.C1Chart3D.Rounding.All"/>
            property value for the RightBottom region of the border.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Rounding"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Rounding.ToString">
            <summary>
            Returns a string that represents the current Rounding.
            </summary>
            <returns>
            A string that represents the current Rounding.
            </returns>
            <seealso cref="T:C1.Win.C1Chart3D.Rounding"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Style">
            <summary>
            The Style class is used to describe the appearance of various elements of the chart,
            include the chart itself, the ChartArea, the Legend, the Header, the Footer and Labels.
            Typically, an object’s style and one or more of its properties are inherited the object’s parent.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Style.BackColor">
            <summary>
            Gets or sets the background color.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Style"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Style.ShouldSerializeBackColor">
            <summary>
            Returns false if the Style BackColor property is in the default state.
            </summary>
            <returns>
            Boolean value.
            </returns>
            <remarks>
            The default state is to inherit the BackColor from the style of the parent object.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Style"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Style.ResetBackColor">
            <summary>
            Indicates whether the <see cref = "P:C1.Win.C1Chart3D.Style.BackColor"/> has a default value.
            </summary>
            <returns>True if the <see cref = "P:C1.Win.C1Chart3D.Style.BackColor"/> has no default value; otherwise, it is false.</returns>
        </member>
        <member name="P:C1.Win.C1Chart3D.Style.ForeColor">
            <summary>
            Gets or sets the foreground color.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Style"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Style.ShouldSerializeForeColor">
            <summary>
            Returns false if the Style ForeColor property is in the default state.
            </summary>
            <returns>
            Boolean value.
            </returns>
            <remarks>
            The default state is to inherit the ForeColor from the style of the parent object.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Style"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Style.ResetForeColor">
            <summary>
            Indicates whether the <see cref = "P:C1.Win.C1Chart3D.Style.ForeColor"/> has a default value.
            </summary>
            <returns>True if the <see cref = "P:C1.Win.C1Chart3D.Style.ForeColor"/> has no default value; otherwise, it is false.</returns>
        </member>
        <member name="P:C1.Win.C1Chart3D.Style.Font">
            <summary>
            Gets or sets the font object.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Style"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Style.ShouldSerializeFont">
            <summary>
            Returns false if the Style Font property is in the default state.
            </summary>
            <returns>
            Boolean value.
            </returns>
            <remarks>
            The default state is to inherit the Font from the style of the parent object.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Style"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Style.ResetFont">
            <summary>
            Indicates whether the <see cref = "P:C1.Win.C1Chart3D.Style.Font"/> has a default value.
            </summary>
            <returns>True if the <see cref = "P:C1.Win.C1Chart3D.Style.Font"/> has no default value; otherwise, it is false.</returns>
        </member>
        <member name="P:C1.Win.C1Chart3D.Style.Opaque">
            <summary>
            Gets or sets the whether the background is opaque.
            </summary>
            <remarks>
            If an object’s Opaque property is true, then the object’s background is brushed in the backcolor
            before the foreground is drawn.  If an object’s Opaque property is false, the background is not brushed
            and only the object’s foreground is drawn.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Style"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Style.HorizontalAlignment">
            <summary>
            Gets or sets the text horizontal alignment.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Style"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Style.VerticalAlignment">
            <summary>
            Gets or sets the text vertical alignment.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Style"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Style.ImageAlignment">
            <summary>
            Gets or sets the image alignment.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Style"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Style.Rotation">
            <summary>
            Gets or sets the text rotational orientation.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Style"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Style.Border">
            <summary>
            Gets the border object.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Style"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Style.ResetBorder">
            <summary>
            Resets the border to the default state.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Style"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Style.BackColor2">
            <summary>
            Gets or sets the gradient or hatch background.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Style"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Style.ShouldSerializeBackColor2">
            <summary>
            Returns false if the Style BackColor2 property is in the default state.
            </summary>
            <returns>
            Boolean value.
            </returns>
            <remarks>
            The default state is to inherit the BackColor2 from the style of the parent object.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Style"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Style.ResetBackColor2">
            <summary>
            Indicates whether the <see cref = "P:C1.Win.C1Chart3D.Style.BackColor2"/> has a default value.
            </summary>
            <returns>True if the <see cref = "P:C1.Win.C1Chart3D.Style.BackColor2"/> has no default value; otherwise, it is false.</returns>
        </member>
        <member name="P:C1.Win.C1Chart3D.Style.GradientStyle">
            <summary>
            Defines the style of the background gradient filling.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Style"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Style.ResetGradientStyle">
            <summary>
            Indicates whether the <see cref = "P:C1.Win.C1Chart3D.Style.GradientStyle"/> has a default value.
            </summary>
            <returns>True if the <see cref = "P:C1.Win.C1Chart3D.Style.GradientStyle"/> has no default value; otherwise, it is false.</returns>
        </member>
        <member name="P:C1.Win.C1Chart3D.Style.HatchStyle">
            <summary>
            Defines the style of the background hatch filling.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Style"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Style.Autowrap">
            <summary>
            Gets or sets whether the text is automatically wrapped.
            </summary>
            <remarks>
            Most text containing objects within C1Chart3D can automatically wrap text within them, including header,
            footer, axes titles, labels and the legend (title only, not series names).  However, all of these objects
            can be sized automatically.  Automatic sizing is always based upon a single line of text whenever possible.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Style"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Style.ShouldSerializeAutowrap">
            <summary>
            Returns false if the Style Autowrap property is in the default state.
            </summary>
            <returns>
            Boolean value.
            </returns>
            <remarks>
            The default state is to inherit the Autowrap from the style of the parent object.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Style"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Style.ResetAutowrap">
            <summary>
            Resets Autowrap property to the default state.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Style"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Style.VerticalText">
            <summary>
            Gets or sets whether text is displayed vertically.
            </summary>
            <remarks>
            VerticalText allows some double byte characters to be
            rendered from top to bottom instead of left to right. For single byte
            characters VerticalText appears as rotated text, 90 degrees in the
            clockwise direction.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Style"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Style.ShouldSerializeVerticalText">
            <summary>
            Returns false if the Style <see cref="P:C1.Win.C1Chart3D.Style.VerticalText"/> property is in the default state.
            </summary>
            <returns>
            Boolean.
            </returns>
            <remarks>
            The default state is to inherit the VerticalText from the style of the parent object.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Style"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Style.ResetVerticalText">
            <summary>
            Resets the inheritance state of the style VerticalText.
            </summary>
            <remarks>
            This method resets the inheritance state of the style VerticalText.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Style"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.Title">
            <summary>
            The Title class is used to describe the appearance of the Header and the Footer.
            </summary>
        </member>
        <member name="P:C1.Win.C1Chart3D.Title.Compass">
            <summary>
            Gets or sets the general positioning of the title.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Title"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Title.Location">
            <summary>
            Gets or sets the location of the title in chart control client coordinates.  
            </summary>
            <remarks>
            The Location property always returns the actual location of the upper, left corner of the chart
            element it describes whether or not the element placement is manual or automatic. Modifying this value
            will change LocationDefault.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Title"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Title.Size">
            <summary>
            Gets or sets the size of the title in chart control client coordinates. 
            </summary>
            <remarks>
            The Size property always returns the actual size of the chart element it describes
            whether or not the element placement is manual or automatic. Modifying this value will change SizeDefault.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Title"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Title.LocationDefault">
            <summary>
            Gets or sets the default location of the title.
            </summary>
            <remarks>
            The LocationDefault property specifies the location of the upper, left corner of the chart element it describes.
            Non-negative values indicate the explicit position in chart client coordinates to place the chart element. 
            Negative values will allow auto-positioning.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Title"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Title.ShouldSerializeLocationDefault">
            <summary>
            Returns false if the Title LocationDefault property is in the default state.
            </summary>
            <returns>
            Boolean value.
            </returns>
            <remarks>
            The default state is LocationDefault.Width = -1, LocationDefault.Height = -1, which results in automatic
            location of the Title based upon the Compass property.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Title"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Title.SizeDefault">
            <summary>
            Gets or sets the default size of the title. 
            </summary>
            <remarks>
            The SizeDefault property specifies the size of the chart element it describes. Non-negative values indicate
            the explicit width and height in chart client coordinates to place the chart element. 
            Negative values will allow auto-positioning.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Title"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Title.ShouldSerializeSizeDefault">
            <summary>
            Returns false if the Title SizeDefault property is in the default state.
            </summary>
            <returns>
            Boolean value.
            </returns>
            <remarks>
            The default state is SizeDefault.Width = -1, SizeDefault.Height = -1, which results in automatic sizing of the Title.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Title"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Title.Text">
            <summary>
            Gets or sets title text.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Title"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Title.Style">
            <summary>
            Gets the title style.
            </summary>
            <remarks>
            Inherits from the C1Chart3D style.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Title"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Title.ShouldSerializeStyle">
            <summary>
            Returns false if the Title Style property is in the default state.
            </summary>
            <returns>
            Boolean value.
            </returns>
            <remarks>
            The default state is to inherit the Style from the C1Chart3D Style property.
            </remarks>
            <seealso cref="T:C1.Win.C1Chart3D.Title"/>
        </member>
        <member name="M:C1.Win.C1Chart3D.Title.ResetStyle">
            <summary>
            Resets the style to its default state.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Title"/>
        </member>
        <member name="P:C1.Win.C1Chart3D.Title.Visible">
            <summary>
            Gets or sets the title visibility.
            </summary>
            <seealso cref="T:C1.Win.C1Chart3D.Title"/>
        </member>
        <member name="T:C1.Win.C1Chart3D.WizardProps">
            <summary>
            Summary description for C1Chart3DDesigner.
            </summary>
        </member>
        <member name="M:C1.Win.C1Chart3D.ChartDesignerActionList.GetSortedActionItems">
            <inheritdoc/>
        </member>
        <member name="T:C1.Util.Licensing.ProviderInfo">
            <summary>
            <para>Provides static <see cref="M:C1.Util.Licensing.ProviderInfo.Validate(System.Type,System.Object)"/> methods that 
            should be called from the constructors of licensed classes.</para>
            <para>Also provides a static <see cref="M:C1.Util.Licensing.ProviderInfo.ShowAboutBox(System.Object)"/> method that can 
            be called to show the about box with product and licensing information.</para>
            </summary>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.Validate(System.Type,System.Object)">
            <summary>
            Perform license validation. Call this method from the licensed object's 
            constructor to save a license key at design time, validate it at runtime, 
            and display a nag dialog if a valid license is not found.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="instance">Reference to the licensed object (not currently used).</param>
            <returns>A <see cref="T:C1.Util.Licensing.LicenseInfo"/> object that contains information about the license.</returns>
            <remarks>
            <para>Check the <b>ShouldNag</b> property of the returned <see cref="T:C1.Util.Licensing.LicenseInfo"/> 
            to determine whether the licensed class should nag the user. This value is set
            to true in situations where a valid license was not found but a nag dialog
            could not be displayed. In these cases, the licensed class is supposed to nag
            in some other way (with a watermark for example).</para>
            </remarks>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.Validate(System.Type,System.Object,System.Boolean)">
            <summary>
            Perform license validation. Call this method from the licensed object's 
            constructor to save a license key at design time, validate it at runtime, 
            and display a nag dialog if a valid license is not found.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="instance">Reference to the licensed object (not currently used).</param>
            <param name="showNagDialog">Whether the nag dialog should be displayed when a valid license is not found.</param>
            <returns>A <see cref="T:C1.Util.Licensing.LicenseInfo"/> object that contains information about the license.</returns>
            <remarks>
            <para>This overload was created for use in WPF. It should be called in the control's constructor
            in order to support license persistence correctly. But it should not show the nag dialog until the
            control is fully loaded, or the VS designer may remain blank.</para>
            <para>So the solution is this:</para>
            <code>
            LicenseInfo _licInfo;
            public LicensedControl()
            {
              // check license but don't nag yet
              _licInfo = ProviderInfo.Validate(typeof(LicensedControl), this, false);
              
              // perform licensing after control is fully loaded
              Loaded += LicensedControl_Loaded;
            }
            void LicensedControl_Loaded(object sender, RoutedEventArgs e)
            {
              // nag after loading
              if (_licInfo.ShouldNag)
              {
                ProviderInfo.ShowAboutBox(this);
              }
            }
            </code>
            </remarks>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.Validate(System.Type,System.Object,System.Reflection.Assembly,System.String)">
            <summary>
            Version of Validate used by constructors that take runtime keys.
            </summary>
            <param name="type">Type of licensed object (use typeof() and not GetType()).</param>
            <param name="instance">Reference to the licensed object.</param>
            <param name="callingAsm">Assembly that contains the owner licensed control.</param>
            <param name="runtimeKey">Any valid C1 runtime key.</param>
            <returns>A <see cref="T:C1.Util.Licensing.LicenseInfo"/> with information about the runtime key.</returns>
            <remarks>
            <para>This allows a licensed C1 class to create other C1 objects bypassing 
            license verification for the child objects.</para>
            <para>For extra safety, we check that the owner object is defined in an assembly
            the contains a 'C1ProductInfo' attribute.</para>
            </remarks>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.ShowAboutBox(System.Object)">
            <summary>
            Shows the About Box for an instance of a C1 product.
            </summary>
        </member>
        <member name="M:C1.Util.Licensing.ProviderInfo.GetC1Type(System.Object)">
            <summary>
            Get the type whose assembly contains a 'C1ProductInfoAttribute'.
            </summary>
            <param name="instance">Instance of an object whose type is to be checked.</param>
            <returns>The type whose assembly contains a 'C1ProductInfoAttribute'</returns>
        </member>
        <member name="T:C1.Util.Licensing.LicenseInfo">
            <summary>
            Contains information about a license stored in an application.
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.C1AboutNameAttribute">
            <summary>
            Attribute used to specify the product name shown on the About Box.
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.C1AllowedCallerAttribute">
            <summary>
            Attribute used to specify assemblies that can use this product without a license.
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.C1ProductInfoAttribute">
            <summary>
            Attribute used to attach licensing/product information to assemblies.
            </summary>
        </member>
        <member name="F:C1.Util.Licensing.VersionConst.VerString">
            <summary>
            WinForms version string representation (4 dot-delimited numbers).
            </summary>
        </member>
        <member name="F:C1.Util.Licensing.VersionConst.VersionStr">
            <summary>
            Same as <see cref="F:C1.Util.Licensing.VersionConst.VerString"/>.
            </summary>
        </member>
        <member name="T:C1.Util.Licensing.AssemblyNames">
            <summary>
            Specifies assembly name parts, used by AssemblyCommonInfo to generate actual assembly names.
            </summary>
        </member>
        <member name="T:C1.Util.Localization.C1Localizer">
            <summary>
            Localization tables and methods for looking up localized strings.
            </summary>
        </member>
        <member name="T:C1.Util.Localization.C1DescriptionAttribute">
            <summary>
            C1DescriptionAttribute replaces the DescriptionAttribute
            and uses the C1Localizer class to return the localized Attribute string
            </summary>
        </member>
        <member name="T:C1.Util.Localization.C1CategoryAttribute">
            <summary>
            C1CategoryAttribute replaces the CategoryAttribute
            and uses the C1Localizer class to return the localized Attribute string
            </summary>
        </member>
        <member name="T:C1.Util.Localization.StringTables">
            <summary>
            StringTables
            this class contains a single static method InitTables that populates the
            tables used by the Localizer class.
            </summary>
        </member>
    </members>
</doc>
